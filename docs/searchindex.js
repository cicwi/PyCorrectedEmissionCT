Search.setIndex({"alltitles": {"0.1.0 - 2019-10-29": [[2, "id68"]], "0.2.0 - 2019-11-05": [[2, "id65"]], "0.2.1 - 2020-02-25": [[2, "id62"]], "0.2.2 - 2020-03-30": [[2, "id59"]], "0.2.3 - 2020-05-05": [[2, "id56"]], "0.2.4 - 2020-06-01": [[2, "id53"]], "0.3.0 - 2020-09-23": [[2, "id50"]], "0.3.1 - 2020-10-20": [[2, "id47"]], "0.3.2 - 2021-04-15": [[2, "id44"]], "0.4.0 - 2021-11-29": [[2, "id41"]], "0.4.1 - 2021-12-06": [[2, "id38"]], "0.4.2 - 2022-01-14": [[2, "id35"]], "0.5.0 - 2022-04-14": [[2, "id32"]], "0.5.1 - 2022-06-23": [[2, "id29"]], "0.6.0 - 2022-09-08": [[2, "id26"]], "0.7.0 - 2022-10-11": [[2, "id23"]], "0.7.1 - 2022-10-31": [[2, "id20"]], "0.7.2 - 2023-02-17": [[2, "id17"]], "0.8.0 - 2023-04-06": [[2, "id14"]], "0.8.1 - 2023-05-16": [[2, "id11"]], "0.9.0 - 2023-12-24": [[2, "id8"]], "0.9.1 - 2024-03-20": [[2, "id5"]], "1.0.0rc1 - 2024-10-03": [[2, "rc1-2024-10-03"]], "1.0.0rc2 - 2024-11-13": [[2, "rc2-2024-11-13"]], "1.0.0rc3 - 2025-02-01": [[2, "rc3-2025-02-01"]], "Added": [[2, "added"], [2, "id1"], [2, "id3"], [2, "id6"], [2, "id9"], [2, "id12"], [2, "id15"], [2, "id18"], [2, "id21"], [2, "id24"], [2, "id27"], [2, "id30"], [2, "id33"], [2, "id36"], [2, "id39"], [2, "id42"], [2, "id45"], [2, "id48"], [2, "id51"], [2, "id54"], [2, "id57"], [2, "id60"], [2, "id63"], [2, "id66"], [2, "id69"]], "Alignment": [[1, null]], "Attenuation correction": [[12, "attenuation-correction"]], "Authors and contributors": [[11, "authors-and-contributors"]], "Changelog": [[2, null]], "Data fidelity terms": [[12, "data-fidelity-terms"]], "Data terms and regularization": [[12, "data-terms-and-regularization"]], "Detector position": [[7, "detector-position"]], "FBP": [[12, "fbp"]], "Fixed": [[2, "fixed"], [2, "id2"], [2, "id4"], [2, "id7"], [2, "id10"], [2, "id13"], [2, "id16"], [2, "id19"], [2, "id22"], [2, "id25"], [2, "id28"], [2, "id31"], [2, "id34"], [2, "id37"], [2, "id40"], [2, "id43"], [2, "id46"], [2, "id49"], [2, "id52"], [2, "id55"], [2, "id58"], [2, "id61"], [2, "id64"], [2, "id67"]], "Getting Started": [[11, "getting-started"]], "Guided regularization parameter selection": [[12, "guided-regularization-parameter-selection"]], "How to contribute": [[11, "how-to-contribute"]], "Incoming beam direction": [[7, "incoming-beam-direction"]], "Indices and tables": [[8, "indices-and-tables"]], "Installing from PyPI": [[11, "installing-from-pypi"]], "Installing from source": [[11, "installing-from-source"]], "Installing with conda": [[11, "installing-with-conda"]], "License": [[11, "license"]], "Material modeling": [[10, "material-modeling"]], "Module contents": [[3, "module-corrct"], [4, "module-corrct.alignment"], [5, "module-corrct.physics"], [6, "module-corrct.processing"]], "Physics": [[10, null]], "Pre-alignment": [[1, "pre-alignment"]], "PyCorrectedEmissionCT (corrct)": [[11, null]], "Reconstructing projection data": [[12, "reconstructing-projection-data"]], "Reconstruction geometry": [[7, null]], "References": [[12, "references"]], "Regularizers": [[12, "regularizers"]], "Rotation direction and sinogram flip": [[7, "rotation-direction-and-sinogram-flip"]], "Running the examples": [[11, "running-the-examples"]], "SIRT, PDHG, and MLEM": [[12, "sirt-pdhg-and-mlem"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"]], "Subpackages": [[3, "subpackages"]], "The data model": [[12, "the-data-model"]], "The geometry": [[12, "the-geometry"]], "The projectors": [[12, "the-projectors"]], "The solvers": [[12, "the-solvers"]], "Tutorial": [[12, null]], "Welcome to the documentation of PyCorrectedEmissionCT!": [[8, null]], "X-ray Fluorescence": [[10, "x-ray-fluorescence"]], "X-ray Phase Contrast": [[10, "x-ray-phase-contrast"]], "corrct": [[9, null]], "corrct package": [[3, null]], "corrct.alignment package": [[4, null]], "corrct.alignment.centering module": [[4, "module-corrct.alignment.centering"]], "corrct.alignment.fitting module": [[4, "module-corrct.alignment.fitting"]], "corrct.alignment.shifts module": [[4, "module-corrct.alignment.shifts"]], "corrct.data_terms module": [[3, "module-corrct.data_terms"]], "corrct.denoisers module": [[3, "module-corrct.denoisers"]], "corrct.filters module": [[3, "module-corrct.filters"]], "corrct.models module": [[3, "module-corrct.models"]], "corrct.operators module": [[3, "module-corrct.operators"]], "corrct.param_tuning module": [[3, "module-corrct.param_tuning"]], "corrct.physics package": [[5, null]], "corrct.physics.attenuation module": [[5, "module-corrct.physics.attenuation"]], "corrct.physics.materials module": [[5, "module-corrct.physics.materials"]], "corrct.physics.phase module": [[5, "module-corrct.physics.phase"]], "corrct.physics.xraylib_helper module": [[5, "module-corrct.physics.xraylib_helper"]], "corrct.physics.xrf module": [[5, "module-corrct.physics.xrf"]], "corrct.processing package": [[6, null]], "corrct.processing.misc module": [[6, "module-corrct.processing.misc"]], "corrct.processing.noise module": [[6, "module-corrct.processing.noise"]], "corrct.processing.post module": [[6, "module-corrct.processing.post"]], "corrct.processing.pre module": [[6, "module-corrct.processing.pre"]], "corrct.projectors module": [[3, "module-corrct.projectors"]], "corrct.regularizers module": [[3, "module-corrct.regularizers"]], "corrct.solvers module": [[3, "module-corrct.solvers"]], "corrct.struct_illum module": [[3, "module-corrct.struct_illum"]], "corrct.testing module": [[3, "module-corrct.testing"]]}, "docnames": ["LICENSE", "alignment_tools", "changelog", "corrct", "corrct.alignment", "corrct.physics", "corrct.processing", "geometry", "index", "modules", "physics_model", "readme", "tutorial"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["LICENSE.md", "alignment_tools.md", "changelog.md", "corrct.rst", "corrct.alignment.rst", "corrct.physics.rst", "corrct.processing.rst", "geometry.md", "index.rst", "modules.rst", "physics_model.md", "readme.md", "tutorial.md"], "indexentries": {"a (corrct.projectors.projectormatrix attribute)": [[3, "corrct.projectors.ProjectorMatrix.A", false]], "absolute() (corrct.operators.basetransform method)": [[3, "corrct.operators.BaseTransform.absolute", false]], "absolute() (corrct.operators.transformconvolution method)": [[3, "corrct.operators.TransformConvolution.absolute", false]], "absolute() (corrct.operators.transformdiagonalscaling method)": [[3, "corrct.operators.TransformDiagonalScaling.absolute", false]], "absolute() (corrct.operators.transformfunctions method)": [[3, "corrct.operators.TransformFunctions.absolute", false]], "absolute() (corrct.projectors.projectormatrix method)": [[3, "corrct.projectors.ProjectorMatrix.absolute", false]], "absolute() (corrct.struct_illum.projectorghostimaging method)": [[3, "corrct.struct_illum.ProjectorGhostImaging.absolute", false]], "add_noise() (in module corrct.testing)": [[3, "corrct.testing.add_noise", false]], "adj_shape (corrct.operators.basetransform attribute)": [[3, "corrct.operators.BaseTransform.adj_shape", false]], "adjust_sampling_scaling() (corrct.struct_illum.projectorghostimaging method)": [[3, "corrct.struct_illum.ProjectorGhostImaging.adjust_sampling_scaling", false]], "angle_rad (corrct.physics.xrf.detectorxrf attribute)": [[5, "corrct.physics.xrf.DetectorXRF.angle_rad", false]], "angles_det_rad (corrct.physics.attenuation.attenuationvolume attribute)": [[5, "corrct.physics.attenuation.AttenuationVolume.angles_det_rad", false]], "angles_rad (corrct.alignment.shifts.detectorshiftsbase attribute)": [[4, "corrct.alignment.shifts.DetectorShiftsBase.angles_rad", false]], "angles_rot_rad (corrct.physics.attenuation.attenuationvolume attribute)": [[5, "corrct.physics.attenuation.AttenuationVolume.angles_rot_rad", false]], "angles_rot_rad (corrct.projectors.projectoruncorrected property)": [[3, "corrct.projectors.ProjectorUncorrected.angles_rot_rad", false]], "apply_filter() (corrct.filters.filter method)": [[3, "corrct.filters.Filter.apply_filter", false]], "apply_flat_field() (in module corrct.processing.pre)": [[6, "corrct.processing.pre.apply_flat_field", false]], "apply_minus_log() (in module corrct.processing.pre)": [[6, "corrct.processing.pre.apply_minus_log", false]], "apply_propagation_filter() (in module corrct.physics.phase)": [[5, "corrct.physics.phase.apply_propagation_filter", false]], "apply_proximal() (corrct.data_terms.datafidelity_huber method)": [[3, "corrct.data_terms.DataFidelity_Huber.apply_proximal", false]], "apply_proximal() (corrct.data_terms.datafidelity_kl method)": [[3, "corrct.data_terms.DataFidelity_KL.apply_proximal", false]], "apply_proximal() (corrct.data_terms.datafidelity_l1 method)": [[3, "corrct.data_terms.DataFidelity_l1.apply_proximal", false]], "apply_proximal() (corrct.data_terms.datafidelity_l2 method)": [[3, "corrct.data_terms.DataFidelity_l2.apply_proximal", false]], "apply_proximal() (corrct.data_terms.datafidelity_l2b method)": [[3, "corrct.data_terms.DataFidelity_l2b.apply_proximal", false]], "apply_proximal() (corrct.data_terms.datafidelity_ln method)": [[3, "corrct.data_terms.DataFidelity_ln.apply_proximal", false]], "apply_proximal() (corrct.data_terms.datafidelitybase method)": [[3, "corrct.data_terms.DataFidelityBase.apply_proximal", false]], "apply_proximal() (corrct.regularizers.baseregularizer method)": [[3, "corrct.regularizers.BaseRegularizer.apply_proximal", false]], "apply_proximal() (corrct.regularizers.constraint_lowerlimit method)": [[3, "corrct.regularizers.Constraint_LowerLimit.apply_proximal", false]], "apply_proximal() (corrct.regularizers.constraint_upperlimit method)": [[3, "corrct.regularizers.Constraint_UpperLimit.apply_proximal", false]], "apply_proximal() (corrct.regularizers.regularizer_dwl method)": [[3, "corrct.regularizers.Regularizer_dwl.apply_proximal", false]], "apply_proximal() (corrct.regularizers.regularizer_swl method)": [[3, "corrct.regularizers.Regularizer_swl.apply_proximal", false]], "apply_proximal() (corrct.regularizers.regularizer_vl1wl method)": [[3, "corrct.regularizers.Regularizer_vl1wl.apply_proximal", false]], "apply_proximal() (corrct.regularizers.regularizer_vtv method)": [[3, "corrct.regularizers.Regularizer_VTV.apply_proximal", false]], "as_reference() (corrct.alignment.centering.recentervolume method)": [[4, "corrct.alignment.centering.RecenterVolume.as_reference", false]], "assign_data() (corrct.data_terms.datafidelity_huber method)": [[3, "corrct.data_terms.DataFidelity_Huber.assign_data", false]], "assign_data() (corrct.data_terms.datafidelity_l1b method)": [[3, "corrct.data_terms.DataFidelity_l1b.assign_data", false]], "assign_data() (corrct.data_terms.datafidelity_l2 method)": [[3, "corrct.data_terms.DataFidelity_l2.assign_data", false]], "assign_data() (corrct.data_terms.datafidelity_l2b method)": [[3, "corrct.data_terms.DataFidelity_l2b.assign_data", false]], "assign_data() (corrct.data_terms.datafidelity_wl2 method)": [[3, "corrct.data_terms.DataFidelity_wl2.assign_data", false]], "assign_data() (corrct.data_terms.datafidelitybase method)": [[3, "corrct.data_terms.DataFidelityBase.assign_data", false]], "att_vol_angles (corrct.projectors.projectorattenuationxrf attribute)": [[3, "corrct.projectors.ProjectorAttenuationXRF.att_vol_angles", false]], "attenuationvolume (class in corrct.physics.attenuation)": [[5, "corrct.physics.attenuation.AttenuationVolume", false]], "axes (corrct.operators.basewavelettransform attribute)": [[3, "corrct.operators.BaseWaveletTransform.axes", false]], "azimuthal_integration() (in module corrct.processing.misc)": [[6, "corrct.processing.misc.azimuthal_integration", false]], "background (corrct.data_terms.datafidelitybase attribute)": [[3, "corrct.data_terms.DataFidelityBase.background", false]], "background_from_margin() (in module corrct.processing.pre)": [[6, "corrct.processing.pre.background_from_margin", false]], "ball() (in module corrct.processing.misc)": [[6, "corrct.processing.misc.ball", false]], "baseparametertuning (class in corrct.param_tuning)": [[3, "corrct.param_tuning.BaseParameterTuning", false]], "baseregularizer (class in corrct.regularizers)": [[3, "corrct.regularizers.BaseRegularizer", false]], "baseregularizer_med (class in corrct.regularizers)": [[3, "corrct.regularizers.BaseRegularizer_med", false]], "basetransform (class in corrct.operators)": [[3, "corrct.operators.BaseTransform", false]], "basewavelettransform (class in corrct.operators)": [[3, "corrct.operators.BaseWaveletTransform", false]], "basisoptions (class in corrct.filters)": [[3, "corrct.filters.BasisOptions", false]], "basisoptionsblocks (class in corrct.filters)": [[3, "corrct.filters.BasisOptionsBlocks", false]], "basisoptionswavelets (class in corrct.filters)": [[3, "corrct.filters.BasisOptionsWavelets", false]], "bin_imgs() (in module corrct.processing.pre)": [[6, "corrct.processing.pre.bin_imgs", false]], "bin_masks() (corrct.struct_illum.maskcollection method)": [[3, "corrct.struct_illum.MaskCollection.bin_masks", false]], "binning_start (corrct.filters.basisoptionsblocks attribute)": [[3, "corrct.filters.BasisOptionsBlocks.binning_start", false]], "binning_start (corrct.filters.filtermr attribute)": [[3, "corrct.filters.FilterMR.binning_start", false]], "binning_type (corrct.filters.basisoptionsblocks attribute)": [[3, "corrct.filters.BasisOptionsBlocks.binning_type", false]], "binning_type (corrct.filters.filtermr attribute)": [[3, "corrct.filters.FilterMR.binning_type", false]], "bp() (corrct.operators.projectoroperator method)": [[3, "corrct.operators.ProjectorOperator.bp", false]], "bp() (corrct.projectors.projectorattenuationxrf method)": [[3, "corrct.projectors.ProjectorAttenuationXRF.bp", false]], "bp() (corrct.projectors.projectormatrix method)": [[3, "corrct.projectors.ProjectorMatrix.bp", false]], "bp() (corrct.projectors.projectoruncorrected method)": [[3, "corrct.projectors.ProjectorUncorrected.bp", false]], "bp() (corrct.struct_illum.projectorghostimaging method)": [[3, "corrct.struct_illum.ProjectorGhostImaging.bp", false]], "bp_angle() (corrct.projectors.projectorattenuationxrf method)": [[3, "corrct.projectors.ProjectorAttenuationXRF.bp_angle", false]], "bp_angle() (corrct.projectors.projectoruncorrected method)": [[3, "corrct.projectors.ProjectorUncorrected.bp_angle", false]], "circular_mask() (in module corrct.processing.misc)": [[6, "corrct.processing.misc.circular_mask", false]], "collapse_detectors() (corrct.projectors.projectorattenuationxrf method)": [[3, "corrct.projectors.ProjectorAttenuationXRF.collapse_detectors", false]], "com() (in module corrct.processing.post)": [[6, "corrct.processing.post.com", false]], "combine_shifts_vu() (in module corrct.models)": [[3, "corrct.models.combine_shifts_vu", false]], "compute_data_dual_dot() (corrct.data_terms.datafidelitybase method)": [[3, "corrct.data_terms.DataFidelityBase.compute_data_dual_dot", false]], "compute_eigen_flats() (in module corrct.processing.pre)": [[6, "corrct.processing.pre.compute_eigen_flats", false]], "compute_error_power() (in module corrct.testing)": [[3, "corrct.testing.compute_error_power", false]], "compute_filter() (corrct.filters.filter method)": [[3, "corrct.filters.Filter.compute_filter", false]], "compute_filter() (corrct.filters.filtercustom method)": [[3, "corrct.filters.FilterCustom.compute_filter", false]], "compute_filter() (corrct.filters.filterfbp method)": [[3, "corrct.filters.FilterFBP.compute_filter", false]], "compute_filter() (corrct.filters.filtermr method)": [[3, "corrct.filters.FilterMR.compute_filter", false]], "compute_frc() (in module corrct.processing.post)": [[6, "corrct.processing.post.compute_frc", false]], "compute_loss_values() (corrct.param_tuning.baseparametertuning method)": [[3, "corrct.param_tuning.BaseParameterTuning.compute_loss_values", false]], "compute_loss_values() (corrct.param_tuning.crossvalidation method)": [[3, "corrct.param_tuning.CrossValidation.compute_loss_values", false]], "compute_loss_values() (corrct.param_tuning.lcurve method)": [[3, "corrct.param_tuning.LCurve.compute_loss_values", false]], "compute_maps() (corrct.physics.attenuation.attenuationvolume method)": [[5, "corrct.physics.attenuation.AttenuationVolume.compute_maps", false]], "compute_possible_mask_sizes() (corrct.struct_illum.maskgeneratormura static method)": [[3, "corrct.struct_illum.MaskGeneratorMURA.compute_possible_mask_sizes", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelity_huber method)": [[3, "corrct.data_terms.DataFidelity_Huber.compute_primal_dual_gap", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelity_kl method)": [[3, "corrct.data_terms.DataFidelity_KL.compute_primal_dual_gap", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelity_l1 method)": [[3, "corrct.data_terms.DataFidelity_l1.compute_primal_dual_gap", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelity_l2 method)": [[3, "corrct.data_terms.DataFidelity_l2.compute_primal_dual_gap", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelity_l2b method)": [[3, "corrct.data_terms.DataFidelity_l2b.compute_primal_dual_gap", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelity_ln method)": [[3, "corrct.data_terms.DataFidelity_ln.compute_primal_dual_gap", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelitybase method)": [[3, "corrct.data_terms.DataFidelityBase.compute_primal_dual_gap", false]], "compute_reconstruction_and_loss() (corrct.param_tuning.baseparametertuning method)": [[3, "corrct.param_tuning.BaseParameterTuning.compute_reconstruction_and_loss", false]], "compute_reconstruction_error() (corrct.param_tuning.baseparametertuning method)": [[3, "corrct.param_tuning.BaseParameterTuning.compute_reconstruction_error", false]], "compute_residual() (corrct.data_terms.datafidelity_kl method)": [[3, "corrct.data_terms.DataFidelity_KL.compute_residual", false]], "compute_residual() (corrct.data_terms.datafidelity_l2b method)": [[3, "corrct.data_terms.DataFidelity_l2b.compute_residual", false]], "compute_residual() (corrct.data_terms.datafidelity_wl2 method)": [[3, "corrct.data_terms.DataFidelity_wl2.compute_residual", false]], "compute_residual() (corrct.data_terms.datafidelitybase method)": [[3, "corrct.data_terms.DataFidelityBase.compute_residual", false]], "compute_residual() (corrct.solvers.sart method)": [[3, "corrct.solvers.SART.compute_residual", false]], "compute_residual_norm() (corrct.data_terms.datafidelity_huber method)": [[3, "corrct.data_terms.DataFidelity_Huber.compute_residual_norm", false]], "compute_residual_norm() (corrct.data_terms.datafidelity_kl method)": [[3, "corrct.data_terms.DataFidelity_KL.compute_residual_norm", false]], "compute_residual_norm() (corrct.data_terms.datafidelity_l1 method)": [[3, "corrct.data_terms.DataFidelity_l1.compute_residual_norm", false]], "compute_residual_norm() (corrct.data_terms.datafidelity_l2 method)": [[3, "corrct.data_terms.DataFidelity_l2.compute_residual_norm", false]], "compute_residual_norm() (corrct.data_terms.datafidelity_ln method)": [[3, "corrct.data_terms.DataFidelity_ln.compute_residual_norm", false]], "compute_residual_norm() (corrct.data_terms.datafidelity_wl2 method)": [[3, "corrct.data_terms.DataFidelity_wl2.compute_residual_norm", false]], "compute_residual_norm() (corrct.data_terms.datafidelitybase method)": [[3, "corrct.data_terms.DataFidelityBase.compute_residual_norm", false]], "compute_update_primal() (corrct.regularizers.baseregularizer method)": [[3, "corrct.regularizers.BaseRegularizer.compute_update_primal", false]], "compute_variance_poisson() (in module corrct.processing.noise)": [[6, "corrct.processing.noise.compute_variance_poisson", false]], "compute_variance_transmission() (in module corrct.processing.noise)": [[6, "corrct.processing.noise.compute_variance_transmission", false]], "compute_variance_weight() (in module corrct.processing.noise)": [[6, "corrct.processing.noise.compute_variance_weight", false]], "constraint_lowerlimit (class in corrct.regularizers)": [[3, "corrct.regularizers.Constraint_LowerLimit", false]], "constraint_upperlimit (class in corrct.regularizers)": [[3, "corrct.regularizers.Constraint_UpperLimit", false]], "convert_energy_to_wlength() (in module corrct.physics)": [[5, "corrct.physics.convert_energy_to_wlength", false]], "convert_wlength_to_energy() (in module corrct.physics)": [[5, "corrct.physics.convert_wlength_to_energy", false]], "copy() (corrct.models.projectiongeometry method)": [[3, "corrct.models.ProjectionGeometry.copy", false]], "corrct": [[3, "module-corrct", false]], "corrct.alignment": [[4, "module-corrct.alignment", false]], "corrct.alignment.centering": [[4, "module-corrct.alignment.centering", false]], "corrct.alignment.fitting": [[4, "module-corrct.alignment.fitting", false]], "corrct.alignment.shifts": [[4, "module-corrct.alignment.shifts", false]], "corrct.data_terms": [[3, "module-corrct.data_terms", false]], "corrct.denoisers": [[3, "module-corrct.denoisers", false]], "corrct.filters": [[3, "module-corrct.filters", false]], "corrct.models": [[3, "module-corrct.models", false]], "corrct.operators": [[3, "module-corrct.operators", false]], "corrct.param_tuning": [[3, "module-corrct.param_tuning", false]], "corrct.physics": [[5, "module-corrct.physics", false]], "corrct.physics.attenuation": [[5, "module-corrct.physics.attenuation", false]], "corrct.physics.materials": [[5, "module-corrct.physics.materials", false]], "corrct.physics.phase": [[5, "module-corrct.physics.phase", false]], "corrct.physics.xraylib_helper": [[5, "module-corrct.physics.xraylib_helper", false]], "corrct.physics.xrf": [[5, "module-corrct.physics.xrf", false]], "corrct.processing": [[6, "module-corrct.processing", false]], "corrct.processing.misc": [[6, "module-corrct.processing.misc", false]], "corrct.processing.noise": [[6, "module-corrct.processing.noise", false]], "corrct.processing.post": [[6, "module-corrct.processing.post", false]], "corrct.processing.pre": [[6, "module-corrct.processing.pre", false]], "corrct.projectors": [[3, "module-corrct.projectors", false]], "corrct.regularizers": [[3, "module-corrct.regularizers", false]], "corrct.solvers": [[3, "module-corrct.solvers", false]], "corrct.struct_illum": [[3, "module-corrct.struct_illum", false]], "corrct.testing": [[3, "module-corrct.testing", false]], "create_basis() (in module corrct.filters)": [[3, "corrct.filters.create_basis", false]], "create_basis_wavelet() (in module corrct.filters)": [[3, "corrct.filters.create_basis_wavelet", false]], "create_phantom_nuclei3d() (in module corrct.testing)": [[3, "corrct.testing.create_phantom_nuclei3d", false]], "create_random_test_mask() (in module corrct.param_tuning)": [[3, "corrct.param_tuning.create_random_test_mask", false]], "create_sino() (in module corrct.testing)": [[3, "corrct.testing.create_sino", false]], "create_sino_transmission() (in module corrct.testing)": [[3, "corrct.testing.create_sino_transmission", false]], "crossvalidation (class in corrct.param_tuning)": [[3, "corrct.param_tuning.CrossValidation", false]], "data (corrct.data_terms.datafidelitybase attribute)": [[3, "corrct.data_terms.DataFidelityBase.data", false]], "data_vwu (corrct.alignment.shifts.detectorshiftsbase attribute)": [[4, "corrct.alignment.shifts.DetectorShiftsBase.data_vwu", false]], "datafidelity_huber (class in corrct.data_terms)": [[3, "corrct.data_terms.DataFidelity_Huber", false]], "datafidelity_kl (class in corrct.data_terms)": [[3, "corrct.data_terms.DataFidelity_KL", false]], "datafidelity_l1 (class in corrct.data_terms)": [[3, "corrct.data_terms.DataFidelity_l1", false]], "datafidelity_l12 (class in corrct.data_terms)": [[3, "corrct.data_terms.DataFidelity_l12", false]], "datafidelity_l1b (class in corrct.data_terms)": [[3, "corrct.data_terms.DataFidelity_l1b", false]], "datafidelity_l2 (class in corrct.data_terms)": [[3, "corrct.data_terms.DataFidelity_l2", false]], "datafidelity_l2b (class in corrct.data_terms)": [[3, "corrct.data_terms.DataFidelity_l2b", false]], "datafidelity_ln (class in corrct.data_terms)": [[3, "corrct.data_terms.DataFidelity_ln", false]], "datafidelity_wl2 (class in corrct.data_terms)": [[3, "corrct.data_terms.DataFidelity_wl2", false]], "datafidelitybase (class in corrct.data_terms)": [[3, "corrct.data_terms.DataFidelityBase", false]], "decompose_qr_masks() (in module corrct.struct_illum)": [[3, "corrct.struct_illum.decompose_qr_masks", false]], "denoise_image() (in module corrct.denoisers)": [[3, "corrct.denoisers.denoise_image", false]], "destripe_wlf_vwu() (in module corrct.processing.pre)": [[6, "corrct.processing.pre.destripe_wlf_vwu", false]], "det_pos_xyz (corrct.models.projectiongeometry attribute)": [[3, "corrct.models.ProjectionGeometry.det_pos_xyz", false]], "det_shape_vu (corrct.models.projectiongeometry attribute)": [[3, "corrct.models.ProjectionGeometry.det_shape_vu", false]], "det_u_xyz (corrct.models.projectiongeometry attribute)": [[3, "corrct.models.ProjectionGeometry.det_u_xyz", false]], "det_v_xyz (corrct.models.projectiongeometry attribute)": [[3, "corrct.models.ProjectionGeometry.det_v_xyz", false]], "detectorshiftsbase (class in corrct.alignment.shifts)": [[4, "corrct.alignment.shifts.DetectorShiftsBase", false]], "detectorshiftspre (class in corrct.alignment.shifts)": [[4, "corrct.alignment.shifts.DetectorShiftsPRE", false]], "detectorshiftsxc (class in corrct.alignment.shifts)": [[4, "corrct.alignment.shifts.DetectorShiftsXC", false]], "detectorxrf (class in corrct.physics.xrf)": [[5, "corrct.physics.xrf.DetectorXRF", false]], "dir_shape (corrct.operators.basetransform attribute)": [[3, "corrct.operators.BaseTransform.dir_shape", false]], "direct_dwt() (corrct.operators.transformdecimatedwavelet method)": [[3, "corrct.operators.TransformDecimatedWavelet.direct_dwt", false]], "direct_svd() (corrct.operators.transformsvd method)": [[3, "corrct.operators.TransformSVD.direct_svd", false]], "direct_swt() (corrct.operators.transformstationarywavelet method)": [[3, "corrct.operators.TransformStationaryWavelet.direct_swt", false]], "distance_mm (corrct.physics.xrf.detectorxrf attribute)": [[5, "corrct.physics.xrf.DetectorXRF.distance_mm", false]], "divergence() (corrct.operators.transformgradient method)": [[3, "corrct.operators.TransformGradient.divergence", false]], "download_phantom() (in module corrct.testing)": [[3, "corrct.testing.download_phantom", false]], "dtype (corrct.filters.filter attribute)": [[3, "corrct.filters.Filter.dtype", false]], "dtype (corrct.physics.attenuation.attenuationvolume attribute)": [[5, "corrct.physics.attenuation.AttenuationVolume.dtype", false]], "dtype (corrct.regularizers.baseregularizer attribute)": [[3, "corrct.regularizers.BaseRegularizer.dtype", false]], "dtype (corrct.struct_illum.maskgenerator attribute)": [[3, "corrct.struct_illum.MaskGenerator.dtype", false]], "emitted_local (corrct.physics.attenuation.attenuationvolume attribute)": [[5, "corrct.physics.attenuation.AttenuationVolume.emitted_local", false]], "estimate_resolution() (in module corrct.processing.post)": [[6, "corrct.processing.post.estimate_resolution", false]], "estimate_resolution() (in module corrct.struct_illum)": [[3, "corrct.struct_illum.estimate_resolution", false]], "executor (corrct.projectors.projectorattenuationxrf attribute)": [[3, "corrct.projectors.ProjectorAttenuationXRF.executor", false]], "explicit() (corrct.operators.basetransform method)": [[3, "corrct.operators.BaseTransform.explicit", false]], "extent (corrct.models.volumegeometry property)": [[3, "corrct.models.VolumeGeometry.extent", false]], "extract_peak_region_nd() (in module corrct.alignment.fitting)": [[4, "corrct.alignment.fitting.extract_peak_region_nd", false]], "extract_peak_regions_1d() (in module corrct.alignment.fitting)": [[4, "corrct.alignment.fitting.extract_peak_regions_1d", false]], "fbp (class in corrct.solvers)": [[3, "corrct.solvers.FBP", false]], "fbp() (corrct.struct_illum.projectorghostimaging method)": [[3, "corrct.struct_illum.ProjectorGhostImaging.fbp", false]], "fbp_filter (corrct.filters.filter attribute)": [[3, "corrct.filters.Filter.fbp_filter", false]], "fft() (corrct.operators.transformfourier method)": [[3, "corrct.operators.TransformFourier.fft", false]], "filter (class in corrct.filters)": [[3, "corrct.filters.Filter", false]], "filter_fourier (corrct.filters.filter property)": [[3, "corrct.filters.Filter.filter_fourier", false]], "filter_name (corrct.filters.filterfbp attribute)": [[3, "corrct.filters.FilterFBP.filter_name", false]], "filter_real (corrct.filters.filter property)": [[3, "corrct.filters.Filter.filter_real", false]], "filtercustom (class in corrct.filters)": [[3, "corrct.filters.FilterCustom", false]], "filterfbp (class in corrct.filters)": [[3, "corrct.filters.FilterFBP", false]], "filtermr (class in corrct.filters)": [[3, "corrct.filters.FilterMR", false]], "filters (corrct.filters.filterfbp attribute)": [[3, "corrct.filters.FilterFBP.FILTERS", false]], "find_shifts_vu() (corrct.alignment.shifts.detectorshiftsxc method)": [[4, "corrct.alignment.shifts.DetectorShiftsXC.find_shifts_vu", false]], "fit_camera_tilt_angle() (in module corrct.alignment.fitting)": [[4, "corrct.alignment.fitting.fit_camera_tilt_angle", false]], "fit_func_min() (in module corrct.param_tuning)": [[3, "corrct.param_tuning.fit_func_min", false]], "fit_image_rotation_and_scale() (in module corrct.alignment.fitting)": [[4, "corrct.alignment.fitting.fit_image_rotation_and_scale", false]], "fit_loss_min() (corrct.param_tuning.crossvalidation method)": [[3, "corrct.param_tuning.CrossValidation.fit_loss_min", false]], "fit_scale_bias() (in module corrct.processing.post)": [[6, "corrct.processing.post.fit_scale_bias", false]], "fit_shifts_u_sad() (in module corrct.alignment.fitting)": [[4, "corrct.alignment.fitting.fit_shifts_u_sad", false]], "fit_shifts_vu_xc() (in module corrct.alignment.fitting)": [[4, "corrct.alignment.fitting.fit_shifts_vu_xc", false]], "fit_shifts_zyx_xc() (in module corrct.alignment.fitting)": [[4, "corrct.alignment.fitting.fit_shifts_zyx_xc", false]], "fit_sinusoid() (in module corrct.alignment.fitting)": [[4, "corrct.alignment.fitting.fit_sinusoid", false]], "fit_u() (corrct.alignment.shifts.detectorshiftspre method)": [[4, "corrct.alignment.shifts.DetectorShiftsPRE.fit_u", false]], "fit_u_180() (corrct.alignment.shifts.detectorshiftsxc method)": [[4, "corrct.alignment.shifts.DetectorShiftsXC.fit_u_180", false]], "fit_u_360() (corrct.alignment.shifts.detectorshiftsxc method)": [[4, "corrct.alignment.shifts.DetectorShiftsXC.fit_u_360", false]], "fit_v() (corrct.alignment.shifts.detectorshiftspre method)": [[4, "corrct.alignment.shifts.DetectorShiftsPRE.fit_v", false]], "fit_vu() (corrct.alignment.shifts.detectorshiftsxc method)": [[4, "corrct.alignment.shifts.DetectorShiftsXC.fit_vu", false]], "fit_vu_accum_drifts() (corrct.alignment.shifts.detectorshiftsxc method)": [[4, "corrct.alignment.shifts.DetectorShiftsXC.fit_vu_accum_drifts", false]], "flip_adjoint (corrct.operators.transformconvolution attribute)": [[3, "corrct.operators.TransformConvolution.flip_adjoint", false]], "fluoline (class in corrct.physics.xrf)": [[5, "corrct.physics.xrf.FluoLine", false]], "fp() (corrct.operators.projectoroperator method)": [[3, "corrct.operators.ProjectorOperator.fp", false]], "fp() (corrct.projectors.projectorattenuationxrf method)": [[3, "corrct.projectors.ProjectorAttenuationXRF.fp", false]], "fp() (corrct.projectors.projectormatrix method)": [[3, "corrct.projectors.ProjectorMatrix.fp", false]], "fp() (corrct.projectors.projectoruncorrected method)": [[3, "corrct.projectors.ProjectorUncorrected.fp", false]], "fp() (corrct.struct_illum.projectorghostimaging method)": [[3, "corrct.struct_illum.ProjectorGhostImaging.fp", false]], "fp_angle() (corrct.projectors.projectorattenuationxrf method)": [[3, "corrct.projectors.ProjectorAttenuationXRF.fp_angle", false]], "fp_angle() (corrct.projectors.projectoruncorrected method)": [[3, "corrct.projectors.ProjectorUncorrected.fp_angle", false]], "generate_collection() (corrct.struct_illum.maskgenerator method)": [[3, "corrct.struct_illum.MaskGenerator.generate_collection", false]], "generate_shifted_mask() (corrct.struct_illum.maskgenerator method)": [[3, "corrct.struct_illum.MaskGenerator.generate_shifted_mask", false]], "generate_shifted_mask() (corrct.struct_illum.maskgeneratorbernoulli method)": [[3, "corrct.struct_illum.MaskGeneratorBernoulli.generate_shifted_mask", false]], "generate_shifted_mask() (corrct.struct_illum.maskgeneratorhalfgaussian method)": [[3, "corrct.struct_illum.MaskGeneratorHalfGaussian.generate_shifted_mask", false]], "generate_shifted_mask() (corrct.struct_illum.maskgeneratormura method)": [[3, "corrct.struct_illum.MaskGeneratorMURA.generate_shifted_mask", false]], "generate_shifted_mask() (corrct.struct_illum.maskgeneratorpoint method)": [[3, "corrct.struct_illum.MaskGeneratorPoint.generate_shifted_mask", false]], "geom_type (corrct.models.projectiongeometry attribute)": [[3, "corrct.models.ProjectionGeometry.geom_type", false]], "geometry (class in corrct.models)": [[3, "corrct.models.Geometry", false]], "get_3d() (corrct.models.projectiongeometry method)": [[3, "corrct.models.ProjectionGeometry.get_3d", false]], "get_3d() (corrct.models.volumegeometry method)": [[3, "corrct.models.VolumeGeometry.get_3d", false]], "get_attenuation() (corrct.physics.materials.volumematerial method)": [[5, "corrct.physics.materials.VolumeMaterial.get_attenuation", false]], "get_available_filters() (corrct.filters.filterfbp method)": [[3, "corrct.filters.FilterFBP.get_available_filters", false]], "get_compound() (in module corrct.physics.xraylib_helper)": [[5, "corrct.physics.xraylib_helper.get_compound", false]], "get_compound_cross_section() (in module corrct.physics.xraylib_helper)": [[5, "corrct.physics.xraylib_helper.get_compound_cross_section", false]], "get_compton_scattering() (corrct.physics.materials.volumematerial method)": [[5, "corrct.physics.materials.VolumeMaterial.get_compton_scattering", false]], "get_default_from_data() (corrct.models.volumegeometry static method)": [[3, "corrct.models.VolumeGeometry.get_default_from_data", false]], "get_default_from_volume() (corrct.models.volumegeometry static method)": [[3, "corrct.models.VolumeGeometry.get_default_from_volume", false]], "get_default_parallel() (corrct.models.projectiongeometry static method)": [[3, "corrct.models.ProjectionGeometry.get_default_parallel", false]], "get_delta_beta() (in module corrct.physics.phase)": [[5, "corrct.physics.phase.get_delta_beta", false]], "get_delta_beta_curves() (in module corrct.physics.phase)": [[5, "corrct.physics.phase.get_delta_beta_curves", false]], "get_element_mass_fraction() (corrct.physics.materials.volumematerial method)": [[5, "corrct.physics.materials.VolumeMaterial.get_element_mass_fraction", false]], "get_element_number() (in module corrct.physics.xraylib_helper)": [[5, "corrct.physics.xraylib_helper.get_element_number", false]], "get_element_number_and_symbol() (in module corrct.physics.xraylib_helper)": [[5, "corrct.physics.xraylib_helper.get_element_number_and_symbol", false]], "get_energy() (in module corrct.physics.xrf)": [[5, "corrct.physics.xrf.get_energy", false]], "get_field_scaled() (corrct.models.projectiongeometry method)": [[3, "corrct.models.ProjectionGeometry.get_field_scaled", false]], "get_fluo_production() (corrct.physics.materials.volumematerial method)": [[5, "corrct.physics.materials.VolumeMaterial.get_fluo_production", false]], "get_interval_shifts() (corrct.struct_illum.maskgenerator method)": [[3, "corrct.struct_illum.MaskGenerator.get_interval_shifts", false]], "get_lambda_range() (corrct.param_tuning.baseparametertuning static method)": [[3, "corrct.param_tuning.BaseParameterTuning.get_lambda_range", false]], "get_lambda_range() (in module corrct.param_tuning)": [[3, "corrct.param_tuning.get_lambda_range", false]], "get_linear_attenuation_coefficient() (in module corrct.physics.attenuation)": [[5, "corrct.physics.attenuation.get_linear_attenuation_coefficient", false]], "get_lines() (corrct.physics.xrf.linessiegbahn static method)": [[5, "corrct.physics.xrf.LinesSiegbahn.get_lines", false]], "get_maps() (corrct.physics.attenuation.attenuationvolume method)": [[5, "corrct.physics.attenuation.AttenuationVolume.get_maps", false]], "get_mask() (corrct.struct_illum.maskcollection method)": [[3, "corrct.struct_illum.MaskCollection.get_mask", false]], "get_padding_size() (corrct.filters.filter method)": [[3, "corrct.filters.Filter.get_padding_size", false]], "get_pre_weights() (corrct.models.projectiongeometry method)": [[3, "corrct.models.ProjectionGeometry.get_pre_weights", false]], "get_pre_weights() (corrct.operators.projectoroperator method)": [[3, "corrct.operators.ProjectorOperator.get_pre_weights", false]], "get_pre_weights() (corrct.projectors.projectoruncorrected method)": [[3, "corrct.projectors.ProjectorUncorrected.get_pre_weights", false]], "get_prj_geom_cone() (in module corrct.models)": [[3, "corrct.models.get_prj_geom_cone", false]], "get_prj_geom_parallel() (in module corrct.models)": [[3, "corrct.models.get_prj_geom_parallel", false]], "get_projector_args() (corrct.physics.attenuation.attenuationvolume method)": [[5, "corrct.physics.attenuation.AttenuationVolume.get_projector_args", false]], "get_propagation_filter() (in module corrct.physics.phase)": [[5, "corrct.physics.phase.get_propagation_filter", false]], "get_qr_decomposition() (corrct.struct_illum.maskcollection method)": [[3, "corrct.struct_illum.MaskCollection.get_QR_decomposition", false]], "get_radiation_rate() (in module corrct.physics.xrf)": [[5, "corrct.physics.xrf.get_radiation_rate", false]], "get_random_shifts() (corrct.struct_illum.maskgenerator method)": [[3, "corrct.struct_illum.MaskGenerator.get_random_shifts", false]], "get_rot_axis_dir() (in module corrct.models)": [[3, "corrct.models.get_rot_axis_dir", false]], "get_sequential_shifts() (corrct.struct_illum.maskgenerator method)": [[3, "corrct.struct_illum.MaskGenerator.get_sequential_shifts", false]], "get_version() (in module corrct)": [[3, "corrct.get_version", false]], "get_vol_geom_from_data() (in module corrct.models)": [[3, "corrct.models.get_vol_geom_from_data", false]], "get_vol_geom_from_volume() (in module corrct.models)": [[3, "corrct.models.get_vol_geom_from_volume", false]], "gradient() (corrct.operators.transformgradient method)": [[3, "corrct.operators.TransformGradient.gradient", false]], "ifft() (corrct.operators.transformfourier method)": [[3, "corrct.operators.TransformFourier.ifft", false]], "incident_local (corrct.physics.attenuation.attenuationvolume attribute)": [[5, "corrct.physics.attenuation.AttenuationVolume.incident_local", false]], "indx (corrct.physics.xrf.fluoline attribute)": [[5, "corrct.physics.xrf.FluoLine.indx", false]], "info() (corrct.data_terms.datafidelitybase method)": [[3, "corrct.data_terms.DataFidelityBase.info", false]], "info() (corrct.regularizers.baseregularizer method)": [[3, "corrct.regularizers.BaseRegularizer.info", false]], "info() (corrct.regularizers.baseregularizer_med method)": [[3, "corrct.regularizers.BaseRegularizer_med.info", false]], "info() (corrct.regularizers.constraint_lowerlimit method)": [[3, "corrct.regularizers.Constraint_LowerLimit.info", false]], "info() (corrct.regularizers.constraint_upperlimit method)": [[3, "corrct.regularizers.Constraint_UpperLimit.info", false]], "info() (corrct.regularizers.regularizer_dwl method)": [[3, "corrct.regularizers.Regularizer_dwl.info", false]], "info() (corrct.regularizers.regularizer_swl method)": [[3, "corrct.regularizers.Regularizer_swl.info", false]], "info() (corrct.solvers.fbp method)": [[3, "corrct.solvers.FBP.info", false]], "info() (corrct.solvers.mlem method)": [[3, "corrct.solvers.MLEM.info", false]], "info() (corrct.solvers.pdhg method)": [[3, "corrct.solvers.PDHG.info", false]], "info() (corrct.solvers.sirt method)": [[3, "corrct.solvers.SIRT.info", false]], "info() (corrct.solvers.solver method)": [[3, "corrct.solvers.Solver.info", false]], "info() (corrct.struct_illum.maskcollection method)": [[3, "corrct.struct_illum.MaskCollection.info", false]], "info() (corrct.struct_illum.maskgenerator method)": [[3, "corrct.struct_illum.MaskGenerator.info", false]], "initialize() (corrct.filters.filtermr method)": [[3, "corrct.filters.FilterMR.initialize", false]], "initialize_dual() (corrct.data_terms.datafidelitybase method)": [[3, "corrct.data_terms.DataFidelityBase.initialize_dual", false]], "initialize_dual() (corrct.regularizers.baseregularizer method)": [[3, "corrct.regularizers.BaseRegularizer.initialize_dual", false]], "initialize_sigma_tau() (corrct.regularizers.baseregularizer method)": [[3, "corrct.regularizers.BaseRegularizer.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.baseregularizer_med method)": [[3, "corrct.regularizers.BaseRegularizer_med.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.constraint_lowerlimit method)": [[3, "corrct.regularizers.Constraint_LowerLimit.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.constraint_upperlimit method)": [[3, "corrct.regularizers.Constraint_UpperLimit.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_dwl method)": [[3, "corrct.regularizers.Regularizer_dwl.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_fft method)": [[3, "corrct.regularizers.Regularizer_fft.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_grad method)": [[3, "corrct.regularizers.Regularizer_Grad.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_l1 method)": [[3, "corrct.regularizers.Regularizer_l1.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_lap method)": [[3, "corrct.regularizers.Regularizer_lap.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_lnswl method)": [[3, "corrct.regularizers.Regularizer_lnswl.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_swl method)": [[3, "corrct.regularizers.Regularizer_swl.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_tnv method)": [[3, "corrct.regularizers.Regularizer_TNV.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_vl1wl method)": [[3, "corrct.regularizers.Regularizer_vl1wl.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_vsvd method)": [[3, "corrct.regularizers.Regularizer_vSVD.initialize_sigma_tau", false]], "inspect_fourier_img() (in module corrct.processing.misc)": [[6, "corrct.processing.misc.inspect_fourier_img", false]], "inspect_masks() (corrct.struct_illum.maskcollection method)": [[3, "corrct.struct_illum.MaskCollection.inspect_masks", false]], "inverse_dwt() (corrct.operators.transformdecimatedwavelet method)": [[3, "corrct.operators.TransformDecimatedWavelet.inverse_dwt", false]], "inverse_svd() (corrct.operators.transformsvd method)": [[3, "corrct.operators.TransformSVD.inverse_svd", false]], "inverse_swt() (corrct.operators.transformstationarywavelet method)": [[3, "corrct.operators.TransformStationaryWavelet.inverse_swt", false]], "is_3d() (corrct.models.volumegeometry method)": [[3, "corrct.models.VolumeGeometry.is_3D", false]], "is_dir_operator (corrct.operators.basetransform attribute)": [[3, "corrct.operators.BaseTransform.is_dir_operator", false]], "is_initialized (corrct.filters.filtermr attribute)": [[3, "corrct.filters.FilterMR.is_initialized", false]], "is_square() (corrct.models.volumegeometry method)": [[3, "corrct.models.VolumeGeometry.is_square", false]], "is_symm (corrct.operators.transformconvolution attribute)": [[3, "corrct.operators.TransformConvolution.is_symm", false]], "iterations (corrct.solvers.solutioninfo attribute)": [[3, "corrct.solvers.SolutionInfo.iterations", false]], "kernel (corrct.operators.transformconvolution attribute)": [[3, "corrct.operators.TransformConvolution.kernel", false]], "labels (corrct.operators.basewavelettransform attribute)": [[3, "corrct.operators.BaseWaveletTransform.labels", false]], "lambda_smooth (corrct.filters.filtermr attribute)": [[3, "corrct.filters.FilterMR.lambda_smooth", false]], "laplacian() (corrct.operators.transformlaplacian method)": [[3, "corrct.operators.TransformLaplacian.laplacian", false]], "lcurve (class in corrct.param_tuning)": [[3, "corrct.param_tuning.LCurve", false]], "level (corrct.filters.basisoptionswavelets attribute)": [[3, "corrct.filters.BasisOptionsWavelets.level", false]], "lines (corrct.physics.xrf.linessiegbahn attribute)": [[5, "corrct.physics.xrf.LinesSiegbahn.lines", false]], "lines_intersection() (in module corrct.processing.misc)": [[6, "corrct.processing.misc.lines_intersection", false]], "linessiegbahn (class in corrct.physics.xrf)": [[5, "corrct.physics.xrf.LinesSiegbahn", false]], "lower() (corrct.data_terms.datafidelitybase method)": [[3, "corrct.data_terms.DataFidelityBase.lower", false]], "lower() (corrct.regularizers.baseregularizer method)": [[3, "corrct.regularizers.BaseRegularizer.lower", false]], "lower() (corrct.solvers.solver method)": [[3, "corrct.solvers.Solver.lower", false]], "lower() (corrct.struct_illum.maskcollection method)": [[3, "corrct.struct_illum.MaskCollection.lower", false]], "maps (corrct.physics.attenuation.attenuationvolume attribute)": [[5, "corrct.physics.attenuation.AttenuationVolume.maps", false]], "mask_dims (corrct.struct_illum.maskcollection attribute)": [[3, "corrct.struct_illum.MaskCollection.mask_dims", false]], "mask_shape (corrct.models.volumegeometry property)": [[3, "corrct.models.VolumeGeometry.mask_shape", false]], "mask_support (corrct.struct_illum.maskcollection attribute)": [[3, "corrct.struct_illum.MaskCollection.mask_support", false]], "mask_type (corrct.struct_illum.maskcollection attribute)": [[3, "corrct.struct_illum.MaskCollection.mask_type", false]], "maskcollection (class in corrct.struct_illum)": [[3, "corrct.struct_illum.MaskCollection", false]], "maskgenerator (class in corrct.struct_illum)": [[3, "corrct.struct_illum.MaskGenerator", false]], "maskgeneratorbernoulli (class in corrct.struct_illum)": [[3, "corrct.struct_illum.MaskGeneratorBernoulli", false]], "maskgeneratorhalfgaussian (class in corrct.struct_illum)": [[3, "corrct.struct_illum.MaskGeneratorHalfGaussian", false]], "maskgeneratormura (class in corrct.struct_illum)": [[3, "corrct.struct_illum.MaskGeneratorMURA", false]], "maskgeneratorpoint (class in corrct.struct_illum)": [[3, "corrct.struct_illum.MaskGeneratorPoint", false]], "masks_dec (corrct.struct_illum.maskcollection attribute)": [[3, "corrct.struct_illum.MaskCollection.masks_dec", false]], "masks_enc (corrct.struct_illum.maskcollection attribute)": [[3, "corrct.struct_illum.MaskCollection.masks_enc", false]], "max_buckets (corrct.struct_illum.maskgenerator property)": [[3, "corrct.struct_illum.MaskGenerator.max_buckets", false]], "max_iterations (corrct.solvers.solutioninfo attribute)": [[3, "corrct.solvers.SolutionInfo.max_iterations", false]], "mc (corrct.struct_illum.projectorghostimaging attribute)": [[3, "corrct.struct_illum.ProjectorGhostImaging.mc", false]], "method (corrct.solvers.solutioninfo attribute)": [[3, "corrct.solvers.SolutionInfo.method", false]], "mlem (class in corrct.solvers)": [[3, "corrct.solvers.MLEM", false]], "module": [[3, "module-corrct", false], [3, "module-corrct.data_terms", false], [3, "module-corrct.denoisers", false], [3, "module-corrct.filters", false], [3, "module-corrct.models", false], [3, "module-corrct.operators", false], [3, "module-corrct.param_tuning", false], [3, "module-corrct.projectors", false], [3, "module-corrct.regularizers", false], [3, "module-corrct.solvers", false], [3, "module-corrct.struct_illum", false], [3, "module-corrct.testing", false], [4, "module-corrct.alignment", false], [4, "module-corrct.alignment.centering", false], [4, "module-corrct.alignment.fitting", false], [4, "module-corrct.alignment.shifts", false], [5, "module-corrct.physics", false], [5, "module-corrct.physics.attenuation", false], [5, "module-corrct.physics.materials", false], [5, "module-corrct.physics.phase", false], [5, "module-corrct.physics.xraylib_helper", false], [5, "module-corrct.physics.xrf", false], [6, "module-corrct.processing", false], [6, "module-corrct.processing.misc", false], [6, "module-corrct.processing.noise", false], [6, "module-corrct.processing.post", false], [6, "module-corrct.processing.pre", false]], "name (corrct.physics.xrf.fluoline attribute)": [[5, "corrct.physics.xrf.FluoLine.name", false]], "ndim (corrct.models.projectiongeometry property)": [[3, "corrct.models.ProjectionGeometry.ndim", false]], "norm (corrct.filters.basisoptionswavelets attribute)": [[3, "corrct.filters.BasisOptionsWavelets.norm", false]], "norm_cross_corr() (in module corrct.processing.misc)": [[6, "corrct.processing.misc.norm_cross_corr", false]], "normalized (corrct.filters.basisoptionsblocks attribute)": [[3, "corrct.filters.BasisOptionsBlocks.normalized", false]], "num_buckets (corrct.struct_illum.maskcollection property)": [[3, "corrct.struct_illum.MaskCollection.num_buckets", false]], "num_filters (corrct.filters.filter property)": [[3, "corrct.filters.Filter.num_filters", false]], "num_pixels (corrct.struct_illum.maskcollection property)": [[3, "corrct.struct_illum.MaskCollection.num_pixels", false]], "num_pixels (corrct.struct_illum.maskgenerator property)": [[3, "corrct.struct_illum.MaskGenerator.num_pixels", false]], "op (corrct.regularizers.baseregularizer attribute)": [[3, "corrct.regularizers.BaseRegularizer.op", false]], "order (corrct.filters.basisoptionsblocks attribute)": [[3, "corrct.filters.BasisOptionsBlocks.order", false]], "pad_mode (corrct.filters.filter attribute)": [[3, "corrct.filters.Filter.pad_mode", false]], "pad_mode (corrct.operators.transformconvolution attribute)": [[3, "corrct.operators.TransformConvolution.pad_mode", false]], "pad_sinogram() (in module corrct.processing.pre)": [[6, "corrct.processing.pre.pad_sinogram", false]], "pdhg (class in corrct.solvers)": [[3, "corrct.solvers.PDHG", false]], "pencil_beam_profile() (in module corrct.physics)": [[5, "corrct.physics.pencil_beam_profile", false]], "phantom_assign_concentration() (in module corrct.testing)": [[3, "corrct.testing.phantom_assign_concentration", false]], "phantom_assign_concentration_multi() (in module corrct.testing)": [[3, "corrct.testing.phantom_assign_concentration_multi", false]], "pix2vox_ratio (corrct.models.projectiongeometry attribute)": [[3, "corrct.models.ProjectionGeometry.pix2vox_ratio", false]], "plot_emission_line_attenuation() (in module corrct.physics.attenuation)": [[5, "corrct.physics.attenuation.plot_emission_line_attenuation", false]], "plot_filter_responses() (in module corrct.physics.phase)": [[5, "corrct.physics.phase.plot_filter_responses", false]], "plot_filters() (corrct.filters.filter method)": [[3, "corrct.filters.Filter.plot_filters", false]], "plot_frcs() (in module corrct.processing.post)": [[6, "corrct.processing.post.plot_frcs", false]], "plot_map() (corrct.physics.attenuation.attenuationvolume method)": [[5, "corrct.physics.attenuation.AttenuationVolume.plot_map", false]], "plot_transmittance_decay() (in module corrct.physics.attenuation)": [[5, "corrct.physics.attenuation.plot_transmittance_decay", false]], "power_method() (corrct.solvers.pdhg method)": [[3, "corrct.solvers.PDHG.power_method", false]], "power_spectrum() (in module corrct.processing.post)": [[6, "corrct.processing.post.power_spectrum", false]], "prj_intensities (corrct.projectors.projectoruncorrected attribute)": [[3, "corrct.projectors.ProjectorUncorrected.prj_intensities", false]], "prj_shape (corrct.operators.projectoroperator property)": [[3, "corrct.operators.ProjectorOperator.prj_shape", false]], "project_displacement_to_detector() (corrct.models.projectiongeometry method)": [[3, "corrct.models.ProjectionGeometry.project_displacement_to_detector", false]], "projectiongeometry (class in corrct.models)": [[3, "corrct.models.ProjectionGeometry", false]], "projector (corrct.filters.filtermr attribute)": [[3, "corrct.filters.FilterMR.projector", false]], "projector_backend (corrct.projectors.projectoruncorrected attribute)": [[3, "corrct.projectors.ProjectorUncorrected.projector_backend", false]], "projectorattenuationxrf (class in corrct.projectors)": [[3, "corrct.projectors.ProjectorAttenuationXRF", false]], "projectorghostimaging (class in corrct.struct_illum)": [[3, "corrct.struct_illum.ProjectorGhostImaging", false]], "projectormatrix (class in corrct.projectors)": [[3, "corrct.projectors.ProjectorMatrix", false]], "projectoroperator (class in corrct.operators)": [[3, "corrct.operators.ProjectorOperator", false]], "projectoruncorrected (class in corrct.projectors)": [[3, "corrct.projectors.ProjectorUncorrected", false]], "psf (corrct.projectors.projectoruncorrected attribute)": [[3, "corrct.projectors.ProjectorUncorrected.psf", false]], "recentervolume (class in corrct.alignment.centering)": [[4, "corrct.alignment.centering.RecenterVolume", false]], "refine_max_position_1d() (in module corrct.alignment.fitting)": [[4, "corrct.alignment.fitting.refine_max_position_1d", false]], "refine_max_position_2d() (in module corrct.alignment.fitting)": [[4, "corrct.alignment.fitting.refine_max_position_2d", false]], "regularizer_dwl (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_dwl", false]], "regularizer_fft (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_fft", false]], "regularizer_grad (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_Grad", false]], "regularizer_hub_dwl (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_Hub_dwl", false]], "regularizer_hub_swl (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_Hub_swl", false]], "regularizer_hubtv2d (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_HubTV2D", false]], "regularizer_hubtv3d (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_HubTV3D", false]], "regularizer_l1 (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_l1", false]], "regularizer_l12dwl (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_l12dwl", false]], "regularizer_l12swl (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_l12swl", false]], "regularizer_l1dwl (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_l1dwl", false]], "regularizer_l1med (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_l1med", false]], "regularizer_l1swl (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_l1swl", false]], "regularizer_l2med (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_l2med", false]], "regularizer_lap (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_lap", false]], "regularizer_lap1d (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_lap1D", false]], "regularizer_lap2d (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_lap2D", false]], "regularizer_lap3d (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_lap3D", false]], "regularizer_lnswl (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_lnswl", false]], "regularizer_smooth1d (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_smooth1D", false]], "regularizer_smooth2d (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_smooth2D", false]], "regularizer_smooth3d (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_smooth3D", false]], "regularizer_swl (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_swl", false]], "regularizer_tnv (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_TNV", false]], "regularizer_tv1d (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_TV1D", false]], "regularizer_tv2d (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_TV2D", false]], "regularizer_tv3d (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_TV3D", false]], "regularizer_vl1wl (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_vl1wl", false]], "regularizer_vsvd (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_vSVD", false]], "regularizer_vtv (class in corrct.regularizers)": [[3, "corrct.regularizers.Regularizer_VTV", false]], "reorder_masks() (in module corrct.struct_illum)": [[3, "corrct.struct_illum.reorder_masks", false]], "residual0 (corrct.solvers.solutioninfo attribute)": [[3, "corrct.solvers.SolutionInfo.residual0", false]], "residual0_cv (corrct.solvers.solutioninfo attribute)": [[3, "corrct.solvers.SolutionInfo.residual0_cv", false]], "residuals (corrct.solvers.solutioninfo attribute)": [[3, "corrct.solvers.SolutionInfo.residuals", false]], "residuals_cv (corrct.solvers.solutioninfo attribute)": [[3, "corrct.solvers.SolutionInfo.residuals_cv", false]], "residuals_cv_rel (corrct.solvers.solutioninfo property)": [[3, "corrct.solvers.SolutionInfo.residuals_cv_rel", false]], "residuals_rel (corrct.solvers.solutioninfo property)": [[3, "corrct.solvers.SolutionInfo.residuals_rel", false]], "rmatvec() (corrct.operators.basetransform method)": [[3, "corrct.operators.BaseTransform.rmatvec", false]], "rot_dir_xyz (corrct.models.projectiongeometry attribute)": [[3, "corrct.models.ProjectionGeometry.rot_dir_xyz", false]], "rotate() (corrct.models.projectiongeometry method)": [[3, "corrct.models.ProjectionGeometry.rotate", false]], "rotate_proj_stack() (in module corrct.processing.pre)": [[6, "corrct.processing.pre.rotate_proj_stack", false]], "roundup_to_pow2() (in module corrct.testing)": [[3, "corrct.testing.roundup_to_pow2", false]], "sart (class in corrct.solvers)": [[3, "corrct.solvers.SART", false]], "scale (corrct.operators.transformdiagonalscaling attribute)": [[3, "corrct.operators.TransformDiagonalScaling.scale", false]], "set_detector_shape_vu() (corrct.models.projectiongeometry method)": [[3, "corrct.models.ProjectionGeometry.set_detector_shape_vu", false]], "set_detector_shifts_vu() (corrct.models.projectiongeometry method)": [[3, "corrct.models.ProjectionGeometry.set_detector_shifts_vu", false]], "set_detector_tilt() (corrct.models.projectiongeometry method)": [[3, "corrct.models.ProjectionGeometry.set_detector_tilt", false]], "set_source_shifts_vu() (corrct.models.projectiongeometry method)": [[3, "corrct.models.ProjectionGeometry.set_source_shifts_vu", false]], "shape_fov (corrct.struct_illum.maskcollection property)": [[3, "corrct.struct_illum.MaskCollection.shape_fov", false]], "shape_fov (corrct.struct_illum.maskgenerator attribute)": [[3, "corrct.struct_illum.MaskGenerator.shape_fov", false]], "shape_mask (corrct.struct_illum.maskgenerator attribute)": [[3, "corrct.struct_illum.MaskGenerator.shape_mask", false]], "shape_shifts (corrct.struct_illum.maskcollection property)": [[3, "corrct.struct_illum.MaskCollection.shape_shifts", false]], "shape_shifts (corrct.struct_illum.maskgenerator attribute)": [[3, "corrct.struct_illum.MaskGenerator.shape_shifts", false]], "shape_xyz (corrct.models.volumegeometry property)": [[3, "corrct.models.VolumeGeometry.shape_xyz", false]], "shape_zxy (corrct.models.volumegeometry property)": [[3, "corrct.models.VolumeGeometry.shape_zxy", false]], "shift_proj_stack() (in module corrct.processing.pre)": [[6, "corrct.processing.pre.shift_proj_stack", false]], "sigma (corrct.data_terms.datafidelitybase attribute)": [[3, "corrct.data_terms.DataFidelityBase.sigma", false]], "sigma (corrct.regularizers.baseregularizer attribute)": [[3, "corrct.regularizers.BaseRegularizer.sigma", false]], "sigma_data (corrct.data_terms.datafidelitybase attribute)": [[3, "corrct.data_terms.DataFidelityBase.sigma_data", false]], "sinusoid() (in module corrct.alignment.fitting)": [[4, "corrct.alignment.fitting.sinusoid", false]], "sirt (class in corrct.solvers)": [[3, "corrct.solvers.SIRT", false]], "solid_angle_sr (corrct.physics.xrf.detectorxrf property)": [[5, "corrct.physics.xrf.DetectorXRF.solid_angle_sr", false]], "solutioninfo (class in corrct.solvers)": [[3, "corrct.solvers.SolutionInfo", false]], "solver (class in corrct.solvers)": [[3, "corrct.solvers.Solver", false]], "solver_calling_function (corrct.param_tuning.baseparametertuning property)": [[3, "corrct.param_tuning.BaseParameterTuning.solver_calling_function", false]], "solver_spawning_function (corrct.param_tuning.baseparametertuning property)": [[3, "corrct.param_tuning.BaseParameterTuning.solver_spawning_function", false]], "src_pos_xyz (corrct.models.projectiongeometry attribute)": [[3, "corrct.models.ProjectionGeometry.src_pos_xyz", false]], "surface_mm2 (corrct.physics.xrf.detectorxrf attribute)": [[5, "corrct.physics.xrf.DetectorXRF.surface_mm2", false]], "to_com() (corrct.alignment.centering.recentervolume method)": [[4, "corrct.alignment.centering.RecenterVolume.to_com", false]], "to_fourier() (corrct.filters.filter method)": [[3, "corrct.filters.Filter.to_fourier", false]], "to_real() (corrct.filters.filter method)": [[3, "corrct.filters.Filter.to_real", false]], "tolerance (corrct.solvers.solutioninfo attribute)": [[3, "corrct.solvers.SolutionInfo.tolerance", false]], "transformconvolution (class in corrct.operators)": [[3, "corrct.operators.TransformConvolution", false]], "transformdecimatedwavelet (class in corrct.operators)": [[3, "corrct.operators.TransformDecimatedWavelet", false]], "transformdiagonalscaling (class in corrct.operators)": [[3, "corrct.operators.TransformDiagonalScaling", false]], "transformfourier (class in corrct.operators)": [[3, "corrct.operators.TransformFourier", false]], "transformfunctions (class in corrct.operators)": [[3, "corrct.operators.TransformFunctions", false]], "transformgradient (class in corrct.operators)": [[3, "corrct.operators.TransformGradient", false]], "transformidentity (class in corrct.operators)": [[3, "corrct.operators.TransformIdentity", false]], "transformlaplacian (class in corrct.operators)": [[3, "corrct.operators.TransformLaplacian", false]], "transformstationarywavelet (class in corrct.operators)": [[3, "corrct.operators.TransformStationaryWavelet", false]], "transformsvd (class in corrct.operators)": [[3, "corrct.operators.TransformSVD", false]], "transmittance (corrct.struct_illum.maskgenerator attribute)": [[3, "corrct.struct_illum.MaskGenerator.transmittance", false]], "u (corrct.operators.transformsvd attribute)": [[3, "corrct.operators.TransformSVD.U", false]], "upd_mask (corrct.regularizers.baseregularizer attribute)": [[3, "corrct.regularizers.BaseRegularizer.upd_mask", false]], "update_dual() (corrct.data_terms.datafidelitybase method)": [[3, "corrct.data_terms.DataFidelityBase.update_dual", false]], "update_dual() (corrct.regularizers.baseregularizer method)": [[3, "corrct.regularizers.BaseRegularizer.update_dual", false]], "update_dual() (corrct.regularizers.baseregularizer_med method)": [[3, "corrct.regularizers.BaseRegularizer_med.update_dual", false]], "update_dual() (corrct.regularizers.constraint_lowerlimit method)": [[3, "corrct.regularizers.Constraint_LowerLimit.update_dual", false]], "update_dual() (corrct.regularizers.constraint_upperlimit method)": [[3, "corrct.regularizers.Constraint_UpperLimit.update_dual", false]], "update_dual() (corrct.regularizers.regularizer_dwl method)": [[3, "corrct.regularizers.Regularizer_dwl.update_dual", false]], "update_dual() (corrct.regularizers.regularizer_l1 method)": [[3, "corrct.regularizers.Regularizer_l1.update_dual", false]], "update_dual() (corrct.regularizers.regularizer_swl method)": [[3, "corrct.regularizers.Regularizer_swl.update_dual", false]], "upper() (corrct.data_terms.datafidelitybase method)": [[3, "corrct.data_terms.DataFidelityBase.upper", false]], "upper() (corrct.regularizers.baseregularizer method)": [[3, "corrct.regularizers.BaseRegularizer.upper", false]], "upper() (corrct.solvers.solver method)": [[3, "corrct.solvers.Solver.upper", false]], "upper() (corrct.struct_illum.maskcollection method)": [[3, "corrct.struct_illum.MaskCollection.upper", false]], "use_rfft (corrct.filters.filter attribute)": [[3, "corrct.filters.Filter.use_rfft", false]], "vol_geom (corrct.projectors.projectoruncorrected attribute)": [[3, "corrct.projectors.ProjectorUncorrected.vol_geom", false]], "vol_shape (corrct.operators.projectoroperator property)": [[3, "corrct.operators.ProjectorOperator.vol_shape", false]], "vol_shape_zyx (corrct.physics.attenuation.attenuationvolume attribute)": [[5, "corrct.physics.attenuation.AttenuationVolume.vol_shape_zyx", false]], "volumegeometry (class in corrct.models)": [[3, "corrct.models.VolumeGeometry", false]], "volumematerial (class in corrct.physics.materials)": [[5, "corrct.physics.materials.VolumeMaterial", false]], "vox_size (corrct.models.volumegeometry attribute)": [[3, "corrct.models.VolumeGeometry.vox_size", false]], "vt (corrct.operators.transformsvd attribute)": [[3, "corrct.operators.TransformSVD.Vt", false]], "wavelet (corrct.filters.basisoptionswavelets attribute)": [[3, "corrct.filters.BasisOptionsWavelets.wavelet", false]], "wavelet (corrct.operators.basewavelettransform attribute)": [[3, "corrct.operators.BaseWaveletTransform.wavelet", false]], "weight (corrct.regularizers.baseregularizer attribute)": [[3, "corrct.regularizers.BaseRegularizer.weight", false]]}, "objects": {"": [[3, 0, 0, "-", "corrct"]], "corrct": [[4, 0, 0, "-", "alignment"], [3, 0, 0, "-", "data_terms"], [3, 0, 0, "-", "denoisers"], [3, 0, 0, "-", "filters"], [3, 3, 1, "", "get_version"], [3, 0, 0, "-", "models"], [3, 0, 0, "-", "operators"], [3, 0, 0, "-", "param_tuning"], [5, 0, 0, "-", "physics"], [6, 0, 0, "-", "processing"], [3, 0, 0, "-", "projectors"], [3, 0, 0, "-", "regularizers"], [3, 0, 0, "-", "solvers"], [3, 0, 0, "-", "struct_illum"], [3, 0, 0, "-", "testing"]], "corrct.alignment": [[4, 0, 0, "-", "centering"], [4, 0, 0, "-", "fitting"], [4, 0, 0, "-", "shifts"]], "corrct.alignment.centering": [[4, 1, 1, "", "RecenterVolume"]], "corrct.alignment.centering.RecenterVolume": [[4, 2, 1, "", "as_reference"], [4, 2, 1, "", "to_com"]], "corrct.alignment.fitting": [[4, 3, 1, "", "extract_peak_region_nd"], [4, 3, 1, "", "extract_peak_regions_1d"], [4, 3, 1, "", "fit_camera_tilt_angle"], [4, 3, 1, "", "fit_image_rotation_and_scale"], [4, 3, 1, "", "fit_shifts_u_sad"], [4, 3, 1, "", "fit_shifts_vu_xc"], [4, 3, 1, "", "fit_shifts_zyx_xc"], [4, 3, 1, "", "fit_sinusoid"], [4, 3, 1, "", "refine_max_position_1d"], [4, 3, 1, "", "refine_max_position_2d"], [4, 3, 1, "", "sinusoid"]], "corrct.alignment.shifts": [[4, 1, 1, "", "DetectorShiftsBase"], [4, 1, 1, "", "DetectorShiftsPRE"], [4, 1, 1, "", "DetectorShiftsXC"]], "corrct.alignment.shifts.DetectorShiftsBase": [[4, 4, 1, "", "angles_rad"], [4, 4, 1, "", "data_vwu"]], "corrct.alignment.shifts.DetectorShiftsPRE": [[4, 2, 1, "", "fit_u"], [4, 2, 1, "", "fit_v"]], "corrct.alignment.shifts.DetectorShiftsXC": [[4, 2, 1, "", "find_shifts_vu"], [4, 2, 1, "", "fit_u_180"], [4, 2, 1, "", "fit_u_360"], [4, 2, 1, "", "fit_vu"], [4, 2, 1, "", "fit_vu_accum_drifts"]], "corrct.data_terms": [[3, 1, 1, "", "DataFidelityBase"], [3, 1, 1, "", "DataFidelity_Huber"], [3, 1, 1, "", "DataFidelity_KL"], [3, 1, 1, "", "DataFidelity_l1"], [3, 1, 1, "", "DataFidelity_l12"], [3, 1, 1, "", "DataFidelity_l1b"], [3, 1, 1, "", "DataFidelity_l2"], [3, 1, 1, "", "DataFidelity_l2b"], [3, 1, 1, "", "DataFidelity_ln"], [3, 1, 1, "", "DataFidelity_wl2"]], "corrct.data_terms.DataFidelityBase": [[3, 2, 1, "", "apply_proximal"], [3, 2, 1, "", "assign_data"], [3, 4, 1, "", "background"], [3, 2, 1, "", "compute_data_dual_dot"], [3, 2, 1, "", "compute_primal_dual_gap"], [3, 2, 1, "", "compute_residual"], [3, 2, 1, "", "compute_residual_norm"], [3, 4, 1, "", "data"], [3, 2, 1, "", "info"], [3, 2, 1, "", "initialize_dual"], [3, 2, 1, "", "lower"], [3, 4, 1, "", "sigma"], [3, 4, 1, "", "sigma_data"], [3, 2, 1, "", "update_dual"], [3, 2, 1, "", "upper"]], "corrct.data_terms.DataFidelity_Huber": [[3, 2, 1, "", "apply_proximal"], [3, 2, 1, "", "assign_data"], [3, 2, 1, "", "compute_primal_dual_gap"], [3, 2, 1, "", "compute_residual_norm"]], "corrct.data_terms.DataFidelity_KL": [[3, 2, 1, "", "apply_proximal"], [3, 2, 1, "", "compute_primal_dual_gap"], [3, 2, 1, "", "compute_residual"], [3, 2, 1, "", "compute_residual_norm"]], "corrct.data_terms.DataFidelity_l1": [[3, 2, 1, "", "apply_proximal"], [3, 2, 1, "", "compute_primal_dual_gap"], [3, 2, 1, "", "compute_residual_norm"]], "corrct.data_terms.DataFidelity_l1b": [[3, 2, 1, "", "assign_data"]], "corrct.data_terms.DataFidelity_l2": [[3, 2, 1, "", "apply_proximal"], [3, 2, 1, "", "assign_data"], [3, 2, 1, "", "compute_primal_dual_gap"], [3, 2, 1, "", "compute_residual_norm"]], "corrct.data_terms.DataFidelity_l2b": [[3, 2, 1, "", "apply_proximal"], [3, 2, 1, "", "assign_data"], [3, 2, 1, "", "compute_primal_dual_gap"], [3, 2, 1, "", "compute_residual"]], "corrct.data_terms.DataFidelity_ln": [[3, 2, 1, "", "apply_proximal"], [3, 2, 1, "", "compute_primal_dual_gap"], [3, 2, 1, "", "compute_residual_norm"]], "corrct.data_terms.DataFidelity_wl2": [[3, 2, 1, "", "assign_data"], [3, 2, 1, "", "compute_residual"], [3, 2, 1, "", "compute_residual_norm"]], "corrct.denoisers": [[3, 3, 1, "", "denoise_image"]], "corrct.filters": [[3, 1, 1, "", "BasisOptions"], [3, 1, 1, "", "BasisOptionsBlocks"], [3, 1, 1, "", "BasisOptionsWavelets"], [3, 1, 1, "", "Filter"], [3, 1, 1, "", "FilterCustom"], [3, 1, 1, "", "FilterFBP"], [3, 1, 1, "", "FilterMR"], [3, 3, 1, "", "create_basis"], [3, 3, 1, "", "create_basis_wavelet"]], "corrct.filters.BasisOptionsBlocks": [[3, 4, 1, "", "binning_start"], [3, 4, 1, "", "binning_type"], [3, 4, 1, "", "normalized"], [3, 4, 1, "", "order"]], "corrct.filters.BasisOptionsWavelets": [[3, 4, 1, "", "level"], [3, 4, 1, "", "norm"], [3, 4, 1, "", "wavelet"]], "corrct.filters.Filter": [[3, 2, 1, "", "apply_filter"], [3, 2, 1, "", "compute_filter"], [3, 4, 1, "", "dtype"], [3, 4, 1, "", "fbp_filter"], [3, 5, 1, "", "filter_fourier"], [3, 5, 1, "", "filter_real"], [3, 2, 1, "", "get_padding_size"], [3, 5, 1, "", "num_filters"], [3, 4, 1, "", "pad_mode"], [3, 2, 1, "", "plot_filters"], [3, 2, 1, "", "to_fourier"], [3, 2, 1, "", "to_real"], [3, 4, 1, "", "use_rfft"]], "corrct.filters.FilterCustom": [[3, 2, 1, "", "compute_filter"]], "corrct.filters.FilterFBP": [[3, 4, 1, "", "FILTERS"], [3, 2, 1, "", "compute_filter"], [3, 4, 1, "", "filter_name"], [3, 2, 1, "", "get_available_filters"]], "corrct.filters.FilterMR": [[3, 4, 1, "", "binning_start"], [3, 4, 1, "", "binning_type"], [3, 2, 1, "", "compute_filter"], [3, 2, 1, "", "initialize"], [3, 4, 1, "", "is_initialized"], [3, 4, 1, "", "lambda_smooth"], [3, 4, 1, "", "projector"]], "corrct.models": [[3, 1, 1, "", "Geometry"], [3, 1, 1, "", "ProjectionGeometry"], [3, 1, 1, "", "VolumeGeometry"], [3, 3, 1, "", "combine_shifts_vu"], [3, 3, 1, "", "get_prj_geom_cone"], [3, 3, 1, "", "get_prj_geom_parallel"], [3, 3, 1, "", "get_rot_axis_dir"], [3, 3, 1, "", "get_vol_geom_from_data"], [3, 3, 1, "", "get_vol_geom_from_volume"]], "corrct.models.ProjectionGeometry": [[3, 2, 1, "", "copy"], [3, 4, 1, "", "det_pos_xyz"], [3, 4, 1, "", "det_shape_vu"], [3, 4, 1, "", "det_u_xyz"], [3, 4, 1, "", "det_v_xyz"], [3, 4, 1, "", "geom_type"], [3, 2, 1, "", "get_3d"], [3, 2, 1, "", "get_default_parallel"], [3, 2, 1, "", "get_field_scaled"], [3, 2, 1, "", "get_pre_weights"], [3, 5, 1, "", "ndim"], [3, 4, 1, "", "pix2vox_ratio"], [3, 2, 1, "", "project_displacement_to_detector"], [3, 4, 1, "", "rot_dir_xyz"], [3, 2, 1, "", "rotate"], [3, 2, 1, "", "set_detector_shape_vu"], [3, 2, 1, "", "set_detector_shifts_vu"], [3, 2, 1, "", "set_detector_tilt"], [3, 2, 1, "", "set_source_shifts_vu"], [3, 4, 1, "", "src_pos_xyz"]], "corrct.models.VolumeGeometry": [[3, 5, 1, "", "extent"], [3, 2, 1, "", "get_3d"], [3, 2, 1, "", "get_default_from_data"], [3, 2, 1, "", "get_default_from_volume"], [3, 2, 1, "", "is_3D"], [3, 2, 1, "", "is_square"], [3, 5, 1, "", "mask_shape"], [3, 5, 1, "", "shape_xyz"], [3, 5, 1, "", "shape_zxy"], [3, 4, 1, "", "vox_size"]], "corrct.operators": [[3, 1, 1, "", "BaseTransform"], [3, 1, 1, "", "BaseWaveletTransform"], [3, 1, 1, "", "ProjectorOperator"], [3, 1, 1, "", "TransformConvolution"], [3, 1, 1, "", "TransformDecimatedWavelet"], [3, 1, 1, "", "TransformDiagonalScaling"], [3, 1, 1, "", "TransformFourier"], [3, 1, 1, "", "TransformFunctions"], [3, 1, 1, "", "TransformGradient"], [3, 1, 1, "", "TransformIdentity"], [3, 1, 1, "", "TransformLaplacian"], [3, 1, 1, "", "TransformSVD"], [3, 1, 1, "", "TransformStationaryWavelet"]], "corrct.operators.BaseTransform": [[3, 2, 1, "", "absolute"], [3, 4, 1, "", "adj_shape"], [3, 4, 1, "", "dir_shape"], [3, 2, 1, "", "explicit"], [3, 4, 1, "", "is_dir_operator"], [3, 2, 1, "", "rmatvec"]], "corrct.operators.BaseWaveletTransform": [[3, 4, 1, "", "axes"], [3, 4, 1, "", "labels"], [3, 4, 1, "", "wavelet"]], "corrct.operators.ProjectorOperator": [[3, 2, 1, "", "bp"], [3, 2, 1, "", "fp"], [3, 2, 1, "", "get_pre_weights"], [3, 5, 1, "", "prj_shape"], [3, 5, 1, "", "vol_shape"]], "corrct.operators.TransformConvolution": [[3, 2, 1, "", "absolute"], [3, 4, 1, "", "flip_adjoint"], [3, 4, 1, "", "is_symm"], [3, 4, 1, "", "kernel"], [3, 4, 1, "", "pad_mode"]], "corrct.operators.TransformDecimatedWavelet": [[3, 2, 1, "", "direct_dwt"], [3, 2, 1, "", "inverse_dwt"]], "corrct.operators.TransformDiagonalScaling": [[3, 2, 1, "", "absolute"], [3, 4, 1, "", "scale"]], "corrct.operators.TransformFourier": [[3, 2, 1, "", "fft"], [3, 2, 1, "", "ifft"]], "corrct.operators.TransformFunctions": [[3, 2, 1, "", "absolute"]], "corrct.operators.TransformGradient": [[3, 2, 1, "", "divergence"], [3, 2, 1, "", "gradient"]], "corrct.operators.TransformLaplacian": [[3, 2, 1, "", "laplacian"]], "corrct.operators.TransformSVD": [[3, 4, 1, "", "U"], [3, 4, 1, "", "Vt"], [3, 2, 1, "", "direct_svd"], [3, 2, 1, "", "inverse_svd"]], "corrct.operators.TransformStationaryWavelet": [[3, 2, 1, "", "direct_swt"], [3, 2, 1, "", "inverse_swt"]], "corrct.param_tuning": [[3, 1, 1, "", "BaseParameterTuning"], [3, 1, 1, "", "CrossValidation"], [3, 1, 1, "", "LCurve"], [3, 3, 1, "", "create_random_test_mask"], [3, 3, 1, "", "fit_func_min"], [3, 3, 1, "", "get_lambda_range"]], "corrct.param_tuning.BaseParameterTuning": [[3, 2, 1, "", "compute_loss_values"], [3, 2, 1, "", "compute_reconstruction_and_loss"], [3, 2, 1, "", "compute_reconstruction_error"], [3, 2, 1, "", "get_lambda_range"], [3, 5, 1, "", "solver_calling_function"], [3, 5, 1, "", "solver_spawning_function"]], "corrct.param_tuning.CrossValidation": [[3, 2, 1, "", "compute_loss_values"], [3, 2, 1, "", "fit_loss_min"]], "corrct.param_tuning.LCurve": [[3, 2, 1, "", "compute_loss_values"]], "corrct.physics": [[5, 0, 0, "-", "attenuation"], [5, 3, 1, "", "convert_energy_to_wlength"], [5, 3, 1, "", "convert_wlength_to_energy"], [5, 0, 0, "-", "materials"], [5, 3, 1, "", "pencil_beam_profile"], [5, 0, 0, "-", "phase"], [5, 0, 0, "-", "xraylib_helper"], [5, 0, 0, "-", "xrf"]], "corrct.physics.attenuation": [[5, 1, 1, "", "AttenuationVolume"], [5, 3, 1, "", "get_linear_attenuation_coefficient"], [5, 3, 1, "", "plot_emission_line_attenuation"], [5, 3, 1, "", "plot_transmittance_decay"]], "corrct.physics.attenuation.AttenuationVolume": [[5, 4, 1, "", "angles_det_rad"], [5, 4, 1, "", "angles_rot_rad"], [5, 2, 1, "", "compute_maps"], [5, 4, 1, "", "dtype"], [5, 4, 1, "", "emitted_local"], [5, 2, 1, "", "get_maps"], [5, 2, 1, "", "get_projector_args"], [5, 4, 1, "", "incident_local"], [5, 4, 1, "", "maps"], [5, 2, 1, "", "plot_map"], [5, 4, 1, "", "vol_shape_zyx"]], "corrct.physics.materials": [[5, 1, 1, "", "VolumeMaterial"]], "corrct.physics.materials.VolumeMaterial": [[5, 2, 1, "", "get_attenuation"], [5, 2, 1, "", "get_compton_scattering"], [5, 2, 1, "", "get_element_mass_fraction"], [5, 2, 1, "", "get_fluo_production"]], "corrct.physics.phase": [[5, 3, 1, "", "apply_propagation_filter"], [5, 3, 1, "", "get_delta_beta"], [5, 3, 1, "", "get_delta_beta_curves"], [5, 3, 1, "", "get_propagation_filter"], [5, 3, 1, "", "plot_filter_responses"]], "corrct.physics.xraylib_helper": [[5, 3, 1, "", "get_compound"], [5, 3, 1, "", "get_compound_cross_section"], [5, 3, 1, "", "get_element_number"], [5, 3, 1, "", "get_element_number_and_symbol"]], "corrct.physics.xrf": [[5, 1, 1, "", "DetectorXRF"], [5, 1, 1, "", "FluoLine"], [5, 1, 1, "", "LinesSiegbahn"], [5, 3, 1, "", "get_energy"], [5, 3, 1, "", "get_radiation_rate"]], "corrct.physics.xrf.DetectorXRF": [[5, 4, 1, "", "angle_rad"], [5, 4, 1, "", "distance_mm"], [5, 5, 1, "", "solid_angle_sr"], [5, 4, 1, "", "surface_mm2"]], "corrct.physics.xrf.FluoLine": [[5, 4, 1, "", "indx"], [5, 4, 1, "", "name"]], "corrct.physics.xrf.LinesSiegbahn": [[5, 2, 1, "", "get_lines"], [5, 4, 1, "", "lines"]], "corrct.processing": [[6, 0, 0, "-", "misc"], [6, 0, 0, "-", "noise"], [6, 0, 0, "-", "post"], [6, 0, 0, "-", "pre"]], "corrct.processing.misc": [[6, 3, 1, "", "azimuthal_integration"], [6, 3, 1, "", "ball"], [6, 3, 1, "", "circular_mask"], [6, 3, 1, "", "inspect_fourier_img"], [6, 3, 1, "", "lines_intersection"], [6, 3, 1, "", "norm_cross_corr"]], "corrct.processing.noise": [[6, 3, 1, "", "compute_variance_poisson"], [6, 3, 1, "", "compute_variance_transmission"], [6, 3, 1, "", "compute_variance_weight"]], "corrct.processing.post": [[6, 3, 1, "", "com"], [6, 3, 1, "", "compute_frc"], [6, 3, 1, "", "estimate_resolution"], [6, 3, 1, "", "fit_scale_bias"], [6, 3, 1, "", "plot_frcs"], [6, 3, 1, "", "power_spectrum"]], "corrct.processing.pre": [[6, 3, 1, "", "apply_flat_field"], [6, 3, 1, "", "apply_minus_log"], [6, 3, 1, "", "background_from_margin"], [6, 3, 1, "", "bin_imgs"], [6, 3, 1, "", "compute_eigen_flats"], [6, 3, 1, "", "destripe_wlf_vwu"], [6, 3, 1, "", "pad_sinogram"], [6, 3, 1, "", "rotate_proj_stack"], [6, 3, 1, "", "shift_proj_stack"]], "corrct.projectors": [[3, 1, 1, "", "ProjectorAttenuationXRF"], [3, 1, 1, "", "ProjectorMatrix"], [3, 1, 1, "", "ProjectorUncorrected"]], "corrct.projectors.ProjectorAttenuationXRF": [[3, 4, 1, "", "att_vol_angles"], [3, 2, 1, "", "bp"], [3, 2, 1, "", "bp_angle"], [3, 2, 1, "", "collapse_detectors"], [3, 4, 1, "", "executor"], [3, 2, 1, "", "fp"], [3, 2, 1, "", "fp_angle"]], "corrct.projectors.ProjectorMatrix": [[3, 4, 1, "", "A"], [3, 2, 1, "", "absolute"], [3, 2, 1, "", "bp"], [3, 2, 1, "", "fp"]], "corrct.projectors.ProjectorUncorrected": [[3, 5, 1, "", "angles_rot_rad"], [3, 2, 1, "", "bp"], [3, 2, 1, "", "bp_angle"], [3, 2, 1, "", "fp"], [3, 2, 1, "", "fp_angle"], [3, 2, 1, "", "get_pre_weights"], [3, 4, 1, "", "prj_intensities"], [3, 4, 1, "", "projector_backend"], [3, 4, 1, "", "psf"], [3, 4, 1, "", "vol_geom"]], "corrct.regularizers": [[3, 1, 1, "", "BaseRegularizer"], [3, 1, 1, "", "BaseRegularizer_med"], [3, 1, 1, "", "Constraint_LowerLimit"], [3, 1, 1, "", "Constraint_UpperLimit"], [3, 1, 1, "", "Regularizer_Grad"], [3, 1, 1, "", "Regularizer_HubTV2D"], [3, 1, 1, "", "Regularizer_HubTV3D"], [3, 1, 1, "", "Regularizer_Hub_dwl"], [3, 1, 1, "", "Regularizer_Hub_swl"], [3, 1, 1, "", "Regularizer_TNV"], [3, 1, 1, "", "Regularizer_TV1D"], [3, 1, 1, "", "Regularizer_TV2D"], [3, 1, 1, "", "Regularizer_TV3D"], [3, 1, 1, "", "Regularizer_VTV"], [3, 1, 1, "", "Regularizer_dwl"], [3, 1, 1, "", "Regularizer_fft"], [3, 1, 1, "", "Regularizer_l1"], [3, 1, 1, "", "Regularizer_l12dwl"], [3, 1, 1, "", "Regularizer_l12swl"], [3, 1, 1, "", "Regularizer_l1dwl"], [3, 1, 1, "", "Regularizer_l1med"], [3, 1, 1, "", "Regularizer_l1swl"], [3, 1, 1, "", "Regularizer_l2med"], [3, 1, 1, "", "Regularizer_lap"], [3, 1, 1, "", "Regularizer_lap1D"], [3, 1, 1, "", "Regularizer_lap2D"], [3, 1, 1, "", "Regularizer_lap3D"], [3, 1, 1, "", "Regularizer_lnswl"], [3, 1, 1, "", "Regularizer_smooth1D"], [3, 1, 1, "", "Regularizer_smooth2D"], [3, 1, 1, "", "Regularizer_smooth3D"], [3, 1, 1, "", "Regularizer_swl"], [3, 1, 1, "", "Regularizer_vSVD"], [3, 1, 1, "", "Regularizer_vl1wl"]], "corrct.regularizers.BaseRegularizer": [[3, 2, 1, "", "apply_proximal"], [3, 2, 1, "", "compute_update_primal"], [3, 4, 1, "", "dtype"], [3, 2, 1, "", "info"], [3, 2, 1, "", "initialize_dual"], [3, 2, 1, "", "initialize_sigma_tau"], [3, 2, 1, "", "lower"], [3, 4, 1, "", "op"], [3, 4, 1, "", "sigma"], [3, 4, 1, "", "upd_mask"], [3, 2, 1, "", "update_dual"], [3, 2, 1, "", "upper"], [3, 4, 1, "", "weight"]], "corrct.regularizers.BaseRegularizer_med": [[3, 2, 1, "", "info"], [3, 2, 1, "", "initialize_sigma_tau"], [3, 2, 1, "", "update_dual"]], "corrct.regularizers.Constraint_LowerLimit": [[3, 2, 1, "", "apply_proximal"], [3, 2, 1, "", "info"], [3, 2, 1, "", "initialize_sigma_tau"], [3, 2, 1, "", "update_dual"]], "corrct.regularizers.Constraint_UpperLimit": [[3, 2, 1, "", "apply_proximal"], [3, 2, 1, "", "info"], [3, 2, 1, "", "initialize_sigma_tau"], [3, 2, 1, "", "update_dual"]], "corrct.regularizers.Regularizer_Grad": [[3, 2, 1, "", "initialize_sigma_tau"]], "corrct.regularizers.Regularizer_TNV": [[3, 2, 1, "", "initialize_sigma_tau"]], "corrct.regularizers.Regularizer_VTV": [[3, 2, 1, "", "apply_proximal"]], "corrct.regularizers.Regularizer_dwl": [[3, 2, 1, "", "apply_proximal"], [3, 2, 1, "", "info"], [3, 2, 1, "", "initialize_sigma_tau"], [3, 2, 1, "", "update_dual"]], "corrct.regularizers.Regularizer_fft": [[3, 2, 1, "", "initialize_sigma_tau"]], "corrct.regularizers.Regularizer_l1": [[3, 2, 1, "", "initialize_sigma_tau"], [3, 2, 1, "", "update_dual"]], "corrct.regularizers.Regularizer_lap": [[3, 2, 1, "", "initialize_sigma_tau"]], "corrct.regularizers.Regularizer_lnswl": [[3, 2, 1, "", "initialize_sigma_tau"]], "corrct.regularizers.Regularizer_swl": [[3, 2, 1, "", "apply_proximal"], [3, 2, 1, "", "info"], [3, 2, 1, "", "initialize_sigma_tau"], [3, 2, 1, "", "update_dual"]], "corrct.regularizers.Regularizer_vSVD": [[3, 2, 1, "", "initialize_sigma_tau"]], "corrct.regularizers.Regularizer_vl1wl": [[3, 2, 1, "", "apply_proximal"], [3, 2, 1, "", "initialize_sigma_tau"]], "corrct.solvers": [[3, 1, 1, "", "FBP"], [3, 1, 1, "", "MLEM"], [3, 1, 1, "", "PDHG"], [3, 1, 1, "", "SART"], [3, 1, 1, "", "SIRT"], [3, 1, 1, "", "SolutionInfo"], [3, 1, 1, "", "Solver"]], "corrct.solvers.FBP": [[3, 2, 1, "", "info"]], "corrct.solvers.MLEM": [[3, 2, 1, "", "info"]], "corrct.solvers.PDHG": [[3, 2, 1, "", "info"], [3, 2, 1, "", "power_method"]], "corrct.solvers.SART": [[3, 2, 1, "", "compute_residual"]], "corrct.solvers.SIRT": [[3, 2, 1, "", "info"]], "corrct.solvers.SolutionInfo": [[3, 4, 1, "", "iterations"], [3, 4, 1, "", "max_iterations"], [3, 4, 1, "", "method"], [3, 4, 1, "", "residual0"], [3, 4, 1, "", "residual0_cv"], [3, 4, 1, "", "residuals"], [3, 4, 1, "", "residuals_cv"], [3, 5, 1, "", "residuals_cv_rel"], [3, 5, 1, "", "residuals_rel"], [3, 4, 1, "", "tolerance"]], "corrct.solvers.Solver": [[3, 2, 1, "", "info"], [3, 2, 1, "", "lower"], [3, 2, 1, "", "upper"]], "corrct.struct_illum": [[3, 1, 1, "", "MaskCollection"], [3, 1, 1, "", "MaskGenerator"], [3, 1, 1, "", "MaskGeneratorBernoulli"], [3, 1, 1, "", "MaskGeneratorHalfGaussian"], [3, 1, 1, "", "MaskGeneratorMURA"], [3, 1, 1, "", "MaskGeneratorPoint"], [3, 1, 1, "", "ProjectorGhostImaging"], [3, 3, 1, "", "decompose_qr_masks"], [3, 3, 1, "", "estimate_resolution"], [3, 3, 1, "", "reorder_masks"]], "corrct.struct_illum.MaskCollection": [[3, 2, 1, "", "bin_masks"], [3, 2, 1, "", "get_QR_decomposition"], [3, 2, 1, "", "get_mask"], [3, 2, 1, "", "info"], [3, 2, 1, "", "inspect_masks"], [3, 2, 1, "", "lower"], [3, 4, 1, "", "mask_dims"], [3, 4, 1, "", "mask_support"], [3, 4, 1, "", "mask_type"], [3, 4, 1, "", "masks_dec"], [3, 4, 1, "", "masks_enc"], [3, 5, 1, "", "num_buckets"], [3, 5, 1, "", "num_pixels"], [3, 5, 1, "", "shape_fov"], [3, 5, 1, "", "shape_shifts"], [3, 2, 1, "", "upper"]], "corrct.struct_illum.MaskGenerator": [[3, 4, 1, "", "dtype"], [3, 2, 1, "", "generate_collection"], [3, 2, 1, "", "generate_shifted_mask"], [3, 2, 1, "", "get_interval_shifts"], [3, 2, 1, "", "get_random_shifts"], [3, 2, 1, "", "get_sequential_shifts"], [3, 2, 1, "", "info"], [3, 5, 1, "", "max_buckets"], [3, 5, 1, "", "num_pixels"], [3, 4, 1, "", "shape_fov"], [3, 4, 1, "", "shape_mask"], [3, 4, 1, "", "shape_shifts"], [3, 4, 1, "", "transmittance"]], "corrct.struct_illum.MaskGeneratorBernoulli": [[3, 2, 1, "", "generate_shifted_mask"]], "corrct.struct_illum.MaskGeneratorHalfGaussian": [[3, 2, 1, "", "generate_shifted_mask"]], "corrct.struct_illum.MaskGeneratorMURA": [[3, 2, 1, "", "compute_possible_mask_sizes"], [3, 2, 1, "", "generate_shifted_mask"]], "corrct.struct_illum.MaskGeneratorPoint": [[3, 2, 1, "", "generate_shifted_mask"]], "corrct.struct_illum.ProjectorGhostImaging": [[3, 2, 1, "", "absolute"], [3, 2, 1, "", "adjust_sampling_scaling"], [3, 2, 1, "", "bp"], [3, 2, 1, "", "fbp"], [3, 2, 1, "", "fp"], [3, 4, 1, "", "mc"]], "corrct.testing": [[3, 3, 1, "", "add_noise"], [3, 3, 1, "", "compute_error_power"], [3, 3, 1, "", "create_phantom_nuclei3d"], [3, 3, 1, "", "create_sino"], [3, 3, 1, "", "create_sino_transmission"], [3, 3, 1, "", "download_phantom"], [3, 3, 1, "", "phantom_assign_concentration"], [3, 3, 1, "", "phantom_assign_concentration_multi"], [3, 3, 1, "", "roundup_to_pow2"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "terms": {"": [2, 3, 5, 10, 12], "0": [3, 4, 5, 6, 7, 8, 12], "001": 6, "005": 6, "01": [3, 8], "011": 5, "02": [3, 8], "03": 8, "04": 8, "05": [3, 6, 8], "06": 8, "08": 8, "09": [5, 8], "0rc1": 8, "0rc2": 8, "0rc3": 8, "1": [3, 4, 5, 6, 7, 8, 11, 12], "10": [5, 7, 8, 11, 12], "100": [3, 12], "1000000000": 3, "101": 5, "1016": 5, "102": 5, "1088": 11, "11": [3, 4, 5, 8, 12], "12": [3, 4, 5, 8], "13": [5, 8], "1361": 11, "14": [6, 8], "15": [6, 8], "151": 6, "16": [4, 7, 8, 12], "165": 5, "17": [3, 4, 8], "180": [3, 4, 7, 12], "187": 5, "1d": [1, 2, 3], "1e": 3, "1e9": 3, "2": [3, 4, 5, 6, 7, 8, 12], "20": [3, 8], "2005": 6, "201": 5, "2011": 5, "2014": [3, 12], "2017": [3, 11, 12], "2019": [0, 8], "2020": [3, 6, 8], "2021": 8, "2022": [3, 4, 8], "2023": 8, "2024": 8, "2025": 8, "206": 5, "207": 5, "2071": 6, "21": 3, "22": 2, "23": [3, 8, 12], "24": [6, 8], "25": [6, 8], "250": [3, 6], "256": 7, "26": [3, 11, 12], "262": 6, "28": 3, "29": 8, "2d": [2, 3, 4, 7], "3": [0, 3, 5, 6, 7, 8, 11], "30": 8, "31": 8, "33": 5, "34": 5, "35": 5, "36": 5, "360": 4, "38": 5, "39": [3, 5], "3d": [2, 3, 4, 5, 7, 12], "4": [3, 6, 7, 8], "4142": 6, "45": 7, "47": 5, "4750": [3, 12], "4762": [3, 12], "5": [3, 5, 6, 7, 8], "500": 5, "5707963267948966": [3, 5], "58": 4, "6": [5, 8], "60": 5, "62": 5, "63": 5, "65": 5, "6501": 11, "66": 5, "68": 5, "7": [3, 8], "70": 5, "72": 5, "75": 5, "776": 5, "784": 5, "8": [5, 8], "80": 7, "800": 5, "86": 5, "87": 5, "88": 5, "89": 5, "9": [3, 7, 8], "90": [5, 7], "91": 5, "94": 5, "95": [3, 5], "96": 5, "98": 5, "A": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12], "AND": 0, "AS": 0, "At": 5, "BE": 0, "BUT": 0, "BY": 0, "By": [5, 12], "FOR": 0, "For": 12, "IF": 0, "IN": [0, 7], "If": [3, 4, 5, 6, 10, 11], "In": [3, 4, 5, 6, 7, 10, 12], "It": [3, 5, 6, 11, 12], "NO": 0, "NOT": 0, "Not": 3, "OF": 0, "ON": 0, "OR": 0, "On": 2, "SUCH": 0, "THE": 0, "TO": 0, "The": [1, 2, 3, 4, 5, 6, 7, 10], "To": [7, 11, 12], "_": 12, "_array_lik": [3, 5, 6], "_dtype_lik": [3, 5, 6], "_dtypedict": [3, 5, 6], "_l_": 3, "_nested_sequ": [3, 5, 6], "_nestedsequ": [3, 4, 5, 6], "_projector_backend": 12, "_scalartype_co": [3, 4, 5, 6], "_supportsarrai": [3, 4, 5, 6], "_supportsdtyp": [3, 5, 6], "_type": [3, 5, 6], "_vol_shape_xyz": 3, "_x_": 3, "a_num_row": 3, "aa9d54": 11, "abbrevi": 11, "abc": [3, 5, 6], "about": 11, "abov": 0, "abs_fract": 3, "absolut": [3, 4, 9], "absorpt": [2, 5], "abstract": 3, "access": 3, "accord": 4, "accordingli": 3, "account": 3, "achiev": 12, "acquisit": [3, 12], "across": [1, 2, 3], "acta": 5, "add": 3, "add_nois": [3, 9], "add_poisson": 3, "adher": 2, "adj_shap": [3, 9], "adjoint": 3, "adjust": 3, "adjust_sampling_sc": [3, 9], "adjust_sc": 3, "advanc": [3, 11, 12], "advis": 0, "after": 3, "against": [2, 3, 4, 6, 11], "aid": 3, "aim": 10, "al": 5, "algebra": [3, 11, 12], "algorithm": [2, 3, 11, 12], "alias": 4, "align": [2, 3, 8, 9, 11], "aligned_ord": 3, "all": [0, 1, 2, 3, 4, 5, 6, 10, 12], "allow": [6, 10], "along": [1, 2, 3, 4, 6, 7], "alpha": 3, "also": [2, 3, 6, 11, 12], "alwai": [11, 12], "among": 2, "amplitud": 4, "an": [2, 3, 4, 5, 6, 11, 12], "anaconda": 11, "analyt": 12, "angl": [1, 2, 3, 4, 5, 6, 12], "angle_axi": 6, "angle_ind": 3, "angle_rad": [3, 5], "angles_det_rad": [3, 5, 7], "angles_detectors_rad": 12, "angles_rad": [3, 4, 12], "angles_rot_rad": [3, 5, 7, 9], "angles_t_rad": 3, "angles_w_rad": 3, "angular": 3, "ani": [0, 3, 4, 5, 6, 11, 12], "anoth": 12, "anti": 3, "api": 2, "appli": [2, 3, 5, 6], "applic": [2, 3], "apply_filt": [3, 9], "apply_flat_field": [3, 6], "apply_minus_log": [3, 6], "apply_propagation_filt": [3, 5], "apply_proxim": [3, 9], "approxim": [2, 5], "ar": [0, 1, 3, 4, 5, 6, 11, 12], "arbitrari": 2, "area": 4, "arg": 3, "argument": [3, 5, 6], "aris": 0, "around": 4, "arrai": [3, 6], "array_lik": 3, "arraylik": [3, 4, 5, 6], "articl": 6, "artifact": 6, "as_refer": [3, 4], "assess": 7, "assign_data": [3, 9], "associ": [3, 6], "assum": [3, 6, 12], "astra": [2, 3, 7, 11, 12], "astyp": 7, "att_in": 12, "att_out": 12, "att_vol": 7, "att_vol_angl": [3, 9], "attenu": [2, 3, 6, 7, 8, 9, 10, 11], "attenuationprojector": 2, "attenuationvolum": [3, 5, 7, 12], "attributeerror": 3, "author": [3, 4, 5, 6, 8], "auto": [3, 6], "auto_crop": 6, "autom": 2, "automat": [2, 6], "avail": [2, 3, 10, 12], "averag": [3, 4, 5, 6, 10, 12], "avoid": 6, "ax": [2, 3, 5, 6, 7, 9], "axes_ord": 3, "axi": [1, 2, 3, 4, 6, 12], "axis_channel": 3, "azimuth": [2, 6], "azimuthal_integr": [3, 6], "b": [3, 4, 5], "b_mask": 3, "back": [2, 3, 10, 11, 12], "backend": [2, 7, 11, 12], "background": [1, 2, 3, 4, 6, 9], "background_avg": 3, "background_from_margin": [3, 6], "background_std": 3, "backproject": [2, 3, 12], "ball": [3, 6], "bandwidth": 6, "bar": 3, "barbei": 3, "base": [2, 3, 4, 5, 11, 12], "baseparametertun": [3, 9], "baseregular": [3, 9], "baseregularizer_m": [3, 9], "basetransform": [3, 6, 9], "basewavelettransform": [3, 9], "basi": [3, 12], "basic": [2, 12], "basisopt": [3, 9], "basisoptionsblock": [3, 9], "basisoptionswavelet": [3, 9], "batenburg": [3, 12], "beam": [2, 3, 5, 8, 12], "beam_fwhm_um": 5, "beam_shap": 5, "becaus": 3, "been": [3, 5], "behavior": [2, 3], "benefici": 6, "bernoulli": [2, 3], "best": 4, "beta": [2, 5, 10], "better": 2, "between": [2, 3, 4, 5, 6], "bia": [2, 3, 4, 6], "bin": [2, 3, 6], "bin_img": [3, 6], "bin_mask": [3, 9], "binari": 0, "binning_start": [3, 9], "binning_typ": [3, 9], "biol": 6, "bior2": [3, 6], "bior4": 3, "bit": [6, 12], "bool": [1, 3, 4, 5, 6, 10], "boolean": 4, "border": 2, "borders_dvwu": 4, "both": [1, 5, 12], "bottom": 7, "box": 12, "bp": [2, 3, 7, 9], "bp_angl": [3, 9], "bp_angles_": 7, "bp_angles_3": 7, "bp_angles_a": 7, "branch": 11, "bsd": [0, 11], "bucket": 3, "bucket_v": 3, "buckets_fract": 3, "bug": 2, "build": [2, 3, 5], "busi": 0, "byte": [3, 4, 5, 6], "c": [0, 11], "ca": 3, "calcul": 2, "call": [2, 3, 10, 12], "callabl": [3, 6], "camera": 4, "can": [1, 3, 5, 6, 10, 11, 12], "cannot": 12, "care": 12, "case": [2, 3, 4, 5, 6], "caus": 0, "cc": 4, "cc_coord": 4, "cct": [7, 12], "cd": 11, "cea": [4, 5], "cell": 3, "center": [1, 2, 3, 6, 9, 12], "certain": 3, "cfg": 2, "chambol": [2, 3, 11, 12], "chang": 2, "changelog": 8, "channel": [2, 3, 11], "check": 11, "choos": [5, 12], "chosen": [1, 3, 5], "cicwi": 11, "circular": [2, 3, 6, 12], "circular_mask": [3, 6, 7], "class": [1, 2, 3, 4, 5, 6, 10, 12], "claus": [0, 11], "clean": 3, "cleanup": 2, "clip": 3, "clockwis": [3, 7], "clone": 11, "cm": 5, "cmp": 5, "cmp_name": 5, "cmptn_prod": 5, "co": 6, "code": [0, 2, 3, 7, 11, 12], "coeffici": [2, 3, 5, 6, 10], "collabor": [2, 11], "collapse_detector": [3, 9], "collect": [3, 4, 5, 6, 10], "column": 3, "com": [1, 3, 4, 6, 11], "com_ref_zyx": 4, "combin": 3, "combine_shifts_vu": [3, 9], "compar": 4, "compat": 2, "complex": [3, 4, 5, 6, 12], "compli": 2, "compon": 3, "compos": 5, "composit": [5, 10, 12], "compound": 5, "compress": 3, "compton": [3, 5, 10], "compund": 5, "comput": [1, 2, 3, 4, 5, 6, 12], "compute_averag": [5, 10], "compute_data_dual_dot": [3, 9], "compute_eigen_flat": [3, 6], "compute_error_pow": [3, 9], "compute_filt": [3, 9], "compute_frc": [3, 6], "compute_loss_valu": [3, 9], "compute_map": [3, 5, 7], "compute_possible_mask_s": [3, 9], "compute_primal_dual_gap": [3, 9], "compute_profil": 6, "compute_reconstruction_and_loss": [3, 9], "compute_reconstruction_error": [3, 9], "compute_residu": [3, 9], "compute_residual_norm": [3, 9], "compute_update_prim": [3, 9], "compute_variance_poisson": [3, 6], "compute_variance_transmiss": [3, 6], "compute_variance_weight": [3, 6], "computed_vol": 3, "concentr": 5, "concept": 11, "conda": 2, "condit": [0, 2, 12], "cone": [2, 3], "configur": 3, "conjunct": 12, "consequenti": 0, "consid": [5, 6], "consist": [2, 7], "const": 6, "constant": [2, 3], "constraint": [2, 3, 12], "constraint_lowerlimit": [3, 9], "constraint_upperlimit": [3, 9], "constructor": 3, "contain": [4, 5, 10, 11, 12], "content": [2, 8, 9], "context": 6, "contract": 0, "contrast": [2, 5, 8], "contribut": 8, "contributor": [0, 8], "convers": 2, "convert": [3, 5, 12], "convert_energy_to_wlength": [3, 5], "convert_wlength_to_energi": [3, 5], "convolut": [2, 3, 6], "coord": 5, "coordin": [3, 4, 6, 7, 12], "coords_bal": 6, "copi": [2, 3, 9], "copyright": 0, "cor": 4, "cor_pos_u": 3, "corr": 11, "corrct": [7, 8, 12], "correct": [2, 3, 4, 5, 6, 7, 8, 11], "correctli": 2, "correl": [1, 2, 3, 4, 6], "correspond": [3, 4, 5, 6, 12], "cosin": 3, "cost": 3, "count": 12, "counter": 7, "cover": 5, "coverag": 2, "cp": 2, "cpu": 2, "crash": 2, "creat": [3, 4, 6, 12], "create_basi": [3, 9], "create_basis_wavelet": [3, 9], "create_phantom_nuclei3d": [3, 9], "create_random_test_mask": [3, 9], "create_sino": [3, 9], "create_sino_transmiss": [3, 9], "creation": [2, 12], "criteria": 6, "crop": [2, 6], "cross": [1, 2, 3, 4, 5, 6, 10, 11, 12], "crossvalid": [3, 9], "ct": 11, "ctf": [2, 5], "cud": 4, "cuda": 2, "current": [3, 4, 12], "curv": [2, 3, 4, 5, 6], "custom": [2, 3, 12], "cv_fraction": 3, "cwi": [3, 4, 5, 6], "d": [2, 3, 4, 5, 12], "damag": 0, "dark": 6, "darks_wvu": 6, "data": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11], "data_dtyp": 3, "data_dvwu": 4, "data_format": [3, 4], "data_mask_dvwu": 4, "data_shap": 3, "data_shape_vu": 6, "data_term": [9, 12], "data_term_test": 3, "data_test_mask": 3, "data_vwu": [3, 4, 6], "data_wu": [3, 4], "data_wu_shap": 3, "data_wvu": 5, "datafidel": 3, "datafidelity_hub": [3, 9], "datafidelity_kl": [3, 9, 12], "datafidelity_l1": [3, 9, 12], "datafidelity_l12": [3, 9], "datafidelity_l1b": [3, 9], "datafidelity_l2": [3, 9, 12], "datafidelity_l2b": [3, 9], "datafidelity_ln": [3, 9], "datafidelity_wl2": [3, 9, 12], "datafidelitybas": [3, 9], "dataset": [1, 4, 6], "datatyp": 3, "de": [6, 12], "deadzon": 2, "deal": 12, "deault": 3, "decai": 5, "decim": [2, 3, 4], "decod": 3, "decompos": 3, "decompose_qr_mask": [3, 9], "decomposit": [2, 3, 6], "deconvolut": 2, "decrement": 5, "dedic": [2, 12], "deepcopi": 3, "def": [1, 10], "default": [2, 3, 4, 5, 6, 12], "defin": [2, 3], "definit": [5, 6], "deg2rad": [7, 12], "degre": [3, 4, 6], "deleg": 12, "delta": [2, 5, 10], "delta_beta": 5, "demand": 2, "denois": [2, 9], "denoise_imag": [3, 9], "densiti": 5, "depend": [2, 3, 6, 11, 12], "deprec": 2, "depth": 12, "deriv": [0, 1, 3, 4, 12], "describ": [10, 12], "descript": [2, 5, 11, 12], "desir": 5, "destin": 4, "destrip": 2, "destripe_wlf_vwu": [3, 6], "det_angle_rad": 7, "det_dist_i": 3, "det_ind": 5, "det_pos_vu": 3, "det_pos_xyz": [3, 9], "det_shape_vu": [3, 9], "det_u_xyz": [3, 9], "det_v_xyz": [3, 9], "detail": 11, "detect": 3, "detection_effici": 3, "detector": [1, 2, 3, 4, 5, 8, 10, 12], "detectors_pos_rad": 3, "detectorshiftsbas": [1, 3, 4], "detectorshiftspr": [1, 3, 4], "detectorshiftsxc": [3, 4], "detectorxrf": [3, 5, 10], "develop": [2, 5, 11], "deviat": [3, 4, 6], "diagon": [3, 6], "dict": [4, 5], "dictionari": 5, "differ": [2, 3, 4, 5, 6, 12], "dimens": [2, 3, 4, 6], "dimension": [2, 6], "dir_shap": [3, 9], "direct": [0, 2, 3, 4, 5, 6, 8, 12], "direct_dwt": [3, 9], "direct_svd": [3, 9], "direct_swt": [3, 9], "directori": [2, 11], "discard": 6, "disclaim": 0, "discret": 5, "disp_zyx": 3, "displac": 3, "displai": 6, "dist": 3, "dist_um": 5, "distanc": [3, 5], "distance_mm": [3, 5], "distribut": [0, 3], "diverg": [3, 9], "dmpelt": 3, "do": [3, 4, 12], "docstr": 2, "document": [0, 2, 11], "doe": 12, "doi": [5, 11], "domain": [3, 5, 6], "don": [3, 11], "done": 12, "dot": 3, "doubl": 2, "down": 7, "download": 3, "download_phantom": [3, 9], "draft": 2, "drawback": 12, "drift": [2, 4], "driven": 12, "dtype": [3, 4, 5, 6, 9], "dtypelik": [3, 5, 6], "dual": [3, 11, 12], "due": 3, "dummi": 3, "dure": 3, "dvwu": [3, 4], "dwell_time_": 3, "dwl": 3, "dwt": 2, "dynam": 6, "e": [3, 10, 11, 12], "each": [3, 4, 5, 6], "eas": 2, "edg": [2, 3, 6], "effect": 12, "effici": 3, "eigen": 6, "either": [3, 4, 5, 6, 10, 11, 12], "el_prod": 5, "elbow": [11, 12], "element": [3, 5, 10, 12], "em_lin": 3, "emid": 5, "emiss": [3, 10, 11, 12], "emit": [3, 5, 12], "emitted_loc": [3, 5, 7], "enabl": 4, "encod": 3, "encount": 10, "end": [3, 5, 10], "end_angle_deg": 3, "endors": 0, "endpoint": 12, "energi": [2, 3, 5, 10, 12], "energy_in_kev": 5, "energy_kev": 5, "energy_kev_rang": 5, "energy_out_kev": 5, "enough": 4, "entir": 12, "enumer": 7, "eq": 5, "equal": 6, "equat": 5, "err_l1": 3, "err_l2": 3, "error": [2, 3, 4, 5, 6], "error_norm": 4, "especi": 2, "esrf": [3, 4, 5, 6, 11], "estim": [2, 3, 4, 6, 11, 12], "estimate_resolut": [3, 6, 9], "et": 5, "etc": [2, 3, 5, 12], "european": [3, 4, 5, 6], "evalu": [3, 4], "even": 0, "event": 0, "exampl": 2, "excit": [7, 12], "executor": [3, 9], "exemplari": 0, "exist": 3, "exp": 3, "expand": 2, "expect": 3, "expected_vol": 3, "experiment": [2, 12], "explicit": [3, 9], "expon": 6, "exponenti": 3, "expos": [1, 3, 10, 12], "express": [0, 10], "extent": [3, 5, 9], "extern": 2, "extract": 4, "extract_peak_region_nd": [3, 4], "extract_peak_regions_1d": [3, 4], "f": 7, "f_avg": 3, "f_coord": 4, "f_std": 3, "f_val": [3, 4], "f_x": 4, "factor": 6, "fals": [1, 3, 4, 5, 6, 10, 12], "falt": 6, "famili": [5, 10], "famou": [10, 12], "fast": 11, "fbp": [2, 3, 9, 11], "fbp_filter": [3, 9, 12], "fc_ax": 4, "fdk": 2, "fe": 3, "feedback": 2, "few": 11, "fft": [2, 3, 4, 6, 9], "fft_filter": 3, "fidel": [2, 3], "fiduci": 4, "field": [2, 3, 6], "field_nam": 3, "fig": 7, "figsiz": 7, "figur": [5, 6, 7], "file": [2, 11], "filt_siz": 3, "filter": [2, 4, 5, 6, 9, 11, 12], "filter_fouri": [3, 9], "filter_length": 5, "filter_nam": [3, 9], "filter_r": [3, 9], "filter_typ": 5, "filtercustom": [3, 9], "filterfbp": [3, 9], "filtermr": [3, 9], "final": [3, 12], "find": [1, 4, 12], "find_shifts_vu": [3, 4], "finish": 3, "first": [3, 4, 6, 12], "fit": [0, 2, 3, 6, 9, 11], "fit_camera_tilt_angl": [3, 4], "fit_func_min": [3, 9], "fit_image_rotation_and_scal": [3, 4], "fit_l1": [1, 4], "fit_loss_min": [3, 9], "fit_scale_bia": [3, 6], "fit_shifts_u_sad": [3, 4], "fit_shifts_vu_xc": [3, 4], "fit_shifts_zyx_xc": [3, 4], "fit_sinusoid": [3, 4], "fit_u": [1, 3, 4], "fit_u_180": [3, 4], "fit_u_360": [3, 4], "fit_v": [1, 3, 4], "fit_vu": [3, 4], "fit_vu_accum_drift": [3, 4], "fix": 3, "fixel": 3, "flag": 3, "flat": [2, 3, 6], "flats_wvu": 6, "flexibl": 2, "flip": [3, 8], "flip_adjoint": [3, 9], "float": [1, 3, 4, 5, 6, 10], "float32": [3, 5, 6, 7], "fluo_lin": 5, "fluolin": [3, 5, 10], "fluoresc": [2, 3, 5, 8, 12], "flux": 3, "folder": 11, "follow": [0, 6, 7, 11, 12], "fontsiz": 7, "form": [0, 2, 3], "format": [2, 6], "former": [10, 12], "forward": [2, 3, 4, 11, 12], "found": [6, 12], "fourier": [2, 3, 4, 5, 6], "fourier_ab": 3, "fov": 3, "fov_siz": 3, "fov_size_mm": 3, "fp": [2, 3, 9], "fp_angl": [3, 9], "fraction": [3, 5], "franc": [3, 4, 5, 6], "frc": [2, 6], "free": 11, "frequenc": [4, 5, 6], "from": [0, 1, 2, 3, 4, 5, 6, 7, 12], "fsc": [2, 6], "full": [2, 5, 6], "func": 6, "function": [1, 2, 3, 4, 5, 6, 10, 11, 12], "fwhm": 5, "fwhm_kev": 5, "fx": 4, "fy": 4, "g": [3, 10, 11, 12], "gap": 3, "gaussian": [2, 3, 5, 6, 11], "gener": [2, 3, 6, 10], "generate_collect": [3, 9], "generate_shifted_mask": [3, 9], "geom_typ": [3, 9], "geometri": [2, 3, 5, 8, 9, 10], "get": [3, 8], "get_3d": [3, 9], "get_attenu": [3, 5], "get_available_filt": [3, 9], "get_compound": [3, 5], "get_compound_cross_sect": [3, 5], "get_compton_scatt": [3, 5], "get_default_from_data": [3, 9], "get_default_from_volum": [3, 9], "get_default_parallel": [3, 9], "get_delta_beta": [3, 5], "get_delta_beta_curv": [3, 5], "get_element_mass_fract": [3, 5], "get_element_numb": [3, 5], "get_element_number_and_symbol": [3, 5], "get_energi": [3, 5, 10], "get_field_sc": [3, 9], "get_fluo_product": [3, 5], "get_interval_shift": [3, 9], "get_lambda_rang": [3, 9], "get_lin": [3, 5, 10], "get_linear_attenuation_coeffici": [3, 5], "get_map": [3, 5], "get_mask": [3, 9], "get_padding_s": [3, 9], "get_pre_weight": [3, 9], "get_prj_geom_con": [3, 9], "get_prj_geom_parallel": [3, 9], "get_projector_arg": [3, 5], "get_propagation_filt": [3, 5], "get_qr_decomposit": [3, 9], "get_radiation_r": [3, 5], "get_random_shift": [3, 9], "get_rot_axis_dir": [3, 9], "get_sequential_shift": [3, 9], "get_vers": [3, 9], "get_vol_geom_from_data": [3, 9], "get_vol_geom_from_volum": [3, 9], "ghost": [2, 3], "gi": 2, "git": 11, "github": [2, 3, 11], "give": 4, "given": [1, 2, 3, 4, 5, 6, 10, 12], "gnd_truth": 3, "go": [3, 11], "goe": 12, "good": 0, "gpu": [2, 12], "gradient": [2, 3, 9, 11, 12], "grenobl": [3, 4, 5, 6], "ground": 3, "group": [3, 4, 5, 6, 12], "guid": [2, 8, 11], "ha": 3, "hald": 6, "half": [2, 3, 5, 6], "halv": 6, "ham": 3, "handl": [2, 5, 6, 10, 12], "hann": [3, 4, 6, 12], "hard": 2, "harrison": 11, "have": [2, 3, 4, 5, 6, 11, 12], "heel": 6, "helper": 3, "here": [7, 11], "heterogen": 10, "high": [4, 6], "highest": 1, "hint": 2, "holder": 0, "horizont": [1, 3, 4, 6, 7, 12], "how": [8, 12], "howev": 0, "hp_val": 3, "http": [3, 11], "huber": [2, 3], "huber_s": 3, "hwhm": 3, "hybrid": [3, 11, 12], "hyper": 3, "i": [0, 1, 2, 3, 4, 5, 6, 10, 11, 12], "i0": 6, "ident": [3, 6], "identif": 4, "ieee": [3, 12], "ifft": [3, 9], "ii_a": 7, "illumin": [2, 3], "imag": [1, 2, 3, 4, 5, 6, 7, 11, 12], "img": [3, 6], "img1": 6, "img2": 6, "img_1": 4, "img_1_vu": 4, "img_2": 4, "img_2_vu": 4, "img_clean": 3, "img_data": 6, "img_shap": 5, "imping": 3, "implement": [2, 3, 12], "impli": 0, "import": [7, 10, 12], "impos": [3, 12], "improv": [2, 3, 12], "imshow": 7, "in_energy_kev": 3, "incid": 5, "incident": 0, "incident_loc": [3, 5, 7], "incl": 2, "inclin": 3, "includ": [0, 1, 2, 3, 10, 11, 12], "incom": [3, 5, 8, 12], "inconsist": 2, "incorrect": 5, "increas": 6, "independ": [3, 4], "index": [3, 5, 8], "indic": 3, "indirect": 0, "induc": [3, 11, 12], "indx": [3, 5], "inf": [3, 6], "info": [3, 9], "inform": [2, 5, 6, 11], "initi": [2, 3, 9, 12], "initialize_du": [3, 9], "initialize_sigma_tau": [3, 9], "input": [2, 3, 6], "inspect": 3, "inspect_fourier_img": [3, 6], "inspect_mask": [3, 9], "inspir": 3, "instal": 2, "instanc": 3, "instead": [2, 4, 6, 10, 12], "instruct": 2, "int": [3, 4, 5, 6, 10], "integ": [3, 5, 6], "integr": [1, 2, 4, 5, 6], "intend": 12, "intens": [1, 2, 3, 4, 5, 6], "interact": 5, "interest": [1, 5], "interfac": [2, 3, 10, 12], "intern": [3, 12], "interpol": [1, 6], "interpret": 2, "interrupt": 0, "intersect": [2, 6], "interv": 3, "intial": 12, "introduc": [2, 12], "invers": [2, 3], "inverse_dwt": [3, 9], "inverse_svd": [3, 9], "inverse_swt": [3, 9], "involv": 12, "io": 11, "irig": [4, 5], "is_3d": [3, 9], "is_dir_oper": [3, 9], "is_initi": [3, 9], "is_squar": [3, 9], "is_symm": [3, 9], "isotrop": 2, "issu": 11, "iter": [3, 9, 11, 12], "its": [0, 6, 11], "j": [2, 3, 5, 6, 12], "jan": 3, "jerom": 11, "jun": 3, "jupyt": 11, "k": [3, 10, 12], "ka": 3, "ka1": 5, "ka2": 5, "ka3": 5, "kb1": 5, "kb2": 5, "kb3": 5, "kb4": 5, "kb5": 5, "keep": 2, "kernel": [3, 6, 9], "kev": [2, 3, 5], "keyword": 3, "kl": 3, "knowledg": 12, "known": 12, "kullback": 12, "kullbackleibl": 3, "kwarg": 3, "kwd": [3, 6], "l": [2, 3, 5], "l1": [2, 3, 4, 11, 12], "l12": [2, 3], "l1b": 2, "l2": [2, 3, 4, 12], "l2_axi": 3, "l2b": 2, "l_inf": 4, "la1": 5, "la2": 5, "label": [3, 6, 9], "lambda": 3, "lambda_smooth": [3, 9], "laplacian": [2, 3, 9, 11], "larger": [2, 4, 6], "largest": 6, "last": [3, 6], "later": 12, "latest": 2, "latter": [10, 12], "lb1": 5, "lb10": 5, "lb15": 5, "lb17": 5, "lb2": 5, "lb3": 5, "lb4": 5, "lb5": 5, "lb6": 5, "lb7": 5, "lb9": 5, "lcurv": [3, 9], "le": 5, "leak": 2, "learn": [11, 12], "least": [2, 3, 6, 12], "leav": 3, "leave_progress": 3, "left": [3, 7], "leftward": 7, "legaci": 2, "leibler": 12, "length": [3, 5, 12], "lesaint": [2, 11], "level": [3, 6, 9], "lg1": 5, "lg2": 5, "lg3": 5, "lg4": 5, "lg5": 5, "lg6": 5, "lg8": 5, "lh": 5, "liabil": 0, "liabl": 0, "librari": 5, "licens": [0, 8], "like": [11, 12], "likelihood": [3, 11, 12], "limit": [0, 2, 3, 12], "linalg": [2, 3], "line": [2, 3, 4, 5, 6, 10], "line_1": 6, "line_2": 6, "line_shap": 5, "linear": [2, 3, 5, 6, 10, 12], "linearoper": [2, 3], "lines_intersect": [3, 6], "linessiegbahn": [3, 5, 10], "link": 2, "linspac": 12, "lint": 2, "list": [0, 3, 4, 5, 6, 10, 11], "liter": [3, 5], "ll": 5, "ln_ax": 3, "local": [3, 5, 6, 10, 12], "local_error": 3, "log": [2, 3, 6], "logan": [3, 12], "logarithm": 6, "look": [5, 7, 12], "lorentzian": [2, 5], "loss": [0, 3], "loss_funct": 3, "lot": 2, "low": 2, "lower": [2, 3, 9], "lower_limit": [3, 6, 12], "lt": 5, "lu": 5, "lv": 5, "m": [2, 3, 5, 6, 12], "ma1": 5, "ma2": 5, "machin": 11, "macro": 5, "magnitud": 3, "mai": [0, 4], "main": [10, 11], "mainli": 10, "malform": 3, "manag": 11, "mani": 4, "manipul": 2, "manner": 12, "map": [2, 3, 4, 5, 10, 12], "mar": 6, "margin": [4, 6], "marker": 4, "mask": [2, 3, 6], "mask_dim": [3, 9], "mask_encod": 3, "mask_inds_vu": 3, "mask_shap": [3, 9], "mask_support": [3, 9], "mask_typ": [3, 9], "maskcollect": [3, 9], "maskgener": [3, 9], "maskgeneratorbernoulli": [3, 9], "maskgeneratorhalfgaussian": [3, 9], "maskgeneratormura": [3, 9], "maskgeneratorpoint": [3, 9], "masks_dec": [3, 9], "masks_enc": [3, 9], "mass": [1, 2, 4, 5, 6], "mass_fract": 5, "match": [3, 6, 10], "materi": [0, 2, 3, 8, 9], "material_compound": 5, "material_fract": 5, "materials_composit": 5, "materials_fract": 5, "mathemat": 11, "matplotlib": [5, 7], "matric": 2, "matrix": [2, 3], "matter": 5, "max": [4, 5], "max_bucket": [3, 9], "max_iter": [3, 9], "max_masks_ratio": 3, "max_shift": 4, "maxim": 3, "maximis": 11, "maximul": 3, "maximum": [3, 4, 5, 11, 12], "mb": 5, "mc": [3, 9], "md": 11, "mea": [3, 11, 12], "mean": [3, 4, 5, 6], "mean_energy_kev": 5, "meaning": 3, "meant": 12, "measur": 3, "median": [2, 3], "memori": 2, "merchant": 0, "merg": 2, "met": 0, "meter": 5, "method": [1, 2, 3, 4, 6, 9, 10, 11, 12], "mg": 5, "micron": 5, "min": [2, 4, 5, 11, 12], "min_approx": 3, "min_f_val": 3, "min_hp_val": 3, "minim": [2, 3], "minimum": [3, 6], "misc": [3, 9], "miscellan": 6, "mismatch": [2, 4, 6], "mlem": [2, 3, 9, 11], "mode": [2, 3, 4, 6], "mode_ful": 6, "model": [2, 5, 8, 9, 11], "modern": 2, "modif": 0, "modifi": 3, "modul": [1, 2, 8, 9, 10, 11, 12], "molar": 5, "moment": 6, "more": [2, 6, 10, 11, 12], "morphologi": 12, "mostli": 12, "move": 2, "mr": 12, "multi": [2, 3, 5, 11, 12], "multipl": [2, 3], "mura": [2, 3], "must": 0, "n": [3, 6, 11, 12], "name": [0, 2, 3, 5, 11, 12], "ndarrai": [1, 3, 4, 5, 6, 10], "ndarrayfloat": [1, 3, 4], "ndarrayint": [3, 6], "ndim": [2, 3, 6, 9], "necessari": [2, 6], "need": [3, 5, 6, 12], "neglig": 0, "neither": [0, 5, 6], "netherland": [3, 4, 5, 6], "new": [2, 3], "nicola": [0, 3, 4, 5, 6, 11], "nois": [3, 9, 11, 12], "nomenclatur": 10, "non": [2, 6, 12], "none": [1, 3, 4, 5, 6, 7], "nor": [0, 5, 6], "norm": [2, 3, 4, 9, 12], "norm_cross_corr": [3, 6], "normal": [2, 3, 4, 6, 9], "normalize_fouri": [1, 4], "notabl": [2, 3], "note": 3, "notic": 0, "notimplementederror": 6, "nov": [3, 5, 11, 12], "now": 2, "np": [3, 5, 6, 7, 12], "nuclear": [2, 3, 11], "nuclei": 3, "num_angl": 3, "num_averag": 3, "num_bucket": [3, 9], "num_filt": [3, 9], "num_per_ord": 3, "num_photon": 3, "num_pixel": [3, 9], "num_point": 5, "num_shift": 3, "number": [3, 4, 5, 6], "numpi": [2, 3, 5, 6, 7, 12], "nyquist": 6, "object": [3, 4, 5], "off": 6, "offer": [1, 10], "offset": [4, 6], "omega": [6, 12], "one": [2, 3, 4, 5, 6, 10, 12], "ones": 12, "onli": [2, 3, 5, 12], "op": [3, 9], "op_a": 3, "open": 11, "oper": [2, 6, 9, 11, 12], "optim": 11, "option": [2, 3, 4, 5, 6, 11, 12], "order": [2, 3, 6, 9], "org": 11, "organ": 12, "orient": 2, "origin": [3, 6, 12], "other": [0, 2, 4, 11, 12], "other_ax": 6, "otherwis": [0, 6], "our": 11, "out": [0, 3, 4, 5, 7, 11], "outgo": 3, "outlier": 2, "output": [2, 3, 4, 5, 6], "outsid": [2, 4], "over": [2, 3, 4, 5, 6, 10], "overal": 2, "p": [3, 4, 12], "packag": [2, 8, 9, 10, 11, 12], "pad": [2, 3, 4, 6], "pad_axi": 6, "pad_mod": [3, 4, 9], "pad_on_demand": 3, "pad_sinogram": [3, 6], "pad_u": 4, "pad_zyx": 4, "padding_u": 3, "page": [8, 12], "pair": [4, 6], "paper": 11, "parabol": [2, 3], "parallel": [2, 3, 12], "parallel3d": 3, "parallel_ev": 3, "param": 3, "param_tun": 9, "paramet": [2, 3, 4, 5, 6, 8, 11], "parker": 2, "part": 5, "partial": 3, "particip": 11, "particular": [0, 7, 10], "particularli": 12, "pass": [2, 3, 4, 5, 6, 12], "past": 2, "patch_astra_2d": 3, "patrick": 11, "pdhg": [2, 3, 9, 11], "peak": [1, 4], "peak_radiu": 4, "pelt": [2, 3, 12], "pencil": [2, 3, 5], "pencil_beam_profil": [3, 5], "per": [1, 3, 6, 12], "percentil": 6, "perform": [2, 3, 4, 6, 12], "permiss": 0, "permit": 0, "ph": 3, "ph_or": 3, "phantom": [2, 3], "phantom_assign_concentr": [3, 9], "phantom_assign_concentration_multi": [3, 9], "phase": [2, 3, 4, 8, 9], "photon": [3, 5, 12], "photon_flux": 3, "phton": 3, "physic": [2, 3, 8, 9, 11, 12], "pi": [3, 7], "piec": 3, "pip": [2, 11], "pix2vox": 3, "pix2vox_ratio": [3, 9], "pix_size_um": 5, "pix_weight": 3, "pixel": [2, 3, 4, 5, 6, 12], "pixel_size_um": 5, "place": [3, 4], "platform": 2, "pleas": [6, 11], "plot": [2, 3, 5, 6], "plot_emission_line_attenu": [3, 5], "plot_filt": [3, 9], "plot_filter_respons": [3, 5], "plot_frc": [3, 6], "plot_map": [3, 5, 7], "plot_result": [3, 5], "plot_transmittance_decai": [3, 5], "plt": 7, "pock": [2, 3, 11, 12], "point": [3, 4, 5, 6, 12], "poisson": [3, 6, 11, 12], "poly_ord": 6, "polynomi": 6, "portion": 2, "posit": [1, 3, 4, 6, 8, 10, 12], "possibl": [0, 3, 12], "possibli": 2, "post": [3, 9], "potenti": 2, "power": [2, 3, 6], "power_method": [3, 9], "power_spectrum": [3, 6], "pp": [3, 5, 6, 11, 12], "pre": [2, 3, 4, 8, 9], "precis": 4, "precision_decim": 4, "precondion": 2, "precondit": 2, "predict": [3, 5], "prefer": 2, "present": 12, "prevent": 2, "primal": [3, 11, 12], "prime": 3, "print": [5, 6], "prior": [0, 12], "prj": [6, 12], "prj_data": 6, "prj_intens": [3, 9], "prj_shape": [3, 9], "prj_vu": 3, "prj_vwu": 3, "probe": 3, "problem": [3, 10], "process": [2, 3, 7, 9, 12], "procur": 0, "produc": [3, 5, 7], "product": [0, 3, 5], "profil": [1, 3, 4, 6], "profile_s": 5, "profit": 0, "progress": [2, 3], "proj": 6, "proj_dvwu": 4, "proj_geom": 4, "proj_prim": 3, "proj_vwu": 4, "proj_wu": 4, "project": [1, 2, 3, 4, 6, 8, 11], "project_displacement_to_detector": [3, 9], "projectiongeometri": [2, 3, 4, 9], "projector": [2, 5, 7, 9, 11], "projector_backend": [3, 9], "projectorattenuationxrf": [2, 3, 9, 12], "projectorbackend": [3, 12], "projectorghostimag": [3, 9], "projectormatrix": [2, 3, 9], "projectoroper": [3, 9], "projectoruncorrect": [3, 7, 9, 12], "projs_wvu": 6, "promot": [0, 3], "pronounc": 11, "propag": [2, 5], "properti": [3, 5], "provid": [0, 1, 3, 5, 7, 11, 12], "proxim": 3, "psf": [2, 3, 5, 9], "pull": 11, "purpos": [0, 3], "pwise_chan_norm": 3, "pwise_der_norm": 3, "pwise_lvl_norm": 3, "pycorrectedemissionct": 3, "pymr": 11, "pymrfbp": 3, "pypi": 2, "pyplot": 7, "pyproject": 2, "python": [2, 11], "pywavelet": 2, "q": 3, "qr": [2, 3], "question": 11, "r": 3, "rad2deg": 7, "radian": [3, 12], "radiat": 5, "radio": 5, "radiu": [4, 6], "radius_offset": [6, 7], "rai": [3, 5, 8, 11, 12], "rais": [3, 4, 5, 6], "ramp": [3, 12], "random": 3, "rang": [3, 4, 5, 6], "rate": 5, "ratio": [3, 6], "re": [3, 4, 12], "reach": 3, "read": 3, "readabl": 2, "reader": 12, "readout": 3, "readout_noise_std": 3, "real": [3, 5], "rec": 3, "rec_vol_zyx": 4, "receiv": 5, "recent": [2, 4, 5], "recentervolum": [3, 4], "recommend": 11, "reconstruct": [2, 3, 4, 6, 8, 10, 11], "redistribut": 0, "ref_data_dvwu": 4, "ref_vol_zyx": 4, "refactor": 2, "refer": [3, 4, 6, 8], "refine_max_position_1d": [3, 4], "refine_max_position_2d": [3, 4], "refract": 5, "reg_weight": 3, "region": [3, 4, 5, 6], "regist": 4, "regular": [2, 8, 9, 11], "regularizer_dwl": [3, 9], "regularizer_fft": [3, 9], "regularizer_grad": [3, 9], "regularizer_hub_dwl": [3, 9], "regularizer_hub_swl": [3, 9], "regularizer_hubtv2d": [3, 9], "regularizer_hubtv3d": [3, 9], "regularizer_l1": [3, 9], "regularizer_l12dwl": [3, 9], "regularizer_l12swl": [3, 9], "regularizer_l1dwl": [3, 9], "regularizer_l1m": [3, 9], "regularizer_l1swl": [3, 9], "regularizer_l2m": [3, 9], "regularizer_lap": [3, 9], "regularizer_lap1d": [3, 9], "regularizer_lap2d": [3, 9], "regularizer_lap3d": [3, 9], "regularizer_lnswl": [3, 9], "regularizer_smooth1d": [3, 9], "regularizer_smooth2d": [3, 9], "regularizer_smooth3d": [3, 9], "regularizer_swl": [3, 9], "regularizer_tnv": [3, 9], "regularizer_tv1d": [3, 9], "regularizer_tv2d": [3, 9], "regularizer_tv3d": [3, 9], "regularizer_vl1wl": [3, 9], "regularizer_vsvd": [3, 9], "regularizer_vtv": [3, 9], "relat": 10, "relax": [2, 3], "releas": 2, "relev": 7, "remark": 11, "remov": [4, 6], "remove_zero": 6, "renam": 2, "renorm": 6, "reorder": 3, "reorder_mask": [3, 9], "report": 2, "repositori": 3, "repres": 6, "represent": [3, 4, 6], "reproduc": 0, "req_res_mm": 3, "request": [3, 5, 6, 10, 11, 12], "requir": [3, 12], "rescal": 2, "reserv": 0, "residu": [2, 3, 9], "residual0": [3, 9], "residual0_cv": [3, 9], "residuals_cv": [3, 9], "residuals_cv_rel": [3, 9], "residuals_rel": [3, 9], "resolut": [2, 3, 6, 12], "resourc": 12, "respect": [2, 3, 4, 5, 6, 7, 12], "respons": 5, "rest": 3, "restructur": 2, "result": [1, 3, 4, 5, 6], "retain": 0, "return": [3, 4, 5, 6, 10], "return_vertex_v": 4, "rfft": [2, 4, 5], "right": [0, 3, 7, 11], "rightward": 7, "ring": 6, "rmatvec": [3, 9], "roi": 5, "rot": 3, "rot_angle_deg": 6, "rot_angle_rad": 4, "rot_axis_dir": 3, "rot_axis_shift_pix": 3, "rot_dir_xyz": [3, 9], "rot_ind": 5, "rotat": [1, 2, 3, 4, 5, 6, 8, 9, 12], "rotate_proj_stack": [3, 6], "round": 3, "roundup_to_pow2": [3, 9], "routin": [1, 2, 4, 6, 11], "row": [3, 4], "rule": 3, "sab": 5, "sad": 4, "same": [3, 4, 6, 12], "sampl": [2, 4, 5, 6, 12], "sanit": 2, "sart": [2, 3, 9, 11, 12], "satisfi": 3, "scalar": 6, "scale": [2, 3, 4, 6, 9, 12], "scan": [2, 3, 4], "scatter": 5, "schatz": 6, "schoonjan": 5, "sci": [3, 11, 12], "scikit": [2, 7, 11, 12], "scipi": [2, 3, 12], "search": [4, 8], "search_rag": 4, "search_rang": 4, "sech": [2, 5], "second": [3, 4, 6], "section": [5, 10, 12], "see": [11, 12], "select": [2, 4, 5, 6, 8, 11], "self": 1, "semant": 2, "semilog": 6, "sensit": 2, "sep": 6, "sequenc": [3, 4, 5, 6, 10], "sequenti": 3, "serv": 12, "servic": 0, "set": [2, 3, 4, 12], "set_detector_shape_vu": [3, 9], "set_detector_shifts_vu": [3, 9], "set_detector_tilt": [3, 9], "set_source_shifts_vu": [3, 9], "set_titl": 7, "setup": [2, 11], "shall": 0, "shape": [2, 3, 4, 5, 6], "shape_fov": [3, 9], "shape_mask": [3, 9], "shape_shift": [3, 9], "shape_xyz": [3, 9], "shape_zxi": [3, 9], "sharei": 7, "sharex": 7, "shell": [5, 6], "shepp": [3, 12], "shift": [1, 2, 3, 6, 9, 12], "shift_proj_stack": [3, 6], "shift_typ": 3, "shifts_u": 3, "shifts_v": 3, "shifts_vu": 4, "shortcut": 2, "should": [3, 5, 6, 12], "show": 5, "siegbahn": [2, 5, 10], "sigma": [3, 6, 9], "sigma_data": [3, 9], "sign": 2, "signal": [3, 6, 10, 12], "signedinteg": 6, "similar": [3, 12], "simpl": [2, 3, 5, 12], "simplest": 12, "simpli": 11, "simplifi": [2, 3, 10], "simul": [3, 11, 12], "simultan": [3, 11, 12], "sine": 4, "singl": 3, "single_lin": 3, "singular": 3, "sino": [3, 12], "sino_lin": 3, "sino_wu": 7, "sinogram": [2, 3, 4, 6, 8, 12], "sinusoid": [1, 3, 4], "sirt": [2, 3, 9, 11], "size": [2, 3, 4, 5, 6, 12], "skimag": [7, 12], "slice": 5, "slice_ind": 5, "slurm": 11, "small": 2, "smooth": [2, 3, 6], "smoother": 6, "snr": 6, "snrt": 6, "softwar": [0, 11], "solid": [3, 5], "solid_angle_sr": [3, 5], "solut": [3, 12], "solutioninfo": [3, 9], "solver": [2, 9, 11], "solver_calling_funct": [3, 9], "solver_fbp": 12, "solver_sirt": 12, "solver_spawning_funct": [3, 9], "sol\u00e9": [3, 11, 12], "some": [2, 4, 6, 10], "sourc": [0, 3, 4, 5, 6], "space": [2, 3, 4, 5, 6], "spars": [2, 3, 12], "spawn": 3, "special": 0, "specif": [0, 3, 5, 12], "specifi": [4, 6, 12], "spectral": 5, "spectral_norm": 3, "spectrochim": 5, "spectrosc": 5, "spectrum": [2, 6], "split": 6, "spmatrix": 3, "spread": [3, 5], "squar": [2, 3, 6, 12], "squeez": 6, "src": 2, "src_pos_vu": 3, "src_pos_xyz": [3, 9], "src_to_sam_dist": 3, "stack": [1, 2, 4, 5, 6], "stack_axi": 4, "stand": [3, 12], "standard": [2, 3, 6], "start": [3, 5, 8], "start_angle_deg": 3, "stat": 3, "state": 3, "statement": 12, "static": [3, 4, 5, 10], "staticmethod": 10, "stationari": [2, 3], "step": [3, 11], "stop": 3, "store": 3, "str": [1, 3, 4, 5, 6, 10], "strict": 0, "string": [3, 5, 6, 12], "stripe": 6, "struct": 6, "struct_illum": 9, "structur": [2, 3, 5], "studi": [3, 11, 12], "sub": [2, 4, 5, 6, 10], "subject": [6, 12], "submit": 11, "submodul": 9, "subpackag": 9, "subplot": 7, "substitut": 0, "subtract": 3, "subtract_mean": 3, "suggest": [4, 12], "sum": 4, "sun": 3, "super": [2, 6], "super_sampl": 6, "supersampl": 6, "suppli": 5, "support": [1, 2, 3, 5, 6, 11, 12], "supportsindex": [3, 5, 6], "suppos": 12, "suptitl": 7, "surface_mm2": [3, 5], "svd": 3, "swap": 3, "switch": 3, "symbol": [3, 5], "symmetr": [2, 3], "synchrotron": [3, 4, 5, 6], "system": [11, 12], "t": [5, 6, 11, 12], "t_hb": 6, "t_match": 6, "take": [4, 11, 12], "taper": [2, 6], "taper_func": 6, "taper_ratio": 6, "taper_target": 6, "target": [2, 5, 6], "tau": 3, "techniqu": [3, 11, 12], "technol": [3, 11, 12], "tell": 3, "templat": 6, "term": [2, 3, 8, 11], "test": [2, 9], "test_angl": 7, "test_fract": 3, "than": [2, 6, 10], "thank": 2, "thei": [1, 3, 12], "them": 6, "theo_threshold": 6, "theoret": 2, "theori": 0, "thi": [0, 2, 3, 4, 6, 10, 11, 12], "thick": 5, "thickness_range_um": 5, "thickness_um": 5, "thouroughli": 2, "thread": [2, 5], "threadpoolexecutor": 3, "threashold": 6, "threshod": 6, "threshold": 6, "through": [1, 3, 4, 5, 11, 12], "thu": [3, 12], "tie": [2, 5], "tight_layout": 7, "tilt": [2, 3, 4], "tilt_axi": 3, "tilt_sourc": 3, "time": 3, "titl": 6, "tnv": [2, 3, 11], "to_com": [3, 4], "to_fouri": [3, 9], "to_real": [3, 9], "toler": [3, 9], "toml": 2, "tomograph": [1, 3, 11, 12], "tomographi": [3, 6, 11, 12], "too": 4, "tool": [1, 10], "toolbox": [2, 3, 11, 12], "top": [3, 7], "topic": 12, "tort": 0, "total": [2, 3, 11], "toward": 2, "track": 2, "tradit": 3, "tran": 6, "trans_wvu": 6, "transact": [3, 12], "transfer": [5, 10], "transform": [2, 3, 4, 6], "transformconvolut": [3, 9], "transformdecimatedwavelet": [3, 9], "transformdiagonalsc": [3, 9], "transformfouri": [3, 9], "transformfunct": [3, 9], "transformgradi": [3, 9], "transformident": [3, 6, 9], "transformlaplacian": [3, 9], "transformstationarywavelet": [3, 9], "transformsvd": [3, 9], "transit": 5, "transmiss": [2, 6], "transmit": 6, "transmitt": [3, 5, 9], "transport": 5, "transpos": 3, "treat": 10, "true": [1, 3, 4, 5, 6, 7], "truncat": [2, 4, 6], "truth": 3, "tue": [4, 6], "tune": [2, 3], "tupl": [1, 3, 4, 5, 6], "turn": 3, "tutori": [2, 8], "tv": [2, 3, 11, 12], "two": [4, 6, 10, 11, 12], "type": [2, 3, 4, 5, 6], "typo": 2, "u": [1, 3, 4, 6, 7, 9, 12], "uncertainti": 2, "uncorrect": 2, "undeci": 2, "under": 11, "underli": 12, "undersampl": 3, "uneven": 2, "unifi": 2, "union": [1, 3, 4, 5, 6, 10], "unit": 3, "unknown": 6, "unmatch": 2, "unprecondit": 2, "unscal": 3, "unsupport": 5, "unus": 6, "up": [3, 7], "upd": 3, "upd_mask": [3, 9], "updat": [2, 3], "update_du": [3, 9], "upper": [2, 3, 9], "upper_limit": 12, "us": [0, 2, 3, 4, 5, 6, 7, 10, 11, 12], "usag": [2, 12], "use_deriv": [1, 4], "use_fft": 6, "use_lstsq": 3, "use_multithread": 5, "use_rfft": [1, 3, 4, 5, 9], "use_std": 6, "user": [2, 11, 12], "usual": [11, 12], "util": [2, 3], "v": [1, 2, 3, 4, 6, 7, 11, 12], "vale": 3, "valid": [2, 3, 6, 11, 12], "valu": [1, 3, 4, 5, 6, 10, 12], "valuea": 5, "valueerror": [3, 4, 5, 6], "van": 6, "var_i0": 6, "variabl": [4, 12], "varianc": [6, 12], "variant": 11, "variat": [2, 3, 11], "variou": [2, 10, 11, 12], "vector": 3, "vectori": 3, "verbos": [2, 3, 4, 5, 6, 10], "veri": 12, "versa": 2, "version": [2, 3], "vertex": 4, "vertic": [1, 3, 4, 6, 12], "vice": 2, "view": 3, "vigano": 11, "vigan\u00f2": [0, 3, 4, 5, 6, 11, 12], "visual": [2, 7], "vmax": 7, "vmin": 7, "vol": [3, 5, 6, 12], "vol_att_in": 3, "vol_att_out": 3, "vol_att_test": 7, "vol_fluo_yield": 3, "vol_geom": [3, 9], "vol_origin_zxi": 6, "vol_shap": [3, 7, 9], "vol_shape_xi": 12, "vol_shape_zxi": 6, "vol_shape_zyx": [3, 5], "vol_yield": 3, "volum": [2, 3, 4, 5, 6, 10, 12], "volume_pair": 6, "volumegeometri": [2, 3, 9], "volumemateri": [3, 5, 10, 12], "vox_siz": [3, 9], "voxel": [2, 3, 5, 6], "voxel_size_cm": 5, "voxel_size_um": [3, 5], "vt": [3, 9], "vtv": 3, "vu": [2, 3, 4], "w": [4, 6, 12], "wa": 6, "wai": [0, 2, 7, 12], "want": [3, 6, 11], "warn": 2, "warranti": 0, "wave": 5, "wavelength": 5, "wavelet": [2, 3, 6, 9, 11, 12], "we": [3, 5, 6, 7, 10, 11, 12], "weight": [2, 3, 5, 6, 9, 12], "weigth": 2, "welcom": 11, "when": [2, 3, 4, 5, 6, 12], "where": [3, 4, 5, 12], "whether": [0, 3, 4, 5, 6], "which": [3, 4, 5, 6, 11, 12], "while": [4, 12], "who": 11, "whole": 5, "whose": 3, "wide": [2, 11], "width": [5, 6], "window": [2, 3, 4, 6], "window_typ": 4, "wise": [3, 5, 6], "within": 3, "without": [0, 6], "wlength_m": 5, "wlength_um": 5, "won": 5, "work": [2, 4, 6], "workflow": 2, "written": 0, "wrong": [3, 4, 6], "wu": [6, 12], "x": [3, 4, 5, 8, 11, 12], "x0": [2, 12], "x_lim": 6, "x_ref": 3, "x_shape": 3, "xc": 4, "xc_opt": 4, "xraylib": [5, 10], "xraylib_help": [3, 9], "xrf": [2, 3, 7, 9, 10, 12], "xy": 3, "xyz": [2, 3], "xz": 3, "y": 3, "yet": 2, "yield": 3, "you": 11, "your": 11, "yx": 12, "z": [3, 12], "zero": [3, 4, 6, 7], "zxy": [2, 3], "zyx": 4, "\u03b1": 10, "\u03b2": 10}, "titles": ["&lt;no title&gt;", "Alignment", "Changelog", "corrct package", "corrct.alignment package", "corrct.physics package", "corrct.processing package", "Reconstruction geometry", "Welcome to the documentation of PyCorrectedEmissionCT!", "corrct", "Physics", "PyCorrectedEmissionCT (corrct)", "Tutorial"], "titleterms": {"0": 2, "01": 2, "02": 2, "03": 2, "04": 2, "05": 2, "06": 2, "08": 2, "09": 2, "0rc1": 2, "0rc2": 2, "0rc3": 2, "1": 2, "10": 2, "11": 2, "12": 2, "13": 2, "14": 2, "15": 2, "16": 2, "17": 2, "2": 2, "20": 2, "2019": 2, "2020": 2, "2021": 2, "2022": 2, "2023": 2, "2024": 2, "2025": 2, "23": 2, "24": 2, "25": 2, "29": 2, "3": 2, "30": 2, "31": 2, "4": 2, "5": 2, "6": 2, "7": 2, "8": 2, "9": 2, "The": 12, "ad": 2, "align": [1, 4], "attenu": [5, 12], "author": 11, "beam": 7, "center": 4, "changelog": 2, "conda": 11, "content": [3, 4, 5, 6], "contrast": 10, "contribut": 11, "contributor": 11, "corrct": [3, 4, 5, 6, 9, 11], "correct": 12, "data": 12, "data_term": 3, "denois": 3, "detector": 7, "direct": 7, "document": 8, "exampl": 11, "fbp": 12, "fidel": 12, "filter": 3, "fit": 4, "fix": 2, "flip": 7, "fluoresc": 10, "from": 11, "geometri": [7, 12], "get": 11, "guid": 12, "how": 11, "incom": 7, "indic": 8, "instal": 11, "licens": 11, "materi": [5, 10], "misc": 6, "mlem": 12, "model": [3, 10, 12], "modul": [3, 4, 5, 6], "nois": 6, "oper": 3, "packag": [3, 4, 5, 6], "param_tun": 3, "paramet": 12, "pdhg": 12, "phase": [5, 10], "physic": [5, 10], "posit": 7, "post": 6, "pre": [1, 6], "process": 6, "project": 12, "projector": [3, 12], "pycorrectedemissionct": [8, 11], "pypi": 11, "rai": 10, "reconstruct": [7, 12], "refer": 12, "regular": [3, 12], "rotat": 7, "run": 11, "select": 12, "shift": 4, "sinogram": 7, "sirt": 12, "solver": [3, 12], "sourc": 11, "start": 11, "struct_illum": 3, "submodul": [3, 4, 5, 6], "subpackag": 3, "tabl": 8, "term": 12, "test": 3, "tutori": 12, "welcom": 8, "x": 10, "xraylib_help": 5, "xrf": 5}})