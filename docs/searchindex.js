Search.setIndex({"alltitles": {"0.1.0 - 2019-10-29": [[33, "id65"]], "0.2.0 - 2019-11-05": [[33, "id62"]], "0.2.1 - 2020-02-25": [[33, "id59"]], "0.2.2 - 2020-03-30": [[33, "id56"]], "0.2.3 - 2020-05-05": [[33, "id53"]], "0.2.4 - 2020-06-01": [[33, "id50"]], "0.3.0 - 2020-09-23": [[33, "id47"]], "0.3.1 - 2020-10-20": [[33, "id44"]], "0.3.2 - 2021-04-15": [[33, "id41"]], "0.4.0 - 2021-11-29": [[33, "id38"]], "0.4.1 - 2021-12-06": [[33, "id35"]], "0.4.2 - 2022-01-14": [[33, "id32"]], "0.5.0 - 2022-04-14": [[33, "id29"]], "0.5.1 - 2022-06-23": [[33, "id26"]], "0.6.0 - 2022-09-08": [[33, "id23"]], "0.7.0 - 2022-10-11": [[33, "id20"]], "0.7.1 - 2022-10-31": [[33, "id17"]], "0.7.2 - 2023-02-17": [[33, "id14"]], "0.8.0 - 2023-04-06": [[33, "id11"]], "0.8.1 - 2023-05-16": [[33, "id8"]], "0.9.0 - 2023-12-24": [[33, "id5"]], "0.9.1 - 2024-03-20": [[33, "id2"]], "1.0.0 - 2025-03-27": [[33, "id1"]], "API": [[2, "api"], [3, "api"], [4, "api"], [5, "api"], [6, "api"], [7, "api"], [8, "api"], [9, "api"], [10, "api"], [11, "api"], [12, "api"], [13, "api"], [14, "api"], [15, "api"], [16, "api"], [17, "api"], [18, "api"], [19, "api"], [20, "api"], [21, "api"], [22, "api"], [23, "api"], [24, "api"], [25, "api"], [26, "api"], [27, "api"], [28, "api"], [29, "api"], [30, "api"]], "API Reference": [[31, null]], "Added": [[33, "added"], [33, "id3"], [33, "id6"], [33, "id9"], [33, "id12"], [33, "id15"], [33, "id18"], [33, "id21"], [33, "id24"], [33, "id27"], [33, "id30"], [33, "id33"], [33, "id36"], [33, "id39"], [33, "id42"], [33, "id45"], [33, "id48"], [33, "id51"], [33, "id54"], [33, "id57"], [33, "id60"], [33, "id63"], [33, "id66"]], "Alignment": [[1, null]], "Attenuation": [[36, "attenuation"]], "Attenuation correction": [[32, null], [38, "attenuation-correction"]], "Authors and contributors": [[37, "authors-and-contributors"]], "Changelog": [[33, null]], "Classes": [[3, "classes"], [5, "classes"], [7, "classes"], [8, "classes"], [10, "classes"], [11, "classes"], [12, "classes"], [13, "classes"], [15, "classes"], [16, "classes"], [18, "classes"], [20, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"]], "Computing local attenuation maps": [[32, "computing-local-attenuation-maps"]], "Data": [[2, "data"], [4, "data"], [6, "data"], [7, "data"], [8, "data"], [9, "data"], [11, "data"], [12, "data"], [13, "data"], [14, "data"], [15, "data"], [21, "data"], [22, "data"], [23, "data"], [24, "data"], [25, "data"], [26, "data"], [27, "data"], [28, "data"], [29, "data"], [30, "data"]], "Data fidelity terms": [[38, "data-fidelity-terms"]], "Data terms and regularization": [[38, "data-terms-and-regularization"]], "Detector position (for self-attenuation)": [[34, "detector-position-for-self-attenuation"]], "FBP": [[38, "fbp"]], "Fixed": [[33, "fixed"], [33, "id4"], [33, "id7"], [33, "id10"], [33, "id13"], [33, "id16"], [33, "id19"], [33, "id22"], [33, "id25"], [33, "id28"], [33, "id31"], [33, "id34"], [33, "id37"], [33, "id40"], [33, "id43"], [33, "id46"], [33, "id49"], [33, "id52"], [33, "id55"], [33, "id58"], [33, "id61"], [33, "id64"]], "Functions": [[2, "functions"], [3, "functions"], [6, "functions"], [7, "functions"], [8, "functions"], [9, "functions"], [10, "functions"], [11, "functions"], [13, "functions"], [14, "functions"], [15, "functions"], [17, "functions"], [18, "functions"], [19, "functions"], [20, "functions"], [22, "functions"], [23, "functions"], [24, "functions"], [25, "functions"], [29, "functions"], [30, "functions"]], "Getting Started": [[37, "getting-started"]], "Guided regularization parameter selection": [[38, "guided-regularization-parameter-selection"]], "How to contribute": [[37, "how-to-contribute"]], "Image stack alignment": [[1, "image-stack-alignment"]], "Incoming beam attenuation direction": [[34, "incoming-beam-attenuation-direction"]], "Indices and tables": [[35, "indices-and-tables"]], "Installing from PyPI": [[37, "installing-from-pypi"]], "Installing from source": [[37, "installing-from-source"]], "Installing with conda": [[37, "installing-with-conda"]], "License": [[37, "license"]], "Material modeling": [[36, "material-modeling"]], "Module Contents": [[3, "module-contents"], [5, "module-contents"], [6, "module-contents"], [7, "module-contents"], [8, "module-contents"], [9, "module-contents"], [10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [29, "module-contents"], [30, "module-contents"]], "Package Contents": [[2, "package-contents"], [4, "package-contents"], [14, "package-contents"], [21, "package-contents"]], "Physics": [[36, null]], "Pre-alignment": [[1, "pre-alignment"]], "PyCorrectedEmissionCT (corrct)": [[37, null]], "Reconstructing projection data": [[38, "reconstructing-projection-data"]], "Reconstruction": [[32, "reconstruction"]], "Reconstruction geometry": [[34, null]], "References": [[38, "references"]], "Regularizers": [[38, "regularizers"]], "Rotation direction and sinogram flip": [[34, "rotation-direction-and-sinogram-flip"]], "Running the examples": [[37, "running-the-examples"]], "SIRT, PDHG, and MLEM": [[38, "sirt-pdhg-and-mlem"]], "Submodules": [[2, "submodules"], [4, "submodules"], [14, "submodules"], [21, "submodules"]], "Subpackages": [[2, "subpackages"]], "Synthetic data creation": [[32, "synthetic-data-creation"]], "The data model": [[38, "the-data-model"]], "The geometry": [[38, "the-geometry"]], "The projectors": [[38, "the-projectors"]], "The solvers": [[38, "the-solvers"]], "Tutorial (basics)": [[38, null]], "Unit conversion": [[36, "unit-conversion"]], "Welcome to the documentation of PyCorrectedEmissionCT!": [[35, null]], "What happens behind the scenes": [[32, "what-happens-behind-the-scenes"]], "X-ray Fluorescence": [[36, "x-ray-fluorescence"]], "X-ray Phase Contrast": [[36, "x-ray-phase-contrast"]], "corrct": [[2, null]], "corrct._projector_backends": [[3, null]], "corrct.alignment": [[4, null]], "corrct.alignment.centering": [[5, null]], "corrct.alignment.fitting": [[6, null]], "corrct.alignment.shifts": [[7, null]], "corrct.data_terms": [[8, null]], "corrct.denoisers": [[9, null]], "corrct.filters": [[10, null]], "corrct.models": [[11, null]], "corrct.operators": [[12, null]], "corrct.param_tuning": [[13, null]], "corrct.physics": [[14, null]], "corrct.physics.attenuation": [[15, null]], "corrct.physics.materials": [[16, null]], "corrct.physics.phase": [[17, null]], "corrct.physics.units": [[18, null]], "corrct.physics.xraylib_helper": [[19, null]], "corrct.physics.xrf": [[20, null]], "corrct.processing": [[21, null]], "corrct.processing.misc": [[22, null]], "corrct.processing.noise": [[23, null]], "corrct.processing.post": [[24, null]], "corrct.processing.pre": [[25, null]], "corrct.projectors": [[26, null]], "corrct.regularizers": [[27, null]], "corrct.solvers": [[28, null]], "corrct.struct_illum": [[29, null]], "corrct.testing": [[30, null]]}, "docnames": ["LICENSE", "alignment_tools", "apidocs/corrct/corrct", "apidocs/corrct/corrct._projector_backends", "apidocs/corrct/corrct.alignment", "apidocs/corrct/corrct.alignment.centering", "apidocs/corrct/corrct.alignment.fitting", "apidocs/corrct/corrct.alignment.shifts", "apidocs/corrct/corrct.data_terms", "apidocs/corrct/corrct.denoisers", "apidocs/corrct/corrct.filters", "apidocs/corrct/corrct.models", "apidocs/corrct/corrct.operators", "apidocs/corrct/corrct.param_tuning", "apidocs/corrct/corrct.physics", "apidocs/corrct/corrct.physics.attenuation", "apidocs/corrct/corrct.physics.materials", "apidocs/corrct/corrct.physics.phase", "apidocs/corrct/corrct.physics.units", "apidocs/corrct/corrct.physics.xraylib_helper", "apidocs/corrct/corrct.physics.xrf", "apidocs/corrct/corrct.processing", "apidocs/corrct/corrct.processing.misc", "apidocs/corrct/corrct.processing.noise", "apidocs/corrct/corrct.processing.post", "apidocs/corrct/corrct.processing.pre", "apidocs/corrct/corrct.projectors", "apidocs/corrct/corrct.regularizers", "apidocs/corrct/corrct.solvers", "apidocs/corrct/corrct.struct_illum", "apidocs/corrct/corrct.testing", "apidocs/index", "attenuation_tutorial", "changelog", "geometry", "index", "physics_model", "readme", "tutorial"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["LICENSE.md", "alignment_tools.md", "apidocs/corrct/corrct.md", "apidocs/corrct/corrct._projector_backends.md", "apidocs/corrct/corrct.alignment.md", "apidocs/corrct/corrct.alignment.centering.md", "apidocs/corrct/corrct.alignment.fitting.md", "apidocs/corrct/corrct.alignment.shifts.md", "apidocs/corrct/corrct.data_terms.md", "apidocs/corrct/corrct.denoisers.md", "apidocs/corrct/corrct.filters.md", "apidocs/corrct/corrct.models.md", "apidocs/corrct/corrct.operators.md", "apidocs/corrct/corrct.param_tuning.md", "apidocs/corrct/corrct.physics.md", "apidocs/corrct/corrct.physics.attenuation.md", "apidocs/corrct/corrct.physics.materials.md", "apidocs/corrct/corrct.physics.phase.md", "apidocs/corrct/corrct.physics.units.md", "apidocs/corrct/corrct.physics.xraylib_helper.md", "apidocs/corrct/corrct.physics.xrf.md", "apidocs/corrct/corrct.processing.md", "apidocs/corrct/corrct.processing.misc.md", "apidocs/corrct/corrct.processing.noise.md", "apidocs/corrct/corrct.processing.post.md", "apidocs/corrct/corrct.processing.pre.md", "apidocs/corrct/corrct.projectors.md", "apidocs/corrct/corrct.regularizers.md", "apidocs/corrct/corrct.solvers.md", "apidocs/corrct/corrct.struct_illum.md", "apidocs/corrct/corrct.testing.md", "apidocs/index.rst", "attenuation_tutorial.md", "changelog.md", "geometry.md", "index.rst", "physics_model.md", "readme.md", "tutorial.md"], "indexentries": {"__author__ (in module corrct)": [[2, "corrct.__author__", false]], "__author__ (in module corrct.alignment)": [[4, "corrct.alignment.__author__", false]], "__author__ (in module corrct.physics)": [[14, "corrct.physics.__author__", false]], "__author__ (in module corrct.processing)": [[21, "corrct.processing.__author__", false]], "__call__() (corrct.filters.filter method)": [[10, "corrct.filters.Filter.__call__", false]], "__call__() (corrct.operators.basetransform method)": [[12, "corrct.operators.BaseTransform.__call__", false]], "__call__() (corrct.solvers.fbp method)": [[28, "corrct.solvers.FBP.__call__", false]], "__call__() (corrct.solvers.mlem method)": [[28, "corrct.solvers.MLEM.__call__", false]], "__call__() (corrct.solvers.pdhg method)": [[28, "corrct.solvers.PDHG.__call__", false]], "__call__() (corrct.solvers.sart method)": [[28, "corrct.solvers.SART.__call__", false]], "__call__() (corrct.solvers.sirt method)": [[28, "corrct.solvers.SIRT.__call__", false]], "__call__() (corrct.solvers.solver method)": [[28, "corrct.solvers.Solver.__call__", false]], "__data_fidelity_name__ (corrct.data_terms.datafidelity_huber attribute)": [[8, "corrct.data_terms.DataFidelity_Huber.__data_fidelity_name__", false]], "__data_fidelity_name__ (corrct.data_terms.datafidelity_kl attribute)": [[8, "corrct.data_terms.DataFidelity_KL.__data_fidelity_name__", false]], "__data_fidelity_name__ (corrct.data_terms.datafidelity_l1 attribute)": [[8, "corrct.data_terms.DataFidelity_l1.__data_fidelity_name__", false]], "__data_fidelity_name__ (corrct.data_terms.datafidelity_l12 attribute)": [[8, "corrct.data_terms.DataFidelity_l12.__data_fidelity_name__", false]], "__data_fidelity_name__ (corrct.data_terms.datafidelity_l1b attribute)": [[8, "corrct.data_terms.DataFidelity_l1b.__data_fidelity_name__", false]], "__data_fidelity_name__ (corrct.data_terms.datafidelity_l2 attribute)": [[8, "corrct.data_terms.DataFidelity_l2.__data_fidelity_name__", false]], "__data_fidelity_name__ (corrct.data_terms.datafidelity_l2b attribute)": [[8, "corrct.data_terms.DataFidelity_l2b.__data_fidelity_name__", false]], "__data_fidelity_name__ (corrct.data_terms.datafidelity_ln attribute)": [[8, "corrct.data_terms.DataFidelity_ln.__data_fidelity_name__", false]], "__data_fidelity_name__ (corrct.data_terms.datafidelity_wl2 attribute)": [[8, "corrct.data_terms.DataFidelity_wl2.__data_fidelity_name__", false]], "__data_fidelity_name__ (corrct.data_terms.datafidelitybase attribute)": [[8, "corrct.data_terms.DataFidelityBase.__data_fidelity_name__", false]], "__del__() (corrct._projector_backends.projectorbackend method)": [[3, "corrct._projector_backends.ProjectorBackend.__del__", false]], "__email__ (in module corrct)": [[2, "corrct.__email__", false]], "__email__ (in module corrct.alignment)": [[4, "corrct.alignment.__email__", false]], "__email__ (in module corrct.physics)": [[14, "corrct.physics.__email__", false]], "__email__ (in module corrct.processing)": [[21, "corrct.processing.__email__", false]], "__enter__() (corrct.projectors.projectorattenuationxrf method)": [[26, "corrct.projectors.ProjectorAttenuationXRF.__enter__", false]], "__enter__() (corrct.projectors.projectoruncorrected method)": [[26, "corrct.projectors.ProjectorUncorrected.__enter__", false]], "__exit__() (corrct.projectors.projectorattenuationxrf method)": [[26, "corrct.projectors.ProjectorAttenuationXRF.__exit__", false]], "__exit__() (corrct.projectors.projectoruncorrected method)": [[26, "corrct.projectors.ProjectorUncorrected.__exit__", false]], "__getitem__() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase.__getitem__", false]], "__getitem__() (corrct.filters.basisoptions method)": [[10, "corrct.filters.BasisOptions.__getitem__", false]], "__getitem__() (corrct.models.projectiongeometry method)": [[11, "corrct.models.ProjectionGeometry.__getitem__", false]], "__iter__() (corrct.filters.basisoptions method)": [[10, "corrct.filters.BasisOptions.__iter__", false]], "__len__() (corrct.filters.basisoptions method)": [[10, "corrct.filters.BasisOptions.__len__", false]], "__mask_name__ (corrct.struct_illum.maskgenerator attribute)": [[29, "corrct.struct_illum.MaskGenerator.__mask_name__", false]], "__mask_name__ (corrct.struct_illum.maskgeneratorbernoulli attribute)": [[29, "corrct.struct_illum.MaskGeneratorBernoulli.__mask_name__", false]], "__mask_name__ (corrct.struct_illum.maskgeneratorhalfgaussian attribute)": [[29, "corrct.struct_illum.MaskGeneratorHalfGaussian.__mask_name__", false]], "__mask_name__ (corrct.struct_illum.maskgeneratormura attribute)": [[29, "corrct.struct_illum.MaskGeneratorMURA.__mask_name__", false]], "__mask_name__ (corrct.struct_illum.maskgeneratorpoint attribute)": [[29, "corrct.struct_illum.MaskGeneratorPoint.__mask_name__", false]], "__post_init__() (corrct.models.projectiongeometry method)": [[11, "corrct.models.ProjectionGeometry.__post_init__", false]], "__post_init__() (corrct.models.volumegeometry method)": [[11, "corrct.models.VolumeGeometry.__post_init__", false]], "__reg_name__ (corrct.regularizers.baseregularizer attribute)": [[27, "corrct.regularizers.BaseRegularizer.__reg_name__", false]], "__reg_name__ (corrct.regularizers.baseregularizer_med attribute)": [[27, "corrct.regularizers.BaseRegularizer_med.__reg_name__", false]], "__reg_name__ (corrct.regularizers.constraint_lowerlimit attribute)": [[27, "corrct.regularizers.Constraint_LowerLimit.__reg_name__", false]], "__reg_name__ (corrct.regularizers.constraint_upperlimit attribute)": [[27, "corrct.regularizers.Constraint_UpperLimit.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_dwl attribute)": [[27, "corrct.regularizers.Regularizer_dwl.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_fft attribute)": [[27, "corrct.regularizers.Regularizer_fft.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_grad attribute)": [[27, "corrct.regularizers.Regularizer_Grad.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_hub_dwl attribute)": [[27, "corrct.regularizers.Regularizer_Hub_dwl.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_hub_swl attribute)": [[27, "corrct.regularizers.Regularizer_Hub_swl.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_hubtv2d attribute)": [[27, "corrct.regularizers.Regularizer_HubTV2D.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_hubtv3d attribute)": [[27, "corrct.regularizers.Regularizer_HubTV3D.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_l1 attribute)": [[27, "corrct.regularizers.Regularizer_l1.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_l12dwl attribute)": [[27, "corrct.regularizers.Regularizer_l12dwl.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_l12swl attribute)": [[27, "corrct.regularizers.Regularizer_l12swl.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_l1dwl attribute)": [[27, "corrct.regularizers.Regularizer_l1dwl.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_l1med attribute)": [[27, "corrct.regularizers.Regularizer_l1med.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_l1swl attribute)": [[27, "corrct.regularizers.Regularizer_l1swl.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_l2med attribute)": [[27, "corrct.regularizers.Regularizer_l2med.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_lap attribute)": [[27, "corrct.regularizers.Regularizer_lap.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_lap1d attribute)": [[27, "corrct.regularizers.Regularizer_lap1D.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_lap2d attribute)": [[27, "corrct.regularizers.Regularizer_lap2D.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_lap3d attribute)": [[27, "corrct.regularizers.Regularizer_lap3D.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_lnswl attribute)": [[27, "corrct.regularizers.Regularizer_lnswl.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_smooth1d attribute)": [[27, "corrct.regularizers.Regularizer_smooth1D.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_smooth2d attribute)": [[27, "corrct.regularizers.Regularizer_smooth2D.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_smooth3d attribute)": [[27, "corrct.regularizers.Regularizer_smooth3D.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_swl attribute)": [[27, "corrct.regularizers.Regularizer_swl.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_tnv attribute)": [[27, "corrct.regularizers.Regularizer_TNV.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_tv1d attribute)": [[27, "corrct.regularizers.Regularizer_TV1D.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_tv2d attribute)": [[27, "corrct.regularizers.Regularizer_TV2D.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_tv3d attribute)": [[27, "corrct.regularizers.Regularizer_TV3D.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_vl1wl attribute)": [[27, "corrct.regularizers.Regularizer_vl1wl.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_vsvd attribute)": [[27, "corrct.regularizers.Regularizer_vSVD.__reg_name__", false]], "__reg_name__ (corrct.regularizers.regularizer_vtv attribute)": [[27, "corrct.regularizers.Regularizer_VTV.__reg_name__", false]], "__repr__() (corrct._projector_backends.projectorbackend method)": [[3, "corrct._projector_backends.ProjectorBackend.__repr__", false]], "__repr__() (corrct.struct_illum.maskgenerator method)": [[29, "corrct.struct_illum.MaskGenerator.__repr__", false]], "__str__() (corrct.models.geometry method)": [[11, "corrct.models.Geometry.__str__", false]], "__version__ (in module corrct)": [[2, "corrct.__version__", false]], "_adjoint() (corrct.operators.basetransform method)": [[12, "corrct.operators.BaseTransform._adjoint", false]], "_apply_displacement_vu() (corrct.alignment.centering.recentervolume method)": [[5, "corrct.alignment.centering.RecenterVolume._apply_displacement_vu", false]], "_apply_threshold() (corrct.data_terms.datafidelity_l1 method)": [[8, "corrct.data_terms.DataFidelity_l1._apply_threshold", false]], "_apply_threshold() (corrct.data_terms.datafidelity_l1b method)": [[8, "corrct.data_terms.DataFidelity_l1b._apply_threshold", false]], "_apply_transmission() (corrct.struct_illum.maskgenerator method)": [[29, "corrct.struct_illum.MaskGenerator._apply_transmission", false]], "_check_data() (corrct._projector_backends.projectorbackendastra method)": [[3, "corrct._projector_backends.ProjectorBackendASTRA._check_data", false]], "_check_parallax_detector() (corrct.physics.materials.volumematerial method)": [[16, "corrct.physics.materials.VolumeMaterial._check_parallax_detector", false]], "_check_primal() (corrct.regularizers.baseregularizer method)": [[27, "corrct.regularizers.BaseRegularizer._check_primal", false]], "_check_prj_shape() (corrct._projector_backends.projectorbackendastra method)": [[3, "corrct._projector_backends.ProjectorBackendASTRA._check_prj_shape", false]], "_compute_attenuation_angle_in() (corrct.physics.attenuation.attenuationvolume method)": [[15, "corrct.physics.attenuation.AttenuationVolume._compute_attenuation_angle_in", false]], "_compute_attenuation_angle_out() (corrct.physics.attenuation.attenuationvolume method)": [[15, "corrct.physics.attenuation.AttenuationVolume._compute_attenuation_angle_out", false]], "_compute_sigma_data() (corrct.data_terms.datafidelity_kl method)": [[8, "corrct.data_terms.DataFidelity_KL._compute_sigma_data", false]], "_compute_sigma_data() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase._compute_sigma_data", false]], "_create_random_test_mask() (corrct.param_tuning.crossvalidation method)": [[13, "corrct.param_tuning.CrossValidation._create_random_test_mask", false]], "_crop_valid() (corrct.operators.transformconvolution method)": [[12, "corrct.operators.TransformConvolution._crop_valid", false]], "_ctf_freq_response() (in module corrct.physics.phase)": [[17, "corrct.physics.phase._ctf_freq_response", false]], "_default_regularizer_l1dwl() (in module corrct.denoisers)": [[9, "corrct.denoisers._default_regularizer_l1dwl", false]], "_enc_dec_mismatch (corrct.struct_illum.maskgenerator attribute)": [[29, "corrct.struct_illum.MaskGenerator._enc_dec_mismatch", false]], "_filter_shifts() (in module corrct.alignment.shifts)": [[7, "corrct.alignment.shifts._filter_shifts", false]], "_generate_mask_shifts() (corrct.struct_illum.maskgenerator method)": [[29, "corrct.struct_illum.MaskGenerator._generate_mask_shifts", false]], "_get_data_dims() (in module corrct.models)": [[11, "corrct.models._get_data_dims", false]], "_get_data_sigma_tau_unpreconditioned() (corrct.solvers.pdhg method)": [[28, "corrct.solvers.PDHG._get_data_sigma_tau_unpreconditioned", false]], "_get_inner_norm() (corrct.data_terms.datafidelity_l1 method)": [[8, "corrct.data_terms.DataFidelity_l1._get_inner_norm", false]], "_get_inner_norm() (corrct.data_terms.datafidelity_l12 method)": [[8, "corrct.data_terms.DataFidelity_l12._get_inner_norm", false]], "_get_lines_list() (in module corrct.physics.xrf)": [[20, "corrct.physics.xrf._get_lines_list", false]], "_init_backend() (corrct.struct_illum.projectorghostimaging method)": [[29, "corrct.struct_illum.ProjectorGhostImaging._init_backend", false]], "_init_fov_mm() (corrct.struct_illum.maskgenerator method)": [[29, "corrct.struct_illum.MaskGenerator._init_fov_mm", false]], "_initialize_b_masks() (corrct.solvers.solver static method)": [[28, "corrct.solvers.Solver._initialize_b_masks", false]], "_initialize_data_fidelity_function() (corrct.solvers.pdhg static method)": [[28, "corrct.solvers.PDHG._initialize_data_fidelity_function", false]], "_initialize_data_fidelity_function() (corrct.solvers.solver static method)": [[28, "corrct.solvers.Solver._initialize_data_fidelity_function", false]], "_initialize_filter_bank() (corrct.operators.basewavelettransform method)": [[12, "corrct.operators.BaseWaveletTransform._initialize_filter_bank", false]], "_initialize_regularizer() (corrct.solvers.solver static method)": [[28, "corrct.solvers.Solver._initialize_regularizer", false]], "_matvec() (corrct.operators.basetransform method)": [[12, "corrct.operators.BaseTransform._matvec", false]], "_op_adjoint() (corrct.operators.basetransform method)": [[12, "corrct.operators.BaseTransform._op_adjoint", false]], "_op_adjoint() (corrct.operators.projectoroperator method)": [[12, "corrct.operators.ProjectorOperator._op_adjoint", false]], "_op_adjoint() (corrct.operators.transformconvolution method)": [[12, "corrct.operators.TransformConvolution._op_adjoint", false]], "_op_adjoint() (corrct.operators.transformdecimatedwavelet method)": [[12, "corrct.operators.TransformDecimatedWavelet._op_adjoint", false]], "_op_adjoint() (corrct.operators.transformdiagonalscaling method)": [[12, "corrct.operators.TransformDiagonalScaling._op_adjoint", false]], "_op_adjoint() (corrct.operators.transformfourier method)": [[12, "corrct.operators.TransformFourier._op_adjoint", false]], "_op_adjoint() (corrct.operators.transformfunctions method)": [[12, "corrct.operators.TransformFunctions._op_adjoint", false]], "_op_adjoint() (corrct.operators.transformgradient method)": [[12, "corrct.operators.TransformGradient._op_adjoint", false]], "_op_adjoint() (corrct.operators.transformidentity method)": [[12, "corrct.operators.TransformIdentity._op_adjoint", false]], "_op_adjoint() (corrct.operators.transformlaplacian method)": [[12, "corrct.operators.TransformLaplacian._op_adjoint", false]], "_op_adjoint() (corrct.operators.transformstationarywavelet method)": [[12, "corrct.operators.TransformStationaryWavelet._op_adjoint", false]], "_op_adjoint() (corrct.operators.transformsvd method)": [[12, "corrct.operators.TransformSVD._op_adjoint", false]], "_op_direct() (corrct.operators.basetransform method)": [[12, "corrct.operators.BaseTransform._op_direct", false]], "_op_direct() (corrct.operators.projectoroperator method)": [[12, "corrct.operators.ProjectorOperator._op_direct", false]], "_op_direct() (corrct.operators.transformconvolution method)": [[12, "corrct.operators.TransformConvolution._op_direct", false]], "_op_direct() (corrct.operators.transformdecimatedwavelet method)": [[12, "corrct.operators.TransformDecimatedWavelet._op_direct", false]], "_op_direct() (corrct.operators.transformdiagonalscaling method)": [[12, "corrct.operators.TransformDiagonalScaling._op_direct", false]], "_op_direct() (corrct.operators.transformfourier method)": [[12, "corrct.operators.TransformFourier._op_direct", false]], "_op_direct() (corrct.operators.transformfunctions method)": [[12, "corrct.operators.TransformFunctions._op_direct", false]], "_op_direct() (corrct.operators.transformgradient method)": [[12, "corrct.operators.TransformGradient._op_direct", false]], "_op_direct() (corrct.operators.transformidentity method)": [[12, "corrct.operators.TransformIdentity._op_direct", false]], "_op_direct() (corrct.operators.transformlaplacian method)": [[12, "corrct.operators.TransformLaplacian._op_direct", false]], "_op_direct() (corrct.operators.transformstationarywavelet method)": [[12, "corrct.operators.TransformStationaryWavelet._op_direct", false]], "_op_direct() (corrct.operators.transformsvd method)": [[12, "corrct.operators.TransformSVD._op_direct", false]], "_pad_valid() (corrct.operators.transformconvolution method)": [[12, "corrct.operators.TransformConvolution._pad_valid", false]], "_raise_pwise_norm_error() (corrct.regularizers.regularizer_vl1wl method)": [[27, "corrct.regularizers.Regularizer_vl1wl._raise_pwise_norm_error", false]], "_raise_pwise_norm_error() (corrct.regularizers.regularizer_vtv method)": [[27, "corrct.regularizers.Regularizer_VTV._raise_pwise_norm_error", false]], "_set_bpj_size() (corrct._projector_backends.projectorbackendskimage static method)": [[3, "corrct._projector_backends.ProjectorBackendSKimage._set_bpj_size", false]], "_set_filter_name() (corrct._projector_backends.projectorbackendskimage static method)": [[3, "corrct._projector_backends.ProjectorBackendSKimage._set_filter_name", false]], "_set_psf() (corrct.projectors.projectoruncorrected method)": [[26, "corrct.projectors.ProjectorUncorrected._set_psf", false]], "_slice_attr() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase._slice_attr", false]], "_soft_threshold() (in module corrct.data_terms)": [[8, "corrct.data_terms._soft_threshold", false]], "_solver_calling_function (corrct.param_tuning.baseparametertuning attribute)": [[13, "corrct.param_tuning.BaseParameterTuning._solver_calling_function", false]], "_solver_spawning_functionls (corrct.param_tuning.baseparametertuning attribute)": [[13, "corrct.param_tuning.BaseParameterTuning._solver_spawning_functionls", false]], "_tie_freq_response() (in module corrct.physics.phase)": [[17, "corrct.physics.phase._tie_freq_response", false]], "_transpose() (corrct.operators.basetransform method)": [[12, "corrct.operators.BaseTransform._transpose", false]], "_transpose() (corrct.projectors.projectormatrix method)": [[26, "corrct.projectors.ProjectorMatrix._transpose", false]], "_vol_shape_xyz (corrct.models.volumegeometry attribute)": [[11, "corrct.models.VolumeGeometry._vol_shape_xyz", false]], "a (corrct.projectors.projectormatrix attribute)": [[26, "corrct.projectors.ProjectorMatrix.A", false]], "absolute() (corrct.operators.basetransform method)": [[12, "corrct.operators.BaseTransform.absolute", false]], "absolute() (corrct.operators.transformconvolution method)": [[12, "corrct.operators.TransformConvolution.absolute", false]], "absolute() (corrct.operators.transformdiagonalscaling method)": [[12, "corrct.operators.TransformDiagonalScaling.absolute", false]], "absolute() (corrct.operators.transformfunctions method)": [[12, "corrct.operators.TransformFunctions.absolute", false]], "absolute() (corrct.projectors.projectormatrix method)": [[26, "corrct.projectors.ProjectorMatrix.absolute", false]], "absolute() (corrct.struct_illum.projectorghostimaging method)": [[29, "corrct.struct_illum.ProjectorGhostImaging.absolute", false]], "add_noise() (in module corrct.testing)": [[30, "corrct.testing.add_noise", false]], "adj_shape (corrct.operators.basetransform attribute)": [[12, "corrct.operators.BaseTransform.adj_shape", false]], "adjust_sampling_scaling() (corrct.struct_illum.projectorghostimaging method)": [[29, "corrct.struct_illum.ProjectorGhostImaging.adjust_sampling_scaling", false]], "angle_prj_shape (corrct._projector_backends.projectorbackenddirectastra attribute)": [[3, "corrct._projector_backends.ProjectorBackendDirectASTRA.angle_prj_shape", false]], "angle_rad (corrct.physics.xrf.detectorxrf attribute)": [[20, "corrct.physics.xrf.DetectorXRF.angle_rad", false]], "angles_det_rad (corrct.physics.attenuation.attenuationvolume attribute)": [[15, "corrct.physics.attenuation.AttenuationVolume.angles_det_rad", false]], "angles_rad (corrct.alignment.shifts.detectorshiftsbase attribute)": [[7, "corrct.alignment.shifts.DetectorShiftsBase.angles_rad", false]], "angles_rot_rad (corrct.physics.attenuation.attenuationvolume attribute)": [[15, "corrct.physics.attenuation.AttenuationVolume.angles_rot_rad", false]], "angles_rot_rad (corrct.projectors.projectoruncorrected property)": [[26, "corrct.projectors.ProjectorUncorrected.angles_rot_rad", false]], "angles_w_rad (corrct._projector_backends.projectorbackend attribute)": [[3, "corrct._projector_backends.ProjectorBackend.angles_w_rad", false]], "apply_filter() (corrct.filters.filter method)": [[10, "corrct.filters.Filter.apply_filter", false]], "apply_flat_field() (in module corrct.processing.pre)": [[25, "corrct.processing.pre.apply_flat_field", false]], "apply_minus_log() (in module corrct.processing.pre)": [[25, "corrct.processing.pre.apply_minus_log", false]], "apply_propagation_filter() (in module corrct.physics.phase)": [[17, "corrct.physics.phase.apply_propagation_filter", false]], "apply_proximal() (corrct.data_terms.datafidelity_huber method)": [[8, "corrct.data_terms.DataFidelity_Huber.apply_proximal", false]], "apply_proximal() (corrct.data_terms.datafidelity_kl method)": [[8, "corrct.data_terms.DataFidelity_KL.apply_proximal", false]], "apply_proximal() (corrct.data_terms.datafidelity_l1 method)": [[8, "corrct.data_terms.DataFidelity_l1.apply_proximal", false]], "apply_proximal() (corrct.data_terms.datafidelity_l2 method)": [[8, "corrct.data_terms.DataFidelity_l2.apply_proximal", false]], "apply_proximal() (corrct.data_terms.datafidelity_l2b method)": [[8, "corrct.data_terms.DataFidelity_l2b.apply_proximal", false]], "apply_proximal() (corrct.data_terms.datafidelity_ln method)": [[8, "corrct.data_terms.DataFidelity_ln.apply_proximal", false]], "apply_proximal() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase.apply_proximal", false]], "apply_proximal() (corrct.regularizers.baseregularizer method)": [[27, "corrct.regularizers.BaseRegularizer.apply_proximal", false]], "apply_proximal() (corrct.regularizers.constraint_lowerlimit method)": [[27, "corrct.regularizers.Constraint_LowerLimit.apply_proximal", false]], "apply_proximal() (corrct.regularizers.constraint_upperlimit method)": [[27, "corrct.regularizers.Constraint_UpperLimit.apply_proximal", false]], "apply_proximal() (corrct.regularizers.regularizer_dwl method)": [[27, "corrct.regularizers.Regularizer_dwl.apply_proximal", false]], "apply_proximal() (corrct.regularizers.regularizer_swl method)": [[27, "corrct.regularizers.Regularizer_swl.apply_proximal", false]], "apply_proximal() (corrct.regularizers.regularizer_vl1wl method)": [[27, "corrct.regularizers.Regularizer_vl1wl.apply_proximal", false]], "apply_proximal() (corrct.regularizers.regularizer_vtv method)": [[27, "corrct.regularizers.Regularizer_VTV.apply_proximal", false]], "as_reference() (corrct.alignment.centering.recentervolume method)": [[5, "corrct.alignment.centering.RecenterVolume.as_reference", false]], "assign_data() (corrct.data_terms.datafidelity_huber method)": [[8, "corrct.data_terms.DataFidelity_Huber.assign_data", false]], "assign_data() (corrct.data_terms.datafidelity_l1b method)": [[8, "corrct.data_terms.DataFidelity_l1b.assign_data", false]], "assign_data() (corrct.data_terms.datafidelity_l2 method)": [[8, "corrct.data_terms.DataFidelity_l2.assign_data", false]], "assign_data() (corrct.data_terms.datafidelity_l2b method)": [[8, "corrct.data_terms.DataFidelity_l2b.assign_data", false]], "assign_data() (corrct.data_terms.datafidelity_wl2 method)": [[8, "corrct.data_terms.DataFidelity_wl2.assign_data", false]], "assign_data() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase.assign_data", false]], "astra_angle_prj_shape (corrct._projector_backends.projectorbackenddirectastra attribute)": [[3, "corrct._projector_backends.ProjectorBackendDirectASTRA.astra_angle_prj_shape", false]], "astra_available (in module corrct.projectors)": [[26, "corrct.projectors.astra_available", false]], "astra_prj_shape (corrct._projector_backends.projectorbackenddirectastra attribute)": [[3, "corrct._projector_backends.ProjectorBackendDirectASTRA.astra_prj_shape", false]], "astra_vol_geom (corrct._projector_backends.projectorbackendastra attribute)": [[3, "corrct._projector_backends.ProjectorBackendASTRA.astra_vol_geom", false]], "astra_vol_shape (corrct._projector_backends.projectorbackenddirectastra attribute)": [[3, "corrct._projector_backends.ProjectorBackendDirectASTRA.astra_vol_shape", false]], "att_vol_angles (corrct.projectors.projectorattenuationxrf attribute)": [[26, "corrct.projectors.ProjectorAttenuationXRF.att_vol_angles", false]], "attenuationvolume (class in corrct.physics.attenuation)": [[15, "corrct.physics.attenuation.AttenuationVolume", false]], "axes (corrct.operators.basewavelettransform attribute)": [[12, "corrct.operators.BaseWaveletTransform.axes", false]], "azimuthal_integration() (in module corrct.processing.misc)": [[22, "corrct.processing.misc.azimuthal_integration", false]], "background (corrct.data_terms.datafidelitybase attribute)": [[8, "corrct.data_terms.DataFidelityBase.background", false]], "background_from_margin() (in module corrct.processing.pre)": [[25, "corrct.processing.pre.background_from_margin", false]], "ball() (in module corrct.processing.misc)": [[22, "corrct.processing.misc.ball", false]], "baseparametertuning (class in corrct.param_tuning)": [[13, "corrct.param_tuning.BaseParameterTuning", false]], "baseregularizer (class in corrct.regularizers)": [[27, "corrct.regularizers.BaseRegularizer", false]], "baseregularizer_med (class in corrct.regularizers)": [[27, "corrct.regularizers.BaseRegularizer_med", false]], "basetransform (class in corrct.operators)": [[12, "corrct.operators.BaseTransform", false]], "basewavelettransform (class in corrct.operators)": [[12, "corrct.operators.BaseWaveletTransform", false]], "basisoptions (class in corrct.filters)": [[10, "corrct.filters.BasisOptions", false]], "basisoptionsblocks (class in corrct.filters)": [[10, "corrct.filters.BasisOptionsBlocks", false]], "basisoptionswavelets (class in corrct.filters)": [[10, "corrct.filters.BasisOptionsWavelets", false]], "bin_imgs() (in module corrct.processing.pre)": [[25, "corrct.processing.pre.bin_imgs", false]], "bin_masks() (corrct.struct_illum.maskcollection method)": [[29, "corrct.struct_illum.MaskCollection.bin_masks", false]], "binning_start (corrct.filters.basisoptionsblocks attribute)": [[10, "corrct.filters.BasisOptionsBlocks.binning_start", false]], "binning_start (corrct.filters.filtermr attribute)": [[10, "corrct.filters.FilterMR.binning_start", false]], "binning_type (corrct.filters.basisoptionsblocks attribute)": [[10, "corrct.filters.BasisOptionsBlocks.binning_type", false]], "binning_type (corrct.filters.filtermr attribute)": [[10, "corrct.filters.FilterMR.binning_type", false]], "bp() (corrct._projector_backends.projectorbackend method)": [[3, "corrct._projector_backends.ProjectorBackend.bp", false]], "bp() (corrct._projector_backends.projectorbackendastra method)": [[3, "corrct._projector_backends.ProjectorBackendASTRA.bp", false]], "bp() (corrct._projector_backends.projectorbackenddirectastra method)": [[3, "corrct._projector_backends.ProjectorBackendDirectASTRA.bp", false]], "bp() (corrct._projector_backends.projectorbackendskimage method)": [[3, "corrct._projector_backends.ProjectorBackendSKimage.bp", false]], "bp() (corrct.operators.projectoroperator method)": [[12, "corrct.operators.ProjectorOperator.bp", false]], "bp() (corrct.projectors.projectorattenuationxrf method)": [[26, "corrct.projectors.ProjectorAttenuationXRF.bp", false]], "bp() (corrct.projectors.projectormatrix method)": [[26, "corrct.projectors.ProjectorMatrix.bp", false]], "bp() (corrct.projectors.projectoruncorrected method)": [[26, "corrct.projectors.ProjectorUncorrected.bp", false]], "bp() (corrct.struct_illum.projectorghostimaging method)": [[29, "corrct.struct_illum.ProjectorGhostImaging.bp", false]], "bp_angle() (corrct.projectors.projectorattenuationxrf method)": [[26, "corrct.projectors.ProjectorAttenuationXRF.bp_angle", false]], "bp_angle() (corrct.projectors.projectoruncorrected method)": [[26, "corrct.projectors.ProjectorUncorrected.bp_angle", false]], "circular_mask (in module corrct.processing)": [[21, "corrct.processing.circular_mask", false]], "circular_mask() (in module corrct.processing.misc)": [[22, "corrct.processing.misc.circular_mask", false]], "collapse_detectors() (corrct.projectors.projectorattenuationxrf method)": [[26, "corrct.projectors.ProjectorAttenuationXRF.collapse_detectors", false]], "com() (in module corrct.processing.post)": [[24, "corrct.processing.post.com", false]], "combine_shifts_vu() (in module corrct.models)": [[11, "corrct.models.combine_shifts_vu", false]], "compute_attenuation() (in module corrct._projector_backends)": [[3, "corrct._projector_backends.compute_attenuation", false]], "compute_data_dual_dot() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase.compute_data_dual_dot", false]], "compute_eigen_flats() (in module corrct.processing.pre)": [[25, "corrct.processing.pre.compute_eigen_flats", false]], "compute_error_power() (in module corrct.testing)": [[30, "corrct.testing.compute_error_power", false]], "compute_filter() (corrct.filters.filter method)": [[10, "corrct.filters.Filter.compute_filter", false]], "compute_filter() (corrct.filters.filtercustom method)": [[10, "corrct.filters.FilterCustom.compute_filter", false]], "compute_filter() (corrct.filters.filterfbp method)": [[10, "corrct.filters.FilterFBP.compute_filter", false]], "compute_filter() (corrct.filters.filtermr method)": [[10, "corrct.filters.FilterMR.compute_filter", false]], "compute_frc() (in module corrct.processing.post)": [[24, "corrct.processing.post.compute_frc", false]], "compute_loss_values() (corrct.param_tuning.baseparametertuning method)": [[13, "corrct.param_tuning.BaseParameterTuning.compute_loss_values", false]], "compute_loss_values() (corrct.param_tuning.crossvalidation method)": [[13, "corrct.param_tuning.CrossValidation.compute_loss_values", false]], "compute_loss_values() (corrct.param_tuning.lcurve method)": [[13, "corrct.param_tuning.LCurve.compute_loss_values", false]], "compute_maps() (corrct.physics.attenuation.attenuationvolume method)": [[15, "corrct.physics.attenuation.AttenuationVolume.compute_maps", false]], "compute_possible_mask_sizes() (corrct.struct_illum.maskgeneratormura static method)": [[29, "corrct.struct_illum.MaskGeneratorMURA.compute_possible_mask_sizes", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelity_huber method)": [[8, "corrct.data_terms.DataFidelity_Huber.compute_primal_dual_gap", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelity_kl method)": [[8, "corrct.data_terms.DataFidelity_KL.compute_primal_dual_gap", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelity_l1 method)": [[8, "corrct.data_terms.DataFidelity_l1.compute_primal_dual_gap", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelity_l2 method)": [[8, "corrct.data_terms.DataFidelity_l2.compute_primal_dual_gap", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelity_l2b method)": [[8, "corrct.data_terms.DataFidelity_l2b.compute_primal_dual_gap", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelity_ln method)": [[8, "corrct.data_terms.DataFidelity_ln.compute_primal_dual_gap", false]], "compute_primal_dual_gap() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase.compute_primal_dual_gap", false]], "compute_reconstruction_and_loss() (corrct.param_tuning.baseparametertuning method)": [[13, "corrct.param_tuning.BaseParameterTuning.compute_reconstruction_and_loss", false]], "compute_reconstruction_error() (corrct.param_tuning.baseparametertuning method)": [[13, "corrct.param_tuning.BaseParameterTuning.compute_reconstruction_error", false]], "compute_residual() (corrct.data_terms.datafidelity_kl method)": [[8, "corrct.data_terms.DataFidelity_KL.compute_residual", false]], "compute_residual() (corrct.data_terms.datafidelity_l2b method)": [[8, "corrct.data_terms.DataFidelity_l2b.compute_residual", false]], "compute_residual() (corrct.data_terms.datafidelity_wl2 method)": [[8, "corrct.data_terms.DataFidelity_wl2.compute_residual", false]], "compute_residual() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase.compute_residual", false]], "compute_residual() (corrct.solvers.sart method)": [[28, "corrct.solvers.SART.compute_residual", false]], "compute_residual_norm() (corrct.data_terms.datafidelity_huber method)": [[8, "corrct.data_terms.DataFidelity_Huber.compute_residual_norm", false]], "compute_residual_norm() (corrct.data_terms.datafidelity_kl method)": [[8, "corrct.data_terms.DataFidelity_KL.compute_residual_norm", false]], "compute_residual_norm() (corrct.data_terms.datafidelity_l1 method)": [[8, "corrct.data_terms.DataFidelity_l1.compute_residual_norm", false]], "compute_residual_norm() (corrct.data_terms.datafidelity_l2 method)": [[8, "corrct.data_terms.DataFidelity_l2.compute_residual_norm", false]], "compute_residual_norm() (corrct.data_terms.datafidelity_ln method)": [[8, "corrct.data_terms.DataFidelity_ln.compute_residual_norm", false]], "compute_residual_norm() (corrct.data_terms.datafidelity_wl2 method)": [[8, "corrct.data_terms.DataFidelity_wl2.compute_residual_norm", false]], "compute_residual_norm() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase.compute_residual_norm", false]], "compute_update_primal() (corrct.regularizers.baseregularizer method)": [[27, "corrct.regularizers.BaseRegularizer.compute_update_primal", false]], "compute_variance_poisson (in module corrct.processing)": [[21, "corrct.processing.compute_variance_poisson", false]], "compute_variance_poisson() (in module corrct.processing.noise)": [[23, "corrct.processing.noise.compute_variance_poisson", false]], "compute_variance_transmission (in module corrct.processing)": [[21, "corrct.processing.compute_variance_transmission", false]], "compute_variance_transmission() (in module corrct.processing.noise)": [[23, "corrct.processing.noise.compute_variance_transmission", false]], "compute_variance_weight (in module corrct.processing)": [[21, "corrct.processing.compute_variance_weight", false]], "compute_variance_weight() (in module corrct.processing.noise)": [[23, "corrct.processing.noise.compute_variance_weight", false]], "constraint_lowerlimit (class in corrct.regularizers)": [[27, "corrct.regularizers.Constraint_LowerLimit", false]], "constraint_upperlimit (class in corrct.regularizers)": [[27, "corrct.regularizers.Constraint_UpperLimit", false]], "conversionenergy (class in corrct.physics.units)": [[18, "corrct.physics.units.ConversionEnergy", false]], "conversionmetric (class in corrct.physics.units)": [[18, "corrct.physics.units.ConversionMetric", false]], "convert() (corrct.physics.units.conversionenergy static method)": [[18, "corrct.physics.units.ConversionEnergy.convert", false]], "convert() (corrct.physics.units.conversionmetric static method)": [[18, "corrct.physics.units.ConversionMetric.convert", false]], "convert_energy_to_wlength (in module corrct.physics)": [[14, "corrct.physics.convert_energy_to_wlength", false]], "convert_um_to_cm (in module corrct.physics.attenuation)": [[15, "corrct.physics.attenuation.CONVERT_UM_TO_CM", false]], "convert_wlength_to_energy (in module corrct.physics)": [[14, "corrct.physics.convert_wlength_to_energy", false]], "copy() (corrct.models.projectiongeometry method)": [[11, "corrct.models.ProjectionGeometry.copy", false]], "corrct": [[2, "module-corrct", false]], "corrct._projector_backends": [[3, "module-corrct._projector_backends", false]], "corrct.alignment": [[4, "module-corrct.alignment", false]], "corrct.alignment.centering": [[5, "module-corrct.alignment.centering", false]], "corrct.alignment.fitting": [[6, "module-corrct.alignment.fitting", false]], "corrct.alignment.shifts": [[7, "module-corrct.alignment.shifts", false]], "corrct.data_terms": [[8, "module-corrct.data_terms", false]], "corrct.denoisers": [[9, "module-corrct.denoisers", false]], "corrct.filters": [[10, "module-corrct.filters", false]], "corrct.models": [[11, "module-corrct.models", false]], "corrct.operators": [[12, "module-corrct.operators", false]], "corrct.param_tuning": [[13, "module-corrct.param_tuning", false]], "corrct.physics": [[14, "module-corrct.physics", false]], "corrct.physics.attenuation": [[15, "module-corrct.physics.attenuation", false]], "corrct.physics.materials": [[16, "module-corrct.physics.materials", false]], "corrct.physics.phase": [[17, "module-corrct.physics.phase", false]], "corrct.physics.units": [[18, "module-corrct.physics.units", false]], "corrct.physics.xraylib_helper": [[19, "module-corrct.physics.xraylib_helper", false]], "corrct.physics.xrf": [[20, "module-corrct.physics.xrf", false]], "corrct.processing": [[21, "module-corrct.processing", false]], "corrct.processing.misc": [[22, "module-corrct.processing.misc", false]], "corrct.processing.noise": [[23, "module-corrct.processing.noise", false]], "corrct.processing.post": [[24, "module-corrct.processing.post", false]], "corrct.processing.pre": [[25, "module-corrct.processing.pre", false]], "corrct.projectors": [[26, "module-corrct.projectors", false]], "corrct.regularizers": [[27, "module-corrct.regularizers", false]], "corrct.solvers": [[28, "module-corrct.solvers", false]], "corrct.struct_illum": [[29, "module-corrct.struct_illum", false]], "corrct.testing": [[30, "module-corrct.testing", false]], "create_basis() (in module corrct.filters)": [[10, "corrct.filters.create_basis", false]], "create_basis_wavelet() (in module corrct.filters)": [[10, "corrct.filters.create_basis_wavelet", false]], "create_phantom_nuclei3d() (in module corrct.testing)": [[30, "corrct.testing.create_phantom_nuclei3d", false]], "create_random_test_mask() (in module corrct.param_tuning)": [[13, "corrct.param_tuning.create_random_test_mask", false]], "create_sino() (in module corrct.testing)": [[30, "corrct.testing.create_sino", false]], "create_sino_transmission() (in module corrct.testing)": [[30, "corrct.testing.create_sino_transmission", false]], "crossvalidation (class in corrct.param_tuning)": [[13, "corrct.param_tuning.CrossValidation", false]], "data (corrct.data_terms.datafidelitybase attribute)": [[8, "corrct.data_terms.DataFidelityBase.data", false]], "data_vwu (corrct.alignment.shifts.detectorshiftsbase attribute)": [[7, "corrct.alignment.shifts.DetectorShiftsBase.data_vwu", false]], "datafidelity_huber (class in corrct.data_terms)": [[8, "corrct.data_terms.DataFidelity_Huber", false]], "datafidelity_kl (class in corrct.data_terms)": [[8, "corrct.data_terms.DataFidelity_KL", false]], "datafidelity_l1 (class in corrct.data_terms)": [[8, "corrct.data_terms.DataFidelity_l1", false]], "datafidelity_l12 (class in corrct.data_terms)": [[8, "corrct.data_terms.DataFidelity_l12", false]], "datafidelity_l1b (class in corrct.data_terms)": [[8, "corrct.data_terms.DataFidelity_l1b", false]], "datafidelity_l2 (class in corrct.data_terms)": [[8, "corrct.data_terms.DataFidelity_l2", false]], "datafidelity_l2b (class in corrct.data_terms)": [[8, "corrct.data_terms.DataFidelity_l2b", false]], "datafidelity_ln (class in corrct.data_terms)": [[8, "corrct.data_terms.DataFidelity_ln", false]], "datafidelity_wl2 (class in corrct.data_terms)": [[8, "corrct.data_terms.DataFidelity_wl2", false]], "datafidelitybase (class in corrct.data_terms)": [[8, "corrct.data_terms.DataFidelityBase", false]], "decompose_qr_masks() (in module corrct.struct_illum)": [[29, "corrct.struct_illum.decompose_qr_masks", false]], "denoise_image() (in module corrct.denoisers)": [[9, "corrct.denoisers.denoise_image", false]], "destripe_wlf_vwu() (in module corrct.processing.pre)": [[25, "corrct.processing.pre.destripe_wlf_vwu", false]], "det_pos_xyz (corrct.models.projectiongeometry attribute)": [[11, "corrct.models.ProjectionGeometry.det_pos_xyz", false]], "det_shape_vu (corrct.models.projectiongeometry attribute)": [[11, "corrct.models.ProjectionGeometry.det_shape_vu", false]], "det_u_xyz (corrct.models.projectiongeometry attribute)": [[11, "corrct.models.ProjectionGeometry.det_u_xyz", false]], "det_v_xyz (corrct.models.projectiongeometry attribute)": [[11, "corrct.models.ProjectionGeometry.det_v_xyz", false]], "detectorshiftsbase (class in corrct.alignment.shifts)": [[7, "corrct.alignment.shifts.DetectorShiftsBase", false]], "detectorshiftspre (class in corrct.alignment.shifts)": [[7, "corrct.alignment.shifts.DetectorShiftsPRE", false]], "detectorshiftspre (in module corrct.alignment)": [[4, "corrct.alignment.DetectorShiftsPRE", false]], "detectorshiftsxc (class in corrct.alignment.shifts)": [[7, "corrct.alignment.shifts.DetectorShiftsXC", false]], "detectorshiftsxc (in module corrct.alignment)": [[4, "corrct.alignment.DetectorShiftsXC", false]], "detectorxrf (class in corrct.physics.xrf)": [[20, "corrct.physics.xrf.DetectorXRF", false]], "dir_shape (corrct.operators.basetransform attribute)": [[12, "corrct.operators.BaseTransform.dir_shape", false]], "direct_dwt() (corrct.operators.transformdecimatedwavelet method)": [[12, "corrct.operators.TransformDecimatedWavelet.direct_dwt", false]], "direct_svd() (corrct.operators.transformsvd method)": [[12, "corrct.operators.TransformSVD.direct_svd", false]], "direct_swt() (corrct.operators.transformstationarywavelet method)": [[12, "corrct.operators.TransformStationaryWavelet.direct_swt", false]], "dispose() (corrct._projector_backends.projectorbackend method)": [[3, "corrct._projector_backends.ProjectorBackend.dispose", false]], "dispose() (corrct._projector_backends.projectorbackendastra method)": [[3, "corrct._projector_backends.ProjectorBackendASTRA.dispose", false]], "distance_mm (corrct.physics.xrf.detectorxrf attribute)": [[20, "corrct.physics.xrf.DetectorXRF.distance_mm", false]], "divergence() (corrct.operators.transformgradient method)": [[12, "corrct.operators.TransformGradient.divergence", false]], "download_phantom() (in module corrct.testing)": [[30, "corrct.testing.download_phantom", false]], "dtype (corrct.filters.filter attribute)": [[10, "corrct.filters.Filter.dtype", false]], "dtype (corrct.physics.attenuation.attenuationvolume attribute)": [[15, "corrct.physics.attenuation.AttenuationVolume.dtype", false]], "dtype (corrct.regularizers.baseregularizer attribute)": [[27, "corrct.regularizers.BaseRegularizer.dtype", false]], "dtype (corrct.struct_illum.maskgenerator attribute)": [[29, "corrct.struct_illum.MaskGenerator.dtype", false]], "emitted_local (corrct.physics.attenuation.attenuationvolume attribute)": [[15, "corrct.physics.attenuation.AttenuationVolume.emitted_local", false]], "energy_to_wlength() (in module corrct.physics.units)": [[18, "corrct.physics.units.energy_to_wlength", false]], "eps (in module corrct.alignment.fitting)": [[6, "corrct.alignment.fitting.eps", false]], "eps (in module corrct.alignment.shifts)": [[7, "corrct.alignment.shifts.eps", false]], "eps (in module corrct.data_terms)": [[8, "corrct.data_terms.eps", false]], "eps (in module corrct.denoisers)": [[9, "corrct.denoisers.eps", false]], "eps (in module corrct.processing.misc)": [[22, "corrct.processing.misc.eps", false]], "eps (in module corrct.processing.noise)": [[23, "corrct.processing.noise.eps", false]], "eps (in module corrct.processing.post)": [[24, "corrct.processing.post.eps", false]], "eps (in module corrct.processing.pre)": [[25, "corrct.processing.pre.eps", false]], "eps (in module corrct.solvers)": [[28, "corrct.solvers.eps", false]], "estimate_resolution() (in module corrct.processing.post)": [[24, "corrct.processing.post.estimate_resolution", false]], "estimate_resolution() (in module corrct.struct_illum)": [[29, "corrct.struct_illum.estimate_resolution", false]], "executor (corrct.projectors.projectorattenuationxrf attribute)": [[26, "corrct.projectors.ProjectorAttenuationXRF.executor", false]], "explicit() (corrct.operators.basetransform method)": [[12, "corrct.operators.BaseTransform.explicit", false]], "extent (corrct.models.volumegeometry property)": [[11, "corrct.models.VolumeGeometry.extent", false]], "extract_peak_region_nd() (in module corrct.alignment.fitting)": [[6, "corrct.alignment.fitting.extract_peak_region_nd", false]], "extract_peak_regions_1d() (in module corrct.alignment.fitting)": [[6, "corrct.alignment.fitting.extract_peak_regions_1d", false]], "fbp (class in corrct.solvers)": [[28, "corrct.solvers.FBP", false]], "fbp() (corrct.struct_illum.projectorghostimaging method)": [[29, "corrct.struct_illum.ProjectorGhostImaging.fbp", false]], "fbp_filter (corrct.filters.filter attribute)": [[10, "corrct.filters.Filter.fbp_filter", false]], "fft() (corrct.operators.transformfourier method)": [[12, "corrct.operators.TransformFourier.fft", false]], "filter (class in corrct.filters)": [[10, "corrct.filters.Filter", false]], "filter_fourier (corrct.filters.filter property)": [[10, "corrct.filters.Filter.filter_fourier", false]], "filter_name (corrct.filters.filterfbp attribute)": [[10, "corrct.filters.FilterFBP.filter_name", false]], "filter_real (corrct.filters.filter property)": [[10, "corrct.filters.Filter.filter_real", false]], "filtercustom (class in corrct.filters)": [[10, "corrct.filters.FilterCustom", false]], "filterfbp (class in corrct.filters)": [[10, "corrct.filters.FilterFBP", false]], "filtermr (class in corrct.filters)": [[10, "corrct.filters.FilterMR", false]], "filters (corrct.filters.filterfbp attribute)": [[10, "corrct.filters.FilterFBP.FILTERS", false]], "find_shifts_vu() (corrct.alignment.shifts.detectorshiftsxc method)": [[7, "corrct.alignment.shifts.DetectorShiftsXC.find_shifts_vu", false]], "fit_camera_tilt_angle() (in module corrct.alignment.fitting)": [[6, "corrct.alignment.fitting.fit_camera_tilt_angle", false]], "fit_func_min() (in module corrct.param_tuning)": [[13, "corrct.param_tuning.fit_func_min", false]], "fit_image_rotation_and_scale() (in module corrct.alignment.fitting)": [[6, "corrct.alignment.fitting.fit_image_rotation_and_scale", false]], "fit_loss_min() (corrct.param_tuning.crossvalidation method)": [[13, "corrct.param_tuning.CrossValidation.fit_loss_min", false]], "fit_scale_bias() (in module corrct.processing.post)": [[24, "corrct.processing.post.fit_scale_bias", false]], "fit_shifts_u_sad() (in module corrct.alignment.fitting)": [[6, "corrct.alignment.fitting.fit_shifts_u_sad", false]], "fit_shifts_vu_xc() (in module corrct.alignment.fitting)": [[6, "corrct.alignment.fitting.fit_shifts_vu_xc", false]], "fit_shifts_zyx_xc() (in module corrct.alignment.fitting)": [[6, "corrct.alignment.fitting.fit_shifts_zyx_xc", false]], "fit_sinusoid() (in module corrct.alignment.fitting)": [[6, "corrct.alignment.fitting.fit_sinusoid", false]], "fit_u() (corrct.alignment.shifts.detectorshiftspre method)": [[7, "corrct.alignment.shifts.DetectorShiftsPRE.fit_u", false]], "fit_u_180() (corrct.alignment.shifts.detectorshiftsxc method)": [[7, "corrct.alignment.shifts.DetectorShiftsXC.fit_u_180", false]], "fit_u_360() (corrct.alignment.shifts.detectorshiftsxc method)": [[7, "corrct.alignment.shifts.DetectorShiftsXC.fit_u_360", false]], "fit_v() (corrct.alignment.shifts.detectorshiftspre method)": [[7, "corrct.alignment.shifts.DetectorShiftsPRE.fit_v", false]], "fit_vu() (corrct.alignment.shifts.detectorshiftsxc method)": [[7, "corrct.alignment.shifts.DetectorShiftsXC.fit_vu", false]], "fit_vu_accum_drifts() (corrct.alignment.shifts.detectorshiftsxc method)": [[7, "corrct.alignment.shifts.DetectorShiftsXC.fit_vu_accum_drifts", false]], "flip_adjoint (corrct.operators.transformconvolution attribute)": [[12, "corrct.operators.TransformConvolution.flip_adjoint", false]], "fluoline (class in corrct.physics.xrf)": [[20, "corrct.physics.xrf.FluoLine", false]], "fluolinessiegbahn (in module corrct.physics)": [[14, "corrct.physics.FluoLinesSiegbahn", false]], "fp() (corrct._projector_backends.projectorbackend method)": [[3, "corrct._projector_backends.ProjectorBackend.fp", false]], "fp() (corrct._projector_backends.projectorbackendastra method)": [[3, "corrct._projector_backends.ProjectorBackendASTRA.fp", false]], "fp() (corrct._projector_backends.projectorbackenddirectastra method)": [[3, "corrct._projector_backends.ProjectorBackendDirectASTRA.fp", false]], "fp() (corrct._projector_backends.projectorbackendskimage method)": [[3, "corrct._projector_backends.ProjectorBackendSKimage.fp", false]], "fp() (corrct.operators.projectoroperator method)": [[12, "corrct.operators.ProjectorOperator.fp", false]], "fp() (corrct.projectors.projectorattenuationxrf method)": [[26, "corrct.projectors.ProjectorAttenuationXRF.fp", false]], "fp() (corrct.projectors.projectormatrix method)": [[26, "corrct.projectors.ProjectorMatrix.fp", false]], "fp() (corrct.projectors.projectoruncorrected method)": [[26, "corrct.projectors.ProjectorUncorrected.fp", false]], "fp() (corrct.struct_illum.projectorghostimaging method)": [[29, "corrct.struct_illum.ProjectorGhostImaging.fp", false]], "fp_angle() (corrct.projectors.projectorattenuationxrf method)": [[26, "corrct.projectors.ProjectorAttenuationXRF.fp_angle", false]], "fp_angle() (corrct.projectors.projectoruncorrected method)": [[26, "corrct.projectors.ProjectorUncorrected.fp_angle", false]], "generate_collection() (corrct.struct_illum.maskgenerator method)": [[29, "corrct.struct_illum.MaskGenerator.generate_collection", false]], "generate_shifted_mask() (corrct.struct_illum.maskgenerator method)": [[29, "corrct.struct_illum.MaskGenerator.generate_shifted_mask", false]], "generate_shifted_mask() (corrct.struct_illum.maskgeneratorbernoulli method)": [[29, "corrct.struct_illum.MaskGeneratorBernoulli.generate_shifted_mask", false]], "generate_shifted_mask() (corrct.struct_illum.maskgeneratorhalfgaussian method)": [[29, "corrct.struct_illum.MaskGeneratorHalfGaussian.generate_shifted_mask", false]], "generate_shifted_mask() (corrct.struct_illum.maskgeneratormura method)": [[29, "corrct.struct_illum.MaskGeneratorMURA.generate_shifted_mask", false]], "generate_shifted_mask() (corrct.struct_illum.maskgeneratorpoint method)": [[29, "corrct.struct_illum.MaskGeneratorPoint.generate_shifted_mask", false]], "geom_type (corrct.models.projectiongeometry attribute)": [[11, "corrct.models.ProjectionGeometry.geom_type", false]], "geometry (class in corrct.models)": [[11, "corrct.models.Geometry", false]], "get_3d() (corrct.models.projectiongeometry method)": [[11, "corrct.models.ProjectionGeometry.get_3d", false]], "get_3d() (corrct.models.volumegeometry method)": [[11, "corrct.models.VolumeGeometry.get_3d", false]], "get_attenuation() (corrct.physics.materials.volumematerial method)": [[16, "corrct.physics.materials.VolumeMaterial.get_attenuation", false]], "get_available_filters() (corrct.filters.filterfbp method)": [[10, "corrct.filters.FilterFBP.get_available_filters", false]], "get_compound (in module corrct.physics)": [[14, "corrct.physics.get_compound", false]], "get_compound() (in module corrct.physics.xraylib_helper)": [[19, "corrct.physics.xraylib_helper.get_compound", false]], "get_compound_cross_section() (in module corrct.physics.xraylib_helper)": [[19, "corrct.physics.xraylib_helper.get_compound_cross_section", false]], "get_compton_scattering() (corrct.physics.materials.volumematerial method)": [[16, "corrct.physics.materials.VolumeMaterial.get_compton_scattering", false]], "get_default_from_data() (corrct.models.volumegeometry static method)": [[11, "corrct.models.VolumeGeometry.get_default_from_data", false]], "get_default_from_volume() (corrct.models.volumegeometry static method)": [[11, "corrct.models.VolumeGeometry.get_default_from_volume", false]], "get_default_parallel() (corrct.models.projectiongeometry static method)": [[11, "corrct.models.ProjectionGeometry.get_default_parallel", false]], "get_delta_beta() (in module corrct.physics.phase)": [[17, "corrct.physics.phase.get_delta_beta", false]], "get_delta_beta_curves() (in module corrct.physics.phase)": [[17, "corrct.physics.phase.get_delta_beta_curves", false]], "get_element_mass_fraction() (corrct.physics.materials.volumematerial method)": [[16, "corrct.physics.materials.VolumeMaterial.get_element_mass_fraction", false]], "get_element_number (in module corrct.physics)": [[14, "corrct.physics.get_element_number", false]], "get_element_number() (in module corrct.physics.xraylib_helper)": [[19, "corrct.physics.xraylib_helper.get_element_number", false]], "get_element_number_and_symbol() (in module corrct.physics.xraylib_helper)": [[19, "corrct.physics.xraylib_helper.get_element_number_and_symbol", false]], "get_energy() (in module corrct.physics.xrf)": [[20, "corrct.physics.xrf.get_energy", false]], "get_field_scaled() (corrct.models.projectiongeometry method)": [[11, "corrct.models.ProjectionGeometry.get_field_scaled", false]], "get_fluo_production() (corrct.physics.materials.volumematerial method)": [[16, "corrct.physics.materials.VolumeMaterial.get_fluo_production", false]], "get_interval_shifts() (corrct.struct_illum.maskgenerator method)": [[29, "corrct.struct_illum.MaskGenerator.get_interval_shifts", false]], "get_lambda_range() (corrct.param_tuning.baseparametertuning static method)": [[13, "corrct.param_tuning.BaseParameterTuning.get_lambda_range", false]], "get_lambda_range() (in module corrct.param_tuning)": [[13, "corrct.param_tuning.get_lambda_range", false]], "get_linear_attenuation_coefficient() (in module corrct.physics.attenuation)": [[15, "corrct.physics.attenuation.get_linear_attenuation_coefficient", false]], "get_lines() (corrct.physics.xrf.linessiegbahn static method)": [[20, "corrct.physics.xrf.LinesSiegbahn.get_lines", false]], "get_maps() (corrct.physics.attenuation.attenuationvolume method)": [[15, "corrct.physics.attenuation.AttenuationVolume.get_maps", false]], "get_mask() (corrct.struct_illum.maskcollection method)": [[29, "corrct.struct_illum.MaskCollection.get_mask", false]], "get_padding_size() (corrct.filters.filter method)": [[10, "corrct.filters.Filter.get_padding_size", false]], "get_pre_weights() (corrct.models.projectiongeometry method)": [[11, "corrct.models.ProjectionGeometry.get_pre_weights", false]], "get_pre_weights() (corrct.operators.projectoroperator method)": [[12, "corrct.operators.ProjectorOperator.get_pre_weights", false]], "get_pre_weights() (corrct.projectors.projectoruncorrected method)": [[26, "corrct.projectors.ProjectorUncorrected.get_pre_weights", false]], "get_prj_geom_cone() (in module corrct.models)": [[11, "corrct.models.get_prj_geom_cone", false]], "get_prj_geom_parallel() (in module corrct.models)": [[11, "corrct.models.get_prj_geom_parallel", false]], "get_prj_shape() (corrct._projector_backends.projectorbackend method)": [[3, "corrct._projector_backends.ProjectorBackend.get_prj_shape", false]], "get_projector_args() (corrct.physics.attenuation.attenuationvolume method)": [[15, "corrct.physics.attenuation.AttenuationVolume.get_projector_args", false]], "get_propagation_filter() (in module corrct.physics.phase)": [[17, "corrct.physics.phase.get_propagation_filter", false]], "get_qr_decomposition() (corrct.struct_illum.maskcollection method)": [[29, "corrct.struct_illum.MaskCollection.get_QR_decomposition", false]], "get_radiation_rate() (in module corrct.physics.xrf)": [[20, "corrct.physics.xrf.get_radiation_rate", false]], "get_random_shifts() (corrct.struct_illum.maskgenerator method)": [[29, "corrct.struct_illum.MaskGenerator.get_random_shifts", false]], "get_rot_axis_dir() (in module corrct.models)": [[11, "corrct.models.get_rot_axis_dir", false]], "get_sequential_shifts() (corrct.struct_illum.maskgenerator method)": [[29, "corrct.struct_illum.MaskGenerator.get_sequential_shifts", false]], "get_version() (in module corrct)": [[2, "corrct.get_version", false]], "get_vol_geom_from_data() (in module corrct.models)": [[11, "corrct.models.get_vol_geom_from_data", false]], "get_vol_geom_from_volume() (in module corrct.models)": [[11, "corrct.models.get_vol_geom_from_volume", false]], "get_vol_shape() (corrct._projector_backends.projectorbackend method)": [[3, "corrct._projector_backends.ProjectorBackend.get_vol_shape", false]], "gradient() (corrct.operators.transformgradient method)": [[12, "corrct.operators.TransformGradient.gradient", false]], "ifft() (corrct.operators.transformfourier method)": [[12, "corrct.operators.TransformFourier.ifft", false]], "incident_local (corrct.physics.attenuation.attenuationvolume attribute)": [[15, "corrct.physics.attenuation.AttenuationVolume.incident_local", false]], "indx (corrct.physics.xrf.fluoline attribute)": [[20, "corrct.physics.xrf.FluoLine.indx", false]], "info() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase.info", false]], "info() (corrct.regularizers.baseregularizer method)": [[27, "corrct.regularizers.BaseRegularizer.info", false]], "info() (corrct.regularizers.baseregularizer_med method)": [[27, "corrct.regularizers.BaseRegularizer_med.info", false]], "info() (corrct.regularizers.constraint_lowerlimit method)": [[27, "corrct.regularizers.Constraint_LowerLimit.info", false]], "info() (corrct.regularizers.constraint_upperlimit method)": [[27, "corrct.regularizers.Constraint_UpperLimit.info", false]], "info() (corrct.regularizers.regularizer_dwl method)": [[27, "corrct.regularizers.Regularizer_dwl.info", false]], "info() (corrct.regularizers.regularizer_swl method)": [[27, "corrct.regularizers.Regularizer_swl.info", false]], "info() (corrct.solvers.fbp method)": [[28, "corrct.solvers.FBP.info", false]], "info() (corrct.solvers.mlem method)": [[28, "corrct.solvers.MLEM.info", false]], "info() (corrct.solvers.pdhg method)": [[28, "corrct.solvers.PDHG.info", false]], "info() (corrct.solvers.sirt method)": [[28, "corrct.solvers.SIRT.info", false]], "info() (corrct.solvers.solver method)": [[28, "corrct.solvers.Solver.info", false]], "info() (corrct.struct_illum.maskcollection method)": [[29, "corrct.struct_illum.MaskCollection.info", false]], "info() (corrct.struct_illum.maskgenerator method)": [[29, "corrct.struct_illum.MaskGenerator.info", false]], "initialize() (corrct.filters.filtermr method)": [[10, "corrct.filters.FilterMR.initialize", false]], "initialize_dual() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase.initialize_dual", false]], "initialize_dual() (corrct.regularizers.baseregularizer method)": [[27, "corrct.regularizers.BaseRegularizer.initialize_dual", false]], "initialize_geometry() (corrct._projector_backends.projectorbackend method)": [[3, "corrct._projector_backends.ProjectorBackend.initialize_geometry", false]], "initialize_geometry() (corrct._projector_backends.projectorbackendastra method)": [[3, "corrct._projector_backends.ProjectorBackendASTRA.initialize_geometry", false]], "initialize_geometry() (corrct._projector_backends.projectorbackenddirectastra method)": [[3, "corrct._projector_backends.ProjectorBackendDirectASTRA.initialize_geometry", false]], "initialize_geometry() (corrct._projector_backends.projectorbackendskimage method)": [[3, "corrct._projector_backends.ProjectorBackendSKimage.initialize_geometry", false]], "initialize_sigma_tau() (corrct.regularizers.baseregularizer method)": [[27, "corrct.regularizers.BaseRegularizer.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.baseregularizer_med method)": [[27, "corrct.regularizers.BaseRegularizer_med.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.constraint_lowerlimit method)": [[27, "corrct.regularizers.Constraint_LowerLimit.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.constraint_upperlimit method)": [[27, "corrct.regularizers.Constraint_UpperLimit.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_dwl method)": [[27, "corrct.regularizers.Regularizer_dwl.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_fft method)": [[27, "corrct.regularizers.Regularizer_fft.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_grad method)": [[27, "corrct.regularizers.Regularizer_Grad.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_l1 method)": [[27, "corrct.regularizers.Regularizer_l1.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_lap method)": [[27, "corrct.regularizers.Regularizer_lap.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_lnswl method)": [[27, "corrct.regularizers.Regularizer_lnswl.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_swl method)": [[27, "corrct.regularizers.Regularizer_swl.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_tnv method)": [[27, "corrct.regularizers.Regularizer_TNV.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_vl1wl method)": [[27, "corrct.regularizers.Regularizer_vl1wl.initialize_sigma_tau", false]], "initialize_sigma_tau() (corrct.regularizers.regularizer_vsvd method)": [[27, "corrct.regularizers.Regularizer_vSVD.initialize_sigma_tau", false]], "inspect_fourier_img() (in module corrct.processing.misc)": [[22, "corrct.processing.misc.inspect_fourier_img", false]], "inspect_masks() (corrct.struct_illum.maskcollection method)": [[29, "corrct.struct_illum.MaskCollection.inspect_masks", false]], "inverse_dwt() (corrct.operators.transformdecimatedwavelet method)": [[12, "corrct.operators.TransformDecimatedWavelet.inverse_dwt", false]], "inverse_svd() (corrct.operators.transformsvd method)": [[12, "corrct.operators.TransformSVD.inverse_svd", false]], "inverse_swt() (corrct.operators.transformstationarywavelet method)": [[12, "corrct.operators.TransformStationaryWavelet.inverse_swt", false]], "is_3d() (corrct.models.volumegeometry method)": [[11, "corrct.models.VolumeGeometry.is_3D", false]], "is_initialized (corrct._projector_backends.projectorbackend attribute)": [[3, "corrct._projector_backends.ProjectorBackend.is_initialized", false]], "is_initialized (corrct.filters.filtermr attribute)": [[10, "corrct.filters.FilterMR.is_initialized", false]], "is_ready (corrct._projector_backends.projectorbackend attribute)": [[3, "corrct._projector_backends.ProjectorBackend.is_ready", false]], "is_square() (corrct.models.volumegeometry method)": [[11, "corrct.models.VolumeGeometry.is_square", false]], "is_symm (corrct.operators.transformconvolution attribute)": [[12, "corrct.operators.TransformConvolution.is_symm", false]], "iterations (corrct.solvers.solutioninfo attribute)": [[28, "corrct.solvers.SolutionInfo.iterations", false]], "kernel (corrct.operators.transformconvolution attribute)": [[12, "corrct.operators.TransformConvolution.kernel", false]], "labels (corrct.operators.basewavelettransform attribute)": [[12, "corrct.operators.BaseWaveletTransform.labels", false]], "lambda_smooth (corrct.filters.filtermr attribute)": [[10, "corrct.filters.FilterMR.lambda_smooth", false]], "laplacian() (corrct.operators.transformlaplacian method)": [[12, "corrct.operators.TransformLaplacian.laplacian", false]], "lcurve (class in corrct.param_tuning)": [[13, "corrct.param_tuning.LCurve", false]], "level (corrct.filters.basisoptionswavelets attribute)": [[10, "corrct.filters.BasisOptionsWavelets.level", false]], "lines (corrct.physics.xrf.linessiegbahn attribute)": [[20, "corrct.physics.xrf.LinesSiegbahn.lines", false]], "lines_intersection() (in module corrct.processing.misc)": [[22, "corrct.processing.misc.lines_intersection", false]], "linessiegbahn (class in corrct.physics.xrf)": [[20, "corrct.physics.xrf.LinesSiegbahn", false]], "lower() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase.lower", false]], "lower() (corrct.regularizers.baseregularizer method)": [[27, "corrct.regularizers.BaseRegularizer.lower", false]], "lower() (corrct.solvers.solver method)": [[28, "corrct.solvers.Solver.lower", false]], "lower() (corrct.struct_illum.maskcollection method)": [[29, "corrct.struct_illum.MaskCollection.lower", false]], "make_ready() (corrct._projector_backends.projectorbackend method)": [[3, "corrct._projector_backends.ProjectorBackend.make_ready", false]], "make_ready() (corrct._projector_backends.projectorbackendastra method)": [[3, "corrct._projector_backends.ProjectorBackendASTRA.make_ready", false]], "make_ready() (corrct._projector_backends.projectorbackenddirectastra method)": [[3, "corrct._projector_backends.ProjectorBackendDirectASTRA.make_ready", false]], "maps (corrct.physics.attenuation.attenuationvolume attribute)": [[15, "corrct.physics.attenuation.AttenuationVolume.maps", false]], "mask_dims (corrct.struct_illum.maskcollection attribute)": [[29, "corrct.struct_illum.MaskCollection.mask_dims", false]], "mask_shape (corrct.models.volumegeometry property)": [[11, "corrct.models.VolumeGeometry.mask_shape", false]], "mask_support (corrct.struct_illum.maskcollection attribute)": [[29, "corrct.struct_illum.MaskCollection.mask_support", false]], "mask_type (corrct.struct_illum.maskcollection attribute)": [[29, "corrct.struct_illum.MaskCollection.mask_type", false]], "maskcollection (class in corrct.struct_illum)": [[29, "corrct.struct_illum.MaskCollection", false]], "maskgenerator (class in corrct.struct_illum)": [[29, "corrct.struct_illum.MaskGenerator", false]], "maskgeneratorbernoulli (class in corrct.struct_illum)": [[29, "corrct.struct_illum.MaskGeneratorBernoulli", false]], "maskgeneratorhalfgaussian (class in corrct.struct_illum)": [[29, "corrct.struct_illum.MaskGeneratorHalfGaussian", false]], "maskgeneratormura (class in corrct.struct_illum)": [[29, "corrct.struct_illum.MaskGeneratorMURA", false]], "maskgeneratorpoint (class in corrct.struct_illum)": [[29, "corrct.struct_illum.MaskGeneratorPoint", false]], "masks_dec (corrct.struct_illum.maskcollection attribute)": [[29, "corrct.struct_illum.MaskCollection.masks_dec", false]], "masks_enc (corrct.struct_illum.maskcollection attribute)": [[29, "corrct.struct_illum.MaskCollection.masks_enc", false]], "max_buckets (corrct.struct_illum.maskgenerator property)": [[29, "corrct.struct_illum.MaskGenerator.max_buckets", false]], "max_iterations (corrct.solvers.solutioninfo attribute)": [[28, "corrct.solvers.SolutionInfo.max_iterations", false]], "mc (corrct.struct_illum.projectorghostimaging attribute)": [[29, "corrct.struct_illum.ProjectorGhostImaging.mc", false]], "method (corrct.solvers.solutioninfo attribute)": [[28, "corrct.solvers.SolutionInfo.method", false]], "mlem (class in corrct.solvers)": [[28, "corrct.solvers.MLEM", false]], "module": [[2, "module-corrct", false], [3, "module-corrct._projector_backends", false], [4, "module-corrct.alignment", false], [5, "module-corrct.alignment.centering", false], [6, "module-corrct.alignment.fitting", false], [7, "module-corrct.alignment.shifts", false], [8, "module-corrct.data_terms", false], [9, "module-corrct.denoisers", false], [10, "module-corrct.filters", false], [11, "module-corrct.models", false], [12, "module-corrct.operators", false], [13, "module-corrct.param_tuning", false], [14, "module-corrct.physics", false], [15, "module-corrct.physics.attenuation", false], [16, "module-corrct.physics.materials", false], [17, "module-corrct.physics.phase", false], [18, "module-corrct.physics.units", false], [19, "module-corrct.physics.xraylib_helper", false], [20, "module-corrct.physics.xrf", false], [21, "module-corrct.processing", false], [22, "module-corrct.processing.misc", false], [23, "module-corrct.processing.noise", false], [24, "module-corrct.processing.post", false], [25, "module-corrct.processing.pre", false], [26, "module-corrct.projectors", false], [27, "module-corrct.regularizers", false], [28, "module-corrct.solvers", false], [29, "module-corrct.struct_illum", false], [30, "module-corrct.testing", false]], "name (corrct.physics.xrf.fluoline attribute)": [[20, "corrct.physics.xrf.FluoLine.name", false]], "ndarrayfloat (in module corrct.alignment.fitting)": [[6, "corrct.alignment.fitting.NDArrayFloat", false]], "ndarrayfloat (in module corrct.alignment.shifts)": [[7, "corrct.alignment.shifts.NDArrayFloat", false]], "ndarrayfloat (in module corrct.data_terms)": [[8, "corrct.data_terms.NDArrayFloat", false]], "ndarrayfloat (in module corrct.param_tuning)": [[13, "corrct.param_tuning.NDArrayFloat", false]], "ndarrayfloat (in module corrct.physics.attenuation)": [[15, "corrct.physics.attenuation.NDArrayFloat", false]], "ndarrayfloat (in module corrct.solvers)": [[28, "corrct.solvers.NDArrayFloat", false]], "ndarrayfloat (in module corrct.testing)": [[30, "corrct.testing.NDArrayFloat", false]], "ndarrayint (in module corrct.operators)": [[12, "corrct.operators.NDArrayInt", false]], "ndarrayint (in module corrct.physics.attenuation)": [[15, "corrct.physics.attenuation.NDArrayInt", false]], "ndarrayint (in module corrct.processing.misc)": [[22, "corrct.processing.misc.NDArrayInt", false]], "ndarrayint (in module corrct.regularizers)": [[27, "corrct.regularizers.NDArrayInt", false]], "ndarrayint (in module corrct.struct_illum)": [[29, "corrct.struct_illum.NDArrayInt", false]], "ndim (corrct.models.projectiongeometry property)": [[11, "corrct.models.ProjectionGeometry.ndim", false]], "norm (corrct.filters.basisoptionswavelets attribute)": [[10, "corrct.filters.BasisOptionsWavelets.norm", false]], "norm_cross_corr() (in module corrct.processing.misc)": [[22, "corrct.processing.misc.norm_cross_corr", false]], "normalized (corrct.filters.basisoptionsblocks attribute)": [[10, "corrct.filters.BasisOptionsBlocks.normalized", false]], "num_buckets (corrct.struct_illum.maskcollection property)": [[29, "corrct.struct_illum.MaskCollection.num_buckets", false]], "num_filters (corrct.filters.filter property)": [[10, "corrct.filters.Filter.num_filters", false]], "num_pixels (corrct.struct_illum.maskcollection property)": [[29, "corrct.struct_illum.MaskCollection.num_pixels", false]], "num_pixels (corrct.struct_illum.maskgenerator property)": [[29, "corrct.struct_illum.MaskGenerator.num_pixels", false]], "num_threads (in module corrct.param_tuning)": [[13, "corrct.param_tuning.num_threads", false]], "num_threads (in module corrct.physics.attenuation)": [[15, "corrct.physics.attenuation.num_threads", false]], "num_threads (in module corrct.projectors)": [[26, "corrct.projectors.num_threads", false]], "op (corrct.regularizers.baseregularizer attribute)": [[27, "corrct.regularizers.BaseRegularizer.op", false]], "order (corrct.filters.basisoptionsblocks attribute)": [[10, "corrct.filters.BasisOptionsBlocks.order", false]], "order_to_str (corrct.physics.units.conversionenergy attribute)": [[18, "corrct.physics.units.ConversionEnergy.order_to_str", false]], "order_to_str (corrct.physics.units.conversionmetric attribute)": [[18, "corrct.physics.units.ConversionMetric.order_to_str", false]], "pad_mode (corrct.filters.filter attribute)": [[10, "corrct.filters.Filter.pad_mode", false]], "pad_mode (corrct.operators.transformconvolution attribute)": [[12, "corrct.operators.TransformConvolution.pad_mode", false]], "pad_sinogram() (in module corrct.processing.pre)": [[25, "corrct.processing.pre.pad_sinogram", false]], "pdhg (class in corrct.solvers)": [[28, "corrct.solvers.PDHG", false]], "pencil_beam_profile() (in module corrct.physics)": [[14, "corrct.physics.pencil_beam_profile", false]], "phantom_assign_concentration() (in module corrct.testing)": [[30, "corrct.testing.phantom_assign_concentration", false]], "phantom_assign_concentration_multi() (in module corrct.testing)": [[30, "corrct.testing.phantom_assign_concentration_multi", false]], "pix2vox_ratio (corrct.models.projectiongeometry attribute)": [[11, "corrct.models.ProjectionGeometry.pix2vox_ratio", false]], "plot_emission_line_attenuation() (in module corrct.physics.attenuation)": [[15, "corrct.physics.attenuation.plot_emission_line_attenuation", false]], "plot_filter_responses() (in module corrct.physics.phase)": [[17, "corrct.physics.phase.plot_filter_responses", false]], "plot_filters() (corrct.filters.filter method)": [[10, "corrct.filters.Filter.plot_filters", false]], "plot_frcs() (in module corrct.processing.post)": [[24, "corrct.processing.post.plot_frcs", false]], "plot_map() (corrct.physics.attenuation.attenuationvolume method)": [[15, "corrct.physics.attenuation.AttenuationVolume.plot_map", false]], "plot_transmittance_decay() (in module corrct.physics.attenuation)": [[15, "corrct.physics.attenuation.plot_transmittance_decay", false]], "power_method() (corrct.solvers.pdhg method)": [[28, "corrct.solvers.PDHG.power_method", false]], "power_spectrum() (in module corrct.processing.post)": [[24, "corrct.processing.post.power_spectrum", false]], "prj_intensities (corrct.projectors.projectoruncorrected attribute)": [[26, "corrct.projectors.ProjectorUncorrected.prj_intensities", false]], "prj_shape (corrct.operators.projectoroperator property)": [[12, "corrct.operators.ProjectorOperator.prj_shape", false]], "prj_shape_vu (corrct._projector_backends.projectorbackend attribute)": [[3, "corrct._projector_backends.ProjectorBackend.prj_shape_vu", false]], "prj_shape_vwu (corrct._projector_backends.projectorbackend attribute)": [[3, "corrct._projector_backends.ProjectorBackend.prj_shape_vwu", false]], "proj_geom_all (corrct._projector_backends.projectorbackendastra attribute)": [[3, "corrct._projector_backends.ProjectorBackendASTRA.proj_geom_all", false]], "proj_geom_ind (corrct._projector_backends.projectorbackendastra attribute)": [[3, "corrct._projector_backends.ProjectorBackendASTRA.proj_geom_ind", false]], "proj_id (corrct._projector_backends.projectorbackendastra attribute)": [[3, "corrct._projector_backends.ProjectorBackendASTRA.proj_id", false]], "project_displacement_to_detector() (corrct.models.projectiongeometry method)": [[11, "corrct.models.ProjectionGeometry.project_displacement_to_detector", false]], "projectiongeometry (class in corrct.models)": [[11, "corrct.models.ProjectionGeometry", false]], "projector (corrct.filters.filtermr attribute)": [[10, "corrct.filters.FilterMR.projector", false]], "projector_backend (corrct.projectors.projectoruncorrected attribute)": [[26, "corrct.projectors.ProjectorUncorrected.projector_backend", false]], "projectorattenuationxrf (class in corrct.projectors)": [[26, "corrct.projectors.ProjectorAttenuationXRF", false]], "projectorbackend (class in corrct._projector_backends)": [[3, "corrct._projector_backends.ProjectorBackend", false]], "projectorbackendastra (class in corrct._projector_backends)": [[3, "corrct._projector_backends.ProjectorBackendASTRA", false]], "projectorbackenddirectastra (class in corrct._projector_backends)": [[3, "corrct._projector_backends.ProjectorBackendDirectASTRA", false]], "projectorbackendskimage (class in corrct._projector_backends)": [[3, "corrct._projector_backends.ProjectorBackendSKimage", false]], "projectorghostimaging (class in corrct.struct_illum)": [[29, "corrct.struct_illum.ProjectorGhostImaging", false]], "projectormatrix (class in corrct.projectors)": [[26, "corrct.projectors.ProjectorMatrix", false]], "projectoroperator (class in corrct.operators)": [[12, "corrct.operators.ProjectorOperator", false]], "projectoruncorrected (class in corrct.projectors)": [[26, "corrct.projectors.ProjectorUncorrected", false]], "psf (corrct.projectors.projectoruncorrected attribute)": [[26, "corrct.projectors.ProjectorUncorrected.psf", false]], "recentervolume (class in corrct.alignment.centering)": [[5, "corrct.alignment.centering.RecenterVolume", false]], "recentervolume (in module corrct.alignment)": [[4, "corrct.alignment.RecenterVolume", false]], "refine_max_position_1d() (in module corrct.alignment.fitting)": [[6, "corrct.alignment.fitting.refine_max_position_1d", false]], "refine_max_position_2d() (in module corrct.alignment.fitting)": [[6, "corrct.alignment.fitting.refine_max_position_2d", false]], "regularizer_dwl (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_dwl", false]], "regularizer_fft (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_fft", false]], "regularizer_grad (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_Grad", false]], "regularizer_hub_dwl (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_Hub_dwl", false]], "regularizer_hub_swl (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_Hub_swl", false]], "regularizer_hubtv2d (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_HubTV2D", false]], "regularizer_hubtv3d (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_HubTV3D", false]], "regularizer_l1 (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_l1", false]], "regularizer_l12dwl (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_l12dwl", false]], "regularizer_l12swl (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_l12swl", false]], "regularizer_l1dwl (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_l1dwl", false]], "regularizer_l1med (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_l1med", false]], "regularizer_l1swl (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_l1swl", false]], "regularizer_l2med (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_l2med", false]], "regularizer_lap (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_lap", false]], "regularizer_lap1d (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_lap1D", false]], "regularizer_lap2d (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_lap2D", false]], "regularizer_lap3d (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_lap3D", false]], "regularizer_lnswl (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_lnswl", false]], "regularizer_smooth1d (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_smooth1D", false]], "regularizer_smooth2d (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_smooth2D", false]], "regularizer_smooth3d (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_smooth3D", false]], "regularizer_swl (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_swl", false]], "regularizer_tnv (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_TNV", false]], "regularizer_tv1d (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_TV1D", false]], "regularizer_tv2d (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_TV2D", false]], "regularizer_tv3d (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_TV3D", false]], "regularizer_vl1wl (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_vl1wl", false]], "regularizer_vsvd (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_vSVD", false]], "regularizer_vtv (class in corrct.regularizers)": [[27, "corrct.regularizers.Regularizer_VTV", false]], "reorder_masks() (in module corrct.struct_illum)": [[29, "corrct.struct_illum.reorder_masks", false]], "rescale (corrct.operators.transformsvd attribute)": [[12, "corrct.operators.TransformSVD.rescale", false]], "residual0 (corrct.solvers.solutioninfo attribute)": [[28, "corrct.solvers.SolutionInfo.residual0", false]], "residual0_cv (corrct.solvers.solutioninfo attribute)": [[28, "corrct.solvers.SolutionInfo.residual0_cv", false]], "residuals (corrct.solvers.solutioninfo attribute)": [[28, "corrct.solvers.SolutionInfo.residuals", false]], "residuals_cv (corrct.solvers.solutioninfo attribute)": [[28, "corrct.solvers.SolutionInfo.residuals_cv", false]], "residuals_cv_rel (corrct.solvers.solutioninfo property)": [[28, "corrct.solvers.SolutionInfo.residuals_cv_rel", false]], "residuals_rel (corrct.solvers.solutioninfo property)": [[28, "corrct.solvers.SolutionInfo.residuals_rel", false]], "rmatvec() (corrct.operators.basetransform method)": [[12, "corrct.operators.BaseTransform.rmatvec", false]], "rot_dir_xyz (corrct.models.projectiongeometry attribute)": [[11, "corrct.models.ProjectionGeometry.rot_dir_xyz", false]], "rot_dirs_valid (in module corrct.models)": [[11, "corrct.models.ROT_DIRS_VALID", false]], "rotate() (corrct.models.projectiongeometry method)": [[11, "corrct.models.ProjectionGeometry.rotate", false]], "rotate_proj_stack() (in module corrct.processing.pre)": [[25, "corrct.processing.pre.rotate_proj_stack", false]], "roundup_to_pow2() (in module corrct.testing)": [[30, "corrct.testing.roundup_to_pow2", false]], "sart (class in corrct.solvers)": [[28, "corrct.solvers.SART", false]], "scale (corrct.operators.transformdiagonalscaling attribute)": [[12, "corrct.operators.TransformDiagonalScaling.scale", false]], "set_detector_shape_vu() (corrct.models.projectiongeometry method)": [[11, "corrct.models.ProjectionGeometry.set_detector_shape_vu", false]], "set_detector_shifts_vu() (corrct.models.projectiongeometry method)": [[11, "corrct.models.ProjectionGeometry.set_detector_shifts_vu", false]], "set_detector_tilt() (corrct.models.projectiongeometry method)": [[11, "corrct.models.ProjectionGeometry.set_detector_tilt", false]], "set_source_shifts_vu() (corrct.models.projectiongeometry method)": [[11, "corrct.models.ProjectionGeometry.set_source_shifts_vu", false]], "shape_fov (corrct.struct_illum.maskcollection property)": [[29, "corrct.struct_illum.MaskCollection.shape_fov", false]], "shape_fov (corrct.struct_illum.maskgenerator attribute)": [[29, "corrct.struct_illum.MaskGenerator.shape_fov", false]], "shape_mask (corrct.struct_illum.maskgenerator attribute)": [[29, "corrct.struct_illum.MaskGenerator.shape_mask", false]], "shape_shifts (corrct.struct_illum.maskcollection property)": [[29, "corrct.struct_illum.MaskCollection.shape_shifts", false]], "shape_shifts (corrct.struct_illum.maskgenerator attribute)": [[29, "corrct.struct_illum.MaskGenerator.shape_shifts", false]], "shape_xyz (corrct.models.volumegeometry property)": [[11, "corrct.models.VolumeGeometry.shape_xyz", false]], "shape_zxy (corrct.models.volumegeometry property)": [[11, "corrct.models.VolumeGeometry.shape_zxy", false]], "shift_proj_stack() (in module corrct.processing.pre)": [[25, "corrct.processing.pre.shift_proj_stack", false]], "sigma (corrct.data_terms.datafidelitybase attribute)": [[8, "corrct.data_terms.DataFidelityBase.sigma", false]], "sigma (corrct.regularizers.baseregularizer attribute)": [[27, "corrct.regularizers.BaseRegularizer.sigma", false]], "sigma_data (corrct.data_terms.datafidelitybase attribute)": [[8, "corrct.data_terms.DataFidelityBase.sigma_data", false]], "sinusoid() (in module corrct.alignment.fitting)": [[6, "corrct.alignment.fitting.sinusoid", false]], "sirt (class in corrct.solvers)": [[28, "corrct.solvers.SIRT", false]], "solid_angle_sr (corrct.physics.xrf.detectorxrf property)": [[20, "corrct.physics.xrf.DetectorXRF.solid_angle_sr", false]], "solutioninfo (class in corrct.solvers)": [[28, "corrct.solvers.SolutionInfo", false]], "solver (class in corrct.solvers)": [[28, "corrct.solvers.Solver", false]], "solver_calling_function (corrct.param_tuning.baseparametertuning property)": [[13, "corrct.param_tuning.BaseParameterTuning.solver_calling_function", false]], "solver_spawning_function (corrct.param_tuning.baseparametertuning property)": [[13, "corrct.param_tuning.BaseParameterTuning.solver_spawning_function", false]], "src_pos_xyz (corrct.models.projectiongeometry attribute)": [[11, "corrct.models.ProjectionGeometry.src_pos_xyz", false]], "str_to_order (corrct.physics.units.conversionenergy attribute)": [[18, "corrct.physics.units.ConversionEnergy.str_to_order", false]], "str_to_order (corrct.physics.units.conversionmetric attribute)": [[18, "corrct.physics.units.ConversionMetric.str_to_order", false]], "surface_mm2 (corrct.physics.xrf.detectorxrf attribute)": [[20, "corrct.physics.xrf.DetectorXRF.surface_mm2", false]], "to_com() (corrct.alignment.centering.recentervolume method)": [[5, "corrct.alignment.centering.RecenterVolume.to_com", false]], "to_fourier() (corrct.filters.filter method)": [[10, "corrct.filters.Filter.to_fourier", false]], "to_real() (corrct.filters.filter method)": [[10, "corrct.filters.Filter.to_real", false]], "tolerance (corrct.solvers.solutioninfo attribute)": [[28, "corrct.solvers.SolutionInfo.tolerance", false]], "transformconvolution (class in corrct.operators)": [[12, "corrct.operators.TransformConvolution", false]], "transformdecimatedwavelet (class in corrct.operators)": [[12, "corrct.operators.TransformDecimatedWavelet", false]], "transformdiagonalscaling (class in corrct.operators)": [[12, "corrct.operators.TransformDiagonalScaling", false]], "transformfourier (class in corrct.operators)": [[12, "corrct.operators.TransformFourier", false]], "transformfunctions (class in corrct.operators)": [[12, "corrct.operators.TransformFunctions", false]], "transformgradient (class in corrct.operators)": [[12, "corrct.operators.TransformGradient", false]], "transformidentity (class in corrct.operators)": [[12, "corrct.operators.TransformIdentity", false]], "transformlaplacian (class in corrct.operators)": [[12, "corrct.operators.TransformLaplacian", false]], "transformstationarywavelet (class in corrct.operators)": [[12, "corrct.operators.TransformStationaryWavelet", false]], "transformsvd (class in corrct.operators)": [[12, "corrct.operators.TransformSVD", false]], "transmittance (corrct.struct_illum.maskgenerator attribute)": [[29, "corrct.struct_illum.MaskGenerator.transmittance", false]], "u (corrct.operators.transformsvd attribute)": [[12, "corrct.operators.TransformSVD.U", false]], "upd_mask (corrct.regularizers.baseregularizer attribute)": [[27, "corrct.regularizers.BaseRegularizer.upd_mask", false]], "update_dual() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase.update_dual", false]], "update_dual() (corrct.regularizers.baseregularizer method)": [[27, "corrct.regularizers.BaseRegularizer.update_dual", false]], "update_dual() (corrct.regularizers.baseregularizer_med method)": [[27, "corrct.regularizers.BaseRegularizer_med.update_dual", false]], "update_dual() (corrct.regularizers.constraint_lowerlimit method)": [[27, "corrct.regularizers.Constraint_LowerLimit.update_dual", false]], "update_dual() (corrct.regularizers.constraint_upperlimit method)": [[27, "corrct.regularizers.Constraint_UpperLimit.update_dual", false]], "update_dual() (corrct.regularizers.regularizer_dwl method)": [[27, "corrct.regularizers.Regularizer_dwl.update_dual", false]], "update_dual() (corrct.regularizers.regularizer_l1 method)": [[27, "corrct.regularizers.Regularizer_l1.update_dual", false]], "update_dual() (corrct.regularizers.regularizer_swl method)": [[27, "corrct.regularizers.Regularizer_swl.update_dual", false]], "upper() (corrct.data_terms.datafidelitybase method)": [[8, "corrct.data_terms.DataFidelityBase.upper", false]], "upper() (corrct.regularizers.baseregularizer method)": [[27, "corrct.regularizers.BaseRegularizer.upper", false]], "upper() (corrct.solvers.solver method)": [[28, "corrct.solvers.Solver.upper", false]], "upper() (corrct.struct_illum.maskcollection method)": [[29, "corrct.struct_illum.MaskCollection.upper", false]], "use_rfft (corrct.filters.filter attribute)": [[10, "corrct.filters.Filter.use_rfft", false]], "vol_geom (corrct._projector_backends.projectorbackend attribute)": [[3, "corrct._projector_backends.ProjectorBackend.vol_geom", false]], "vol_geom (corrct.projectors.projectoruncorrected attribute)": [[26, "corrct.projectors.ProjectorUncorrected.vol_geom", false]], "vol_shape (corrct.operators.projectoroperator property)": [[12, "corrct.operators.ProjectorOperator.vol_shape", false]], "vol_shape_zxy (corrct._projector_backends.projectorbackend attribute)": [[3, "corrct._projector_backends.ProjectorBackend.vol_shape_zxy", false]], "vol_shape_zyx (corrct.physics.attenuation.attenuationvolume attribute)": [[15, "corrct.physics.attenuation.AttenuationVolume.vol_shape_zyx", false]], "volumegeometry (class in corrct.models)": [[11, "corrct.models.VolumeGeometry", false]], "volumematerial (class in corrct.physics.materials)": [[16, "corrct.physics.materials.VolumeMaterial", false]], "volumematerial (in module corrct.physics)": [[14, "corrct.physics.VolumeMaterial", false]], "vox_size (corrct.models.volumegeometry attribute)": [[11, "corrct.models.VolumeGeometry.vox_size", false]], "vt (corrct.operators.transformsvd attribute)": [[12, "corrct.operators.TransformSVD.Vt", false]], "wavelet (corrct.filters.basisoptionswavelets attribute)": [[10, "corrct.filters.BasisOptionsWavelets.wavelet", false]], "wavelet (corrct.operators.basewavelettransform attribute)": [[12, "corrct.operators.BaseWaveletTransform.wavelet", false]], "weight (corrct.regularizers.baseregularizer attribute)": [[27, "corrct.regularizers.BaseRegularizer.weight", false]], "wlength_to_energy() (in module corrct.physics.units)": [[18, "corrct.physics.units.wlength_to_energy", false]], "wlet_dec_filter_mult (corrct.operators.basewavelettransform attribute)": [[12, "corrct.operators.BaseWaveletTransform.wlet_dec_filter_mult", false]], "wlet_rec_filter_mult (corrct.operators.basewavelettransform attribute)": [[12, "corrct.operators.BaseWaveletTransform.wlet_rec_filter_mult", false]], "xraylib (in module corrct.physics)": [[14, "corrct.physics.xraylib", false]]}, "objects": {"": [[2, 0, 0, "-", "corrct"]], "corrct": [[2, 1, 1, "", "__author__"], [2, 1, 1, "", "__email__"], [2, 1, 1, "", "__version__"], [3, 0, 0, "-", "_projector_backends"], [4, 0, 0, "-", "alignment"], [8, 0, 0, "-", "data_terms"], [9, 0, 0, "-", "denoisers"], [10, 0, 0, "-", "filters"], [2, 5, 1, "", "get_version"], [11, 0, 0, "-", "models"], [12, 0, 0, "-", "operators"], [13, 0, 0, "-", "param_tuning"], [14, 0, 0, "-", "physics"], [21, 0, 0, "-", "processing"], [26, 0, 0, "-", "projectors"], [27, 0, 0, "-", "regularizers"], [28, 0, 0, "-", "solvers"], [29, 0, 0, "-", "struct_illum"], [30, 0, 0, "-", "testing"]], "corrct._projector_backends": [[3, 2, 1, "", "ProjectorBackend"], [3, 2, 1, "", "ProjectorBackendASTRA"], [3, 2, 1, "", "ProjectorBackendDirectASTRA"], [3, 2, 1, "", "ProjectorBackendSKimage"], [3, 5, 1, "", "compute_attenuation"]], "corrct._projector_backends.ProjectorBackend": [[3, 3, 1, "", "__del__"], [3, 3, 1, "", "__repr__"], [3, 4, 1, "", "angles_w_rad"], [3, 3, 1, "", "bp"], [3, 3, 1, "", "dispose"], [3, 3, 1, "", "fp"], [3, 3, 1, "", "get_prj_shape"], [3, 3, 1, "", "get_vol_shape"], [3, 3, 1, "", "initialize_geometry"], [3, 4, 1, "", "is_initialized"], [3, 4, 1, "", "is_ready"], [3, 3, 1, "", "make_ready"], [3, 4, 1, "", "prj_shape_vu"], [3, 4, 1, "", "prj_shape_vwu"], [3, 4, 1, "", "vol_geom"], [3, 4, 1, "", "vol_shape_zxy"]], "corrct._projector_backends.ProjectorBackendASTRA": [[3, 3, 1, "", "_check_data"], [3, 3, 1, "", "_check_prj_shape"], [3, 4, 1, "", "astra_vol_geom"], [3, 3, 1, "", "bp"], [3, 3, 1, "", "dispose"], [3, 3, 1, "", "fp"], [3, 3, 1, "", "initialize_geometry"], [3, 3, 1, "", "make_ready"], [3, 4, 1, "", "proj_geom_all"], [3, 4, 1, "", "proj_geom_ind"], [3, 4, 1, "", "proj_id"]], "corrct._projector_backends.ProjectorBackendDirectASTRA": [[3, 4, 1, "", "angle_prj_shape"], [3, 4, 1, "", "astra_angle_prj_shape"], [3, 4, 1, "", "astra_prj_shape"], [3, 4, 1, "", "astra_vol_shape"], [3, 3, 1, "", "bp"], [3, 3, 1, "", "fp"], [3, 3, 1, "", "initialize_geometry"], [3, 3, 1, "", "make_ready"]], "corrct._projector_backends.ProjectorBackendSKimage": [[3, 3, 1, "", "_set_bpj_size"], [3, 3, 1, "", "_set_filter_name"], [3, 3, 1, "", "bp"], [3, 3, 1, "", "fp"], [3, 3, 1, "", "initialize_geometry"]], "corrct.alignment": [[4, 1, 1, "", "DetectorShiftsPRE"], [4, 1, 1, "", "DetectorShiftsXC"], [4, 1, 1, "", "RecenterVolume"], [4, 1, 1, "", "__author__"], [4, 1, 1, "", "__email__"], [5, 0, 0, "-", "centering"], [6, 0, 0, "-", "fitting"], [7, 0, 0, "-", "shifts"]], "corrct.alignment.centering": [[5, 2, 1, "", "RecenterVolume"]], "corrct.alignment.centering.RecenterVolume": [[5, 3, 1, "", "_apply_displacement_vu"], [5, 3, 1, "", "as_reference"], [5, 3, 1, "", "to_com"]], "corrct.alignment.fitting": [[6, 1, 1, "", "NDArrayFloat"], [6, 1, 1, "", "eps"], [6, 5, 1, "", "extract_peak_region_nd"], [6, 5, 1, "", "extract_peak_regions_1d"], [6, 5, 1, "", "fit_camera_tilt_angle"], [6, 5, 1, "", "fit_image_rotation_and_scale"], [6, 5, 1, "", "fit_shifts_u_sad"], [6, 5, 1, "", "fit_shifts_vu_xc"], [6, 5, 1, "", "fit_shifts_zyx_xc"], [6, 5, 1, "", "fit_sinusoid"], [6, 5, 1, "", "refine_max_position_1d"], [6, 5, 1, "", "refine_max_position_2d"], [6, 5, 1, "", "sinusoid"]], "corrct.alignment.shifts": [[7, 2, 1, "", "DetectorShiftsBase"], [7, 2, 1, "", "DetectorShiftsPRE"], [7, 2, 1, "", "DetectorShiftsXC"], [7, 1, 1, "", "NDArrayFloat"], [7, 5, 1, "", "_filter_shifts"], [7, 1, 1, "", "eps"]], "corrct.alignment.shifts.DetectorShiftsBase": [[7, 4, 1, "", "angles_rad"], [7, 4, 1, "", "data_vwu"]], "corrct.alignment.shifts.DetectorShiftsPRE": [[7, 3, 1, "", "fit_u"], [7, 3, 1, "", "fit_v"]], "corrct.alignment.shifts.DetectorShiftsXC": [[7, 3, 1, "", "find_shifts_vu"], [7, 3, 1, "", "fit_u_180"], [7, 3, 1, "", "fit_u_360"], [7, 3, 1, "", "fit_vu"], [7, 3, 1, "", "fit_vu_accum_drifts"]], "corrct.data_terms": [[8, 2, 1, "", "DataFidelityBase"], [8, 2, 1, "", "DataFidelity_Huber"], [8, 2, 1, "", "DataFidelity_KL"], [8, 2, 1, "", "DataFidelity_l1"], [8, 2, 1, "", "DataFidelity_l12"], [8, 2, 1, "", "DataFidelity_l1b"], [8, 2, 1, "", "DataFidelity_l2"], [8, 2, 1, "", "DataFidelity_l2b"], [8, 2, 1, "", "DataFidelity_ln"], [8, 2, 1, "", "DataFidelity_wl2"], [8, 1, 1, "", "NDArrayFloat"], [8, 5, 1, "", "_soft_threshold"], [8, 1, 1, "", "eps"]], "corrct.data_terms.DataFidelityBase": [[8, 4, 1, "", "__data_fidelity_name__"], [8, 3, 1, "", "__getitem__"], [8, 3, 1, "", "_compute_sigma_data"], [8, 3, 1, "", "_slice_attr"], [8, 3, 1, "", "apply_proximal"], [8, 3, 1, "", "assign_data"], [8, 4, 1, "", "background"], [8, 3, 1, "", "compute_data_dual_dot"], [8, 3, 1, "", "compute_primal_dual_gap"], [8, 3, 1, "", "compute_residual"], [8, 3, 1, "", "compute_residual_norm"], [8, 4, 1, "", "data"], [8, 3, 1, "", "info"], [8, 3, 1, "", "initialize_dual"], [8, 3, 1, "", "lower"], [8, 4, 1, "", "sigma"], [8, 4, 1, "", "sigma_data"], [8, 3, 1, "", "update_dual"], [8, 3, 1, "", "upper"]], "corrct.data_terms.DataFidelity_Huber": [[8, 4, 1, "", "__data_fidelity_name__"], [8, 3, 1, "", "apply_proximal"], [8, 3, 1, "", "assign_data"], [8, 3, 1, "", "compute_primal_dual_gap"], [8, 3, 1, "", "compute_residual_norm"]], "corrct.data_terms.DataFidelity_KL": [[8, 4, 1, "", "__data_fidelity_name__"], [8, 3, 1, "", "_compute_sigma_data"], [8, 3, 1, "", "apply_proximal"], [8, 3, 1, "", "compute_primal_dual_gap"], [8, 3, 1, "", "compute_residual"], [8, 3, 1, "", "compute_residual_norm"]], "corrct.data_terms.DataFidelity_l1": [[8, 4, 1, "", "__data_fidelity_name__"], [8, 3, 1, "", "_apply_threshold"], [8, 3, 1, "", "_get_inner_norm"], [8, 3, 1, "", "apply_proximal"], [8, 3, 1, "", "compute_primal_dual_gap"], [8, 3, 1, "", "compute_residual_norm"]], "corrct.data_terms.DataFidelity_l12": [[8, 4, 1, "", "__data_fidelity_name__"], [8, 3, 1, "", "_get_inner_norm"]], "corrct.data_terms.DataFidelity_l1b": [[8, 4, 1, "", "__data_fidelity_name__"], [8, 3, 1, "", "_apply_threshold"], [8, 3, 1, "", "assign_data"]], "corrct.data_terms.DataFidelity_l2": [[8, 4, 1, "", "__data_fidelity_name__"], [8, 3, 1, "", "apply_proximal"], [8, 3, 1, "", "assign_data"], [8, 3, 1, "", "compute_primal_dual_gap"], [8, 3, 1, "", "compute_residual_norm"]], "corrct.data_terms.DataFidelity_l2b": [[8, 4, 1, "", "__data_fidelity_name__"], [8, 3, 1, "", "apply_proximal"], [8, 3, 1, "", "assign_data"], [8, 3, 1, "", "compute_primal_dual_gap"], [8, 3, 1, "", "compute_residual"]], "corrct.data_terms.DataFidelity_ln": [[8, 4, 1, "", "__data_fidelity_name__"], [8, 3, 1, "", "apply_proximal"], [8, 3, 1, "", "compute_primal_dual_gap"], [8, 3, 1, "", "compute_residual_norm"]], "corrct.data_terms.DataFidelity_wl2": [[8, 4, 1, "", "__data_fidelity_name__"], [8, 3, 1, "", "assign_data"], [8, 3, 1, "", "compute_residual"], [8, 3, 1, "", "compute_residual_norm"]], "corrct.denoisers": [[9, 5, 1, "", "_default_regularizer_l1dwl"], [9, 5, 1, "", "denoise_image"], [9, 1, 1, "", "eps"]], "corrct.filters": [[10, 2, 1, "", "BasisOptions"], [10, 2, 1, "", "BasisOptionsBlocks"], [10, 2, 1, "", "BasisOptionsWavelets"], [10, 2, 1, "", "Filter"], [10, 2, 1, "", "FilterCustom"], [10, 2, 1, "", "FilterFBP"], [10, 2, 1, "", "FilterMR"], [10, 5, 1, "", "create_basis"], [10, 5, 1, "", "create_basis_wavelet"]], "corrct.filters.BasisOptions": [[10, 3, 1, "", "__getitem__"], [10, 3, 1, "", "__iter__"], [10, 3, 1, "", "__len__"]], "corrct.filters.BasisOptionsBlocks": [[10, 4, 1, "", "binning_start"], [10, 4, 1, "", "binning_type"], [10, 4, 1, "", "normalized"], [10, 4, 1, "", "order"]], "corrct.filters.BasisOptionsWavelets": [[10, 4, 1, "", "level"], [10, 4, 1, "", "norm"], [10, 4, 1, "", "wavelet"]], "corrct.filters.Filter": [[10, 3, 1, "", "__call__"], [10, 3, 1, "", "apply_filter"], [10, 3, 1, "", "compute_filter"], [10, 4, 1, "", "dtype"], [10, 4, 1, "", "fbp_filter"], [10, 6, 1, "", "filter_fourier"], [10, 6, 1, "", "filter_real"], [10, 3, 1, "", "get_padding_size"], [10, 6, 1, "", "num_filters"], [10, 4, 1, "", "pad_mode"], [10, 3, 1, "", "plot_filters"], [10, 3, 1, "", "to_fourier"], [10, 3, 1, "", "to_real"], [10, 4, 1, "", "use_rfft"]], "corrct.filters.FilterCustom": [[10, 3, 1, "", "compute_filter"]], "corrct.filters.FilterFBP": [[10, 4, 1, "", "FILTERS"], [10, 3, 1, "", "compute_filter"], [10, 4, 1, "", "filter_name"], [10, 3, 1, "", "get_available_filters"]], "corrct.filters.FilterMR": [[10, 4, 1, "", "binning_start"], [10, 4, 1, "", "binning_type"], [10, 3, 1, "", "compute_filter"], [10, 3, 1, "", "initialize"], [10, 4, 1, "", "is_initialized"], [10, 4, 1, "", "lambda_smooth"], [10, 4, 1, "", "projector"]], "corrct.models": [[11, 2, 1, "", "Geometry"], [11, 2, 1, "", "ProjectionGeometry"], [11, 1, 1, "", "ROT_DIRS_VALID"], [11, 2, 1, "", "VolumeGeometry"], [11, 5, 1, "", "_get_data_dims"], [11, 5, 1, "", "combine_shifts_vu"], [11, 5, 1, "", "get_prj_geom_cone"], [11, 5, 1, "", "get_prj_geom_parallel"], [11, 5, 1, "", "get_rot_axis_dir"], [11, 5, 1, "", "get_vol_geom_from_data"], [11, 5, 1, "", "get_vol_geom_from_volume"]], "corrct.models.Geometry": [[11, 3, 1, "", "__str__"]], "corrct.models.ProjectionGeometry": [[11, 3, 1, "", "__getitem__"], [11, 3, 1, "", "__post_init__"], [11, 3, 1, "", "copy"], [11, 4, 1, "", "det_pos_xyz"], [11, 4, 1, "", "det_shape_vu"], [11, 4, 1, "", "det_u_xyz"], [11, 4, 1, "", "det_v_xyz"], [11, 4, 1, "", "geom_type"], [11, 3, 1, "", "get_3d"], [11, 3, 1, "", "get_default_parallel"], [11, 3, 1, "", "get_field_scaled"], [11, 3, 1, "", "get_pre_weights"], [11, 6, 1, "", "ndim"], [11, 4, 1, "", "pix2vox_ratio"], [11, 3, 1, "", "project_displacement_to_detector"], [11, 4, 1, "", "rot_dir_xyz"], [11, 3, 1, "", "rotate"], [11, 3, 1, "", "set_detector_shape_vu"], [11, 3, 1, "", "set_detector_shifts_vu"], [11, 3, 1, "", "set_detector_tilt"], [11, 3, 1, "", "set_source_shifts_vu"], [11, 4, 1, "", "src_pos_xyz"]], "corrct.models.VolumeGeometry": [[11, 3, 1, "", "__post_init__"], [11, 4, 1, "", "_vol_shape_xyz"], [11, 6, 1, "", "extent"], [11, 3, 1, "", "get_3d"], [11, 3, 1, "", "get_default_from_data"], [11, 3, 1, "", "get_default_from_volume"], [11, 3, 1, "", "is_3D"], [11, 3, 1, "", "is_square"], [11, 6, 1, "", "mask_shape"], [11, 6, 1, "", "shape_xyz"], [11, 6, 1, "", "shape_zxy"], [11, 4, 1, "", "vox_size"]], "corrct.operators": [[12, 2, 1, "", "BaseTransform"], [12, 2, 1, "", "BaseWaveletTransform"], [12, 1, 1, "", "NDArrayInt"], [12, 2, 1, "", "ProjectorOperator"], [12, 2, 1, "", "TransformConvolution"], [12, 2, 1, "", "TransformDecimatedWavelet"], [12, 2, 1, "", "TransformDiagonalScaling"], [12, 2, 1, "", "TransformFourier"], [12, 2, 1, "", "TransformFunctions"], [12, 2, 1, "", "TransformGradient"], [12, 2, 1, "", "TransformIdentity"], [12, 2, 1, "", "TransformLaplacian"], [12, 2, 1, "", "TransformSVD"], [12, 2, 1, "", "TransformStationaryWavelet"]], "corrct.operators.BaseTransform": [[12, 3, 1, "", "__call__"], [12, 3, 1, "", "_adjoint"], [12, 3, 1, "", "_matvec"], [12, 3, 1, "", "_op_adjoint"], [12, 3, 1, "", "_op_direct"], [12, 3, 1, "", "_transpose"], [12, 3, 1, "", "absolute"], [12, 4, 1, "", "adj_shape"], [12, 4, 1, "", "dir_shape"], [12, 3, 1, "", "explicit"], [12, 3, 1, "", "rmatvec"]], "corrct.operators.BaseWaveletTransform": [[12, 3, 1, "", "_initialize_filter_bank"], [12, 4, 1, "", "axes"], [12, 4, 1, "", "labels"], [12, 4, 1, "", "wavelet"], [12, 4, 1, "", "wlet_dec_filter_mult"], [12, 4, 1, "", "wlet_rec_filter_mult"]], "corrct.operators.ProjectorOperator": [[12, 3, 1, "", "_op_adjoint"], [12, 3, 1, "", "_op_direct"], [12, 3, 1, "", "bp"], [12, 3, 1, "", "fp"], [12, 3, 1, "", "get_pre_weights"], [12, 6, 1, "", "prj_shape"], [12, 6, 1, "", "vol_shape"]], "corrct.operators.TransformConvolution": [[12, 3, 1, "", "_crop_valid"], [12, 3, 1, "", "_op_adjoint"], [12, 3, 1, "", "_op_direct"], [12, 3, 1, "", "_pad_valid"], [12, 3, 1, "", "absolute"], [12, 4, 1, "", "flip_adjoint"], [12, 4, 1, "", "is_symm"], [12, 4, 1, "", "kernel"], [12, 4, 1, "", "pad_mode"]], "corrct.operators.TransformDecimatedWavelet": [[12, 3, 1, "", "_op_adjoint"], [12, 3, 1, "", "_op_direct"], [12, 3, 1, "", "direct_dwt"], [12, 3, 1, "", "inverse_dwt"]], "corrct.operators.TransformDiagonalScaling": [[12, 3, 1, "", "_op_adjoint"], [12, 3, 1, "", "_op_direct"], [12, 3, 1, "", "absolute"], [12, 4, 1, "", "scale"]], "corrct.operators.TransformFourier": [[12, 3, 1, "", "_op_adjoint"], [12, 3, 1, "", "_op_direct"], [12, 3, 1, "", "fft"], [12, 3, 1, "", "ifft"]], "corrct.operators.TransformFunctions": [[12, 3, 1, "", "_op_adjoint"], [12, 3, 1, "", "_op_direct"], [12, 3, 1, "", "absolute"]], "corrct.operators.TransformGradient": [[12, 3, 1, "", "_op_adjoint"], [12, 3, 1, "", "_op_direct"], [12, 3, 1, "", "divergence"], [12, 3, 1, "", "gradient"]], "corrct.operators.TransformIdentity": [[12, 3, 1, "", "_op_adjoint"], [12, 3, 1, "", "_op_direct"]], "corrct.operators.TransformLaplacian": [[12, 3, 1, "", "_op_adjoint"], [12, 3, 1, "", "_op_direct"], [12, 3, 1, "", "laplacian"]], "corrct.operators.TransformSVD": [[12, 4, 1, "", "U"], [12, 4, 1, "", "Vt"], [12, 3, 1, "", "_op_adjoint"], [12, 3, 1, "", "_op_direct"], [12, 3, 1, "", "direct_svd"], [12, 3, 1, "", "inverse_svd"], [12, 4, 1, "", "rescale"]], "corrct.operators.TransformStationaryWavelet": [[12, 3, 1, "", "_op_adjoint"], [12, 3, 1, "", "_op_direct"], [12, 3, 1, "", "direct_swt"], [12, 3, 1, "", "inverse_swt"]], "corrct.param_tuning": [[13, 2, 1, "", "BaseParameterTuning"], [13, 2, 1, "", "CrossValidation"], [13, 2, 1, "", "LCurve"], [13, 1, 1, "", "NDArrayFloat"], [13, 5, 1, "", "create_random_test_mask"], [13, 5, 1, "", "fit_func_min"], [13, 5, 1, "", "get_lambda_range"], [13, 1, 1, "", "num_threads"]], "corrct.param_tuning.BaseParameterTuning": [[13, 4, 1, "", "_solver_calling_function"], [13, 4, 1, "", "_solver_spawning_functionls"], [13, 3, 1, "", "compute_loss_values"], [13, 3, 1, "", "compute_reconstruction_and_loss"], [13, 3, 1, "", "compute_reconstruction_error"], [13, 3, 1, "", "get_lambda_range"], [13, 6, 1, "", "solver_calling_function"], [13, 6, 1, "", "solver_spawning_function"]], "corrct.param_tuning.CrossValidation": [[13, 3, 1, "", "_create_random_test_mask"], [13, 3, 1, "", "compute_loss_values"], [13, 3, 1, "", "fit_loss_min"]], "corrct.param_tuning.LCurve": [[13, 3, 1, "", "compute_loss_values"]], "corrct.physics": [[14, 1, 1, "", "FluoLinesSiegbahn"], [14, 1, 1, "", "VolumeMaterial"], [14, 1, 1, "", "__author__"], [14, 1, 1, "", "__email__"], [15, 0, 0, "-", "attenuation"], [14, 1, 1, "", "convert_energy_to_wlength"], [14, 1, 1, "", "convert_wlength_to_energy"], [14, 1, 1, "", "get_compound"], [14, 1, 1, "", "get_element_number"], [16, 0, 0, "-", "materials"], [14, 5, 1, "", "pencil_beam_profile"], [17, 0, 0, "-", "phase"], [18, 0, 0, "-", "units"], [14, 1, 1, "", "xraylib"], [19, 0, 0, "-", "xraylib_helper"], [20, 0, 0, "-", "xrf"]], "corrct.physics.attenuation": [[15, 2, 1, "", "AttenuationVolume"], [15, 1, 1, "", "CONVERT_UM_TO_CM"], [15, 1, 1, "", "NDArrayFloat"], [15, 1, 1, "", "NDArrayInt"], [15, 5, 1, "", "get_linear_attenuation_coefficient"], [15, 1, 1, "", "num_threads"], [15, 5, 1, "", "plot_emission_line_attenuation"], [15, 5, 1, "", "plot_transmittance_decay"]], "corrct.physics.attenuation.AttenuationVolume": [[15, 3, 1, "", "_compute_attenuation_angle_in"], [15, 3, 1, "", "_compute_attenuation_angle_out"], [15, 4, 1, "", "angles_det_rad"], [15, 4, 1, "", "angles_rot_rad"], [15, 3, 1, "", "compute_maps"], [15, 4, 1, "", "dtype"], [15, 4, 1, "", "emitted_local"], [15, 3, 1, "", "get_maps"], [15, 3, 1, "", "get_projector_args"], [15, 4, 1, "", "incident_local"], [15, 4, 1, "", "maps"], [15, 3, 1, "", "plot_map"], [15, 4, 1, "", "vol_shape_zyx"]], "corrct.physics.materials": [[16, 2, 1, "", "VolumeMaterial"]], "corrct.physics.materials.VolumeMaterial": [[16, 3, 1, "", "_check_parallax_detector"], [16, 3, 1, "", "get_attenuation"], [16, 3, 1, "", "get_compton_scattering"], [16, 3, 1, "", "get_element_mass_fraction"], [16, 3, 1, "", "get_fluo_production"]], "corrct.physics.phase": [[17, 5, 1, "", "_ctf_freq_response"], [17, 5, 1, "", "_tie_freq_response"], [17, 5, 1, "", "apply_propagation_filter"], [17, 5, 1, "", "get_delta_beta"], [17, 5, 1, "", "get_delta_beta_curves"], [17, 5, 1, "", "get_propagation_filter"], [17, 5, 1, "", "plot_filter_responses"]], "corrct.physics.units": [[18, 2, 1, "", "ConversionEnergy"], [18, 2, 1, "", "ConversionMetric"], [18, 5, 1, "", "energy_to_wlength"], [18, 5, 1, "", "wlength_to_energy"]], "corrct.physics.units.ConversionEnergy": [[18, 3, 1, "", "convert"], [18, 4, 1, "", "order_to_str"], [18, 4, 1, "", "str_to_order"]], "corrct.physics.units.ConversionMetric": [[18, 3, 1, "", "convert"], [18, 4, 1, "", "order_to_str"], [18, 4, 1, "", "str_to_order"]], "corrct.physics.xraylib_helper": [[19, 5, 1, "", "get_compound"], [19, 5, 1, "", "get_compound_cross_section"], [19, 5, 1, "", "get_element_number"], [19, 5, 1, "", "get_element_number_and_symbol"]], "corrct.physics.xrf": [[20, 2, 1, "", "DetectorXRF"], [20, 2, 1, "", "FluoLine"], [20, 2, 1, "", "LinesSiegbahn"], [20, 5, 1, "", "_get_lines_list"], [20, 5, 1, "", "get_energy"], [20, 5, 1, "", "get_radiation_rate"]], "corrct.physics.xrf.DetectorXRF": [[20, 4, 1, "", "angle_rad"], [20, 4, 1, "", "distance_mm"], [20, 6, 1, "", "solid_angle_sr"], [20, 4, 1, "", "surface_mm2"]], "corrct.physics.xrf.FluoLine": [[20, 4, 1, "", "indx"], [20, 4, 1, "", "name"]], "corrct.physics.xrf.LinesSiegbahn": [[20, 3, 1, "", "get_lines"], [20, 4, 1, "", "lines"]], "corrct.processing": [[21, 1, 1, "", "__author__"], [21, 1, 1, "", "__email__"], [21, 1, 1, "", "circular_mask"], [21, 1, 1, "", "compute_variance_poisson"], [21, 1, 1, "", "compute_variance_transmission"], [21, 1, 1, "", "compute_variance_weight"], [22, 0, 0, "-", "misc"], [23, 0, 0, "-", "noise"], [24, 0, 0, "-", "post"], [25, 0, 0, "-", "pre"]], "corrct.processing.misc": [[22, 1, 1, "", "NDArrayInt"], [22, 5, 1, "", "azimuthal_integration"], [22, 5, 1, "", "ball"], [22, 5, 1, "", "circular_mask"], [22, 1, 1, "", "eps"], [22, 5, 1, "", "inspect_fourier_img"], [22, 5, 1, "", "lines_intersection"], [22, 5, 1, "", "norm_cross_corr"]], "corrct.processing.noise": [[23, 5, 1, "", "compute_variance_poisson"], [23, 5, 1, "", "compute_variance_transmission"], [23, 5, 1, "", "compute_variance_weight"], [23, 1, 1, "", "eps"]], "corrct.processing.post": [[24, 5, 1, "", "com"], [24, 5, 1, "", "compute_frc"], [24, 1, 1, "", "eps"], [24, 5, 1, "", "estimate_resolution"], [24, 5, 1, "", "fit_scale_bias"], [24, 5, 1, "", "plot_frcs"], [24, 5, 1, "", "power_spectrum"]], "corrct.processing.pre": [[25, 5, 1, "", "apply_flat_field"], [25, 5, 1, "", "apply_minus_log"], [25, 5, 1, "", "background_from_margin"], [25, 5, 1, "", "bin_imgs"], [25, 5, 1, "", "compute_eigen_flats"], [25, 5, 1, "", "destripe_wlf_vwu"], [25, 1, 1, "", "eps"], [25, 5, 1, "", "pad_sinogram"], [25, 5, 1, "", "rotate_proj_stack"], [25, 5, 1, "", "shift_proj_stack"]], "corrct.projectors": [[26, 2, 1, "", "ProjectorAttenuationXRF"], [26, 2, 1, "", "ProjectorMatrix"], [26, 2, 1, "", "ProjectorUncorrected"], [26, 1, 1, "", "astra_available"], [26, 1, 1, "", "num_threads"]], "corrct.projectors.ProjectorAttenuationXRF": [[26, 3, 1, "", "__enter__"], [26, 3, 1, "", "__exit__"], [26, 4, 1, "", "att_vol_angles"], [26, 3, 1, "", "bp"], [26, 3, 1, "", "bp_angle"], [26, 3, 1, "", "collapse_detectors"], [26, 4, 1, "", "executor"], [26, 3, 1, "", "fp"], [26, 3, 1, "", "fp_angle"]], "corrct.projectors.ProjectorMatrix": [[26, 4, 1, "", "A"], [26, 3, 1, "", "_transpose"], [26, 3, 1, "", "absolute"], [26, 3, 1, "", "bp"], [26, 3, 1, "", "fp"]], "corrct.projectors.ProjectorUncorrected": [[26, 3, 1, "", "__enter__"], [26, 3, 1, "", "__exit__"], [26, 3, 1, "", "_set_psf"], [26, 6, 1, "", "angles_rot_rad"], [26, 3, 1, "", "bp"], [26, 3, 1, "", "bp_angle"], [26, 3, 1, "", "fp"], [26, 3, 1, "", "fp_angle"], [26, 3, 1, "", "get_pre_weights"], [26, 4, 1, "", "prj_intensities"], [26, 4, 1, "", "projector_backend"], [26, 4, 1, "", "psf"], [26, 4, 1, "", "vol_geom"]], "corrct.regularizers": [[27, 2, 1, "", "BaseRegularizer"], [27, 2, 1, "", "BaseRegularizer_med"], [27, 2, 1, "", "Constraint_LowerLimit"], [27, 2, 1, "", "Constraint_UpperLimit"], [27, 1, 1, "", "NDArrayInt"], [27, 2, 1, "", "Regularizer_Grad"], [27, 2, 1, "", "Regularizer_HubTV2D"], [27, 2, 1, "", "Regularizer_HubTV3D"], [27, 2, 1, "", "Regularizer_Hub_dwl"], [27, 2, 1, "", "Regularizer_Hub_swl"], [27, 2, 1, "", "Regularizer_TNV"], [27, 2, 1, "", "Regularizer_TV1D"], [27, 2, 1, "", "Regularizer_TV2D"], [27, 2, 1, "", "Regularizer_TV3D"], [27, 2, 1, "", "Regularizer_VTV"], [27, 2, 1, "", "Regularizer_dwl"], [27, 2, 1, "", "Regularizer_fft"], [27, 2, 1, "", "Regularizer_l1"], [27, 2, 1, "", "Regularizer_l12dwl"], [27, 2, 1, "", "Regularizer_l12swl"], [27, 2, 1, "", "Regularizer_l1dwl"], [27, 2, 1, "", "Regularizer_l1med"], [27, 2, 1, "", "Regularizer_l1swl"], [27, 2, 1, "", "Regularizer_l2med"], [27, 2, 1, "", "Regularizer_lap"], [27, 2, 1, "", "Regularizer_lap1D"], [27, 2, 1, "", "Regularizer_lap2D"], [27, 2, 1, "", "Regularizer_lap3D"], [27, 2, 1, "", "Regularizer_lnswl"], [27, 2, 1, "", "Regularizer_smooth1D"], [27, 2, 1, "", "Regularizer_smooth2D"], [27, 2, 1, "", "Regularizer_smooth3D"], [27, 2, 1, "", "Regularizer_swl"], [27, 2, 1, "", "Regularizer_vSVD"], [27, 2, 1, "", "Regularizer_vl1wl"]], "corrct.regularizers.BaseRegularizer": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "_check_primal"], [27, 3, 1, "", "apply_proximal"], [27, 3, 1, "", "compute_update_primal"], [27, 4, 1, "", "dtype"], [27, 3, 1, "", "info"], [27, 3, 1, "", "initialize_dual"], [27, 3, 1, "", "initialize_sigma_tau"], [27, 3, 1, "", "lower"], [27, 4, 1, "", "op"], [27, 4, 1, "", "sigma"], [27, 4, 1, "", "upd_mask"], [27, 3, 1, "", "update_dual"], [27, 3, 1, "", "upper"], [27, 4, 1, "", "weight"]], "corrct.regularizers.BaseRegularizer_med": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "info"], [27, 3, 1, "", "initialize_sigma_tau"], [27, 3, 1, "", "update_dual"]], "corrct.regularizers.Constraint_LowerLimit": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "apply_proximal"], [27, 3, 1, "", "info"], [27, 3, 1, "", "initialize_sigma_tau"], [27, 3, 1, "", "update_dual"]], "corrct.regularizers.Constraint_UpperLimit": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "apply_proximal"], [27, 3, 1, "", "info"], [27, 3, 1, "", "initialize_sigma_tau"], [27, 3, 1, "", "update_dual"]], "corrct.regularizers.Regularizer_Grad": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "initialize_sigma_tau"]], "corrct.regularizers.Regularizer_HubTV2D": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_HubTV3D": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_Hub_dwl": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_Hub_swl": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_TNV": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "initialize_sigma_tau"]], "corrct.regularizers.Regularizer_TV1D": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_TV2D": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_TV3D": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_VTV": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "_raise_pwise_norm_error"], [27, 3, 1, "", "apply_proximal"]], "corrct.regularizers.Regularizer_dwl": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "apply_proximal"], [27, 3, 1, "", "info"], [27, 3, 1, "", "initialize_sigma_tau"], [27, 3, 1, "", "update_dual"]], "corrct.regularizers.Regularizer_fft": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "initialize_sigma_tau"]], "corrct.regularizers.Regularizer_l1": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "initialize_sigma_tau"], [27, 3, 1, "", "update_dual"]], "corrct.regularizers.Regularizer_l12dwl": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_l12swl": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_l1dwl": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_l1med": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_l1swl": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_l2med": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_lap": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "initialize_sigma_tau"]], "corrct.regularizers.Regularizer_lap1D": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_lap2D": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_lap3D": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_lnswl": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "initialize_sigma_tau"]], "corrct.regularizers.Regularizer_smooth1D": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_smooth2D": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_smooth3D": [[27, 4, 1, "", "__reg_name__"]], "corrct.regularizers.Regularizer_swl": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "apply_proximal"], [27, 3, 1, "", "info"], [27, 3, 1, "", "initialize_sigma_tau"], [27, 3, 1, "", "update_dual"]], "corrct.regularizers.Regularizer_vSVD": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "initialize_sigma_tau"]], "corrct.regularizers.Regularizer_vl1wl": [[27, 4, 1, "", "__reg_name__"], [27, 3, 1, "", "_raise_pwise_norm_error"], [27, 3, 1, "", "apply_proximal"], [27, 3, 1, "", "initialize_sigma_tau"]], "corrct.solvers": [[28, 2, 1, "", "FBP"], [28, 2, 1, "", "MLEM"], [28, 1, 1, "", "NDArrayFloat"], [28, 2, 1, "", "PDHG"], [28, 2, 1, "", "SART"], [28, 2, 1, "", "SIRT"], [28, 2, 1, "", "SolutionInfo"], [28, 2, 1, "", "Solver"], [28, 1, 1, "", "eps"]], "corrct.solvers.FBP": [[28, 3, 1, "", "__call__"], [28, 3, 1, "", "info"]], "corrct.solvers.MLEM": [[28, 3, 1, "", "__call__"], [28, 3, 1, "", "info"]], "corrct.solvers.PDHG": [[28, 3, 1, "", "__call__"], [28, 3, 1, "", "_get_data_sigma_tau_unpreconditioned"], [28, 3, 1, "", "_initialize_data_fidelity_function"], [28, 3, 1, "", "info"], [28, 3, 1, "", "power_method"]], "corrct.solvers.SART": [[28, 3, 1, "", "__call__"], [28, 3, 1, "", "compute_residual"]], "corrct.solvers.SIRT": [[28, 3, 1, "", "__call__"], [28, 3, 1, "", "info"]], "corrct.solvers.SolutionInfo": [[28, 4, 1, "", "iterations"], [28, 4, 1, "", "max_iterations"], [28, 4, 1, "", "method"], [28, 4, 1, "", "residual0"], [28, 4, 1, "", "residual0_cv"], [28, 4, 1, "", "residuals"], [28, 4, 1, "", "residuals_cv"], [28, 6, 1, "", "residuals_cv_rel"], [28, 6, 1, "", "residuals_rel"], [28, 4, 1, "", "tolerance"]], "corrct.solvers.Solver": [[28, 3, 1, "", "__call__"], [28, 3, 1, "", "_initialize_b_masks"], [28, 3, 1, "", "_initialize_data_fidelity_function"], [28, 3, 1, "", "_initialize_regularizer"], [28, 3, 1, "", "info"], [28, 3, 1, "", "lower"], [28, 3, 1, "", "upper"]], "corrct.struct_illum": [[29, 2, 1, "", "MaskCollection"], [29, 2, 1, "", "MaskGenerator"], [29, 2, 1, "", "MaskGeneratorBernoulli"], [29, 2, 1, "", "MaskGeneratorHalfGaussian"], [29, 2, 1, "", "MaskGeneratorMURA"], [29, 2, 1, "", "MaskGeneratorPoint"], [29, 1, 1, "", "NDArrayInt"], [29, 2, 1, "", "ProjectorGhostImaging"], [29, 5, 1, "", "decompose_qr_masks"], [29, 5, 1, "", "estimate_resolution"], [29, 5, 1, "", "reorder_masks"]], "corrct.struct_illum.MaskCollection": [[29, 3, 1, "", "bin_masks"], [29, 3, 1, "", "get_QR_decomposition"], [29, 3, 1, "", "get_mask"], [29, 3, 1, "", "info"], [29, 3, 1, "", "inspect_masks"], [29, 3, 1, "", "lower"], [29, 4, 1, "", "mask_dims"], [29, 4, 1, "", "mask_support"], [29, 4, 1, "", "mask_type"], [29, 4, 1, "", "masks_dec"], [29, 4, 1, "", "masks_enc"], [29, 6, 1, "", "num_buckets"], [29, 6, 1, "", "num_pixels"], [29, 6, 1, "", "shape_fov"], [29, 6, 1, "", "shape_shifts"], [29, 3, 1, "", "upper"]], "corrct.struct_illum.MaskGenerator": [[29, 4, 1, "", "__mask_name__"], [29, 3, 1, "", "__repr__"], [29, 3, 1, "", "_apply_transmission"], [29, 4, 1, "", "_enc_dec_mismatch"], [29, 3, 1, "", "_generate_mask_shifts"], [29, 3, 1, "", "_init_fov_mm"], [29, 4, 1, "", "dtype"], [29, 3, 1, "", "generate_collection"], [29, 3, 1, "", "generate_shifted_mask"], [29, 3, 1, "", "get_interval_shifts"], [29, 3, 1, "", "get_random_shifts"], [29, 3, 1, "", "get_sequential_shifts"], [29, 3, 1, "", "info"], [29, 6, 1, "", "max_buckets"], [29, 6, 1, "", "num_pixels"], [29, 4, 1, "", "shape_fov"], [29, 4, 1, "", "shape_mask"], [29, 4, 1, "", "shape_shifts"], [29, 4, 1, "", "transmittance"]], "corrct.struct_illum.MaskGeneratorBernoulli": [[29, 4, 1, "", "__mask_name__"], [29, 3, 1, "", "generate_shifted_mask"]], "corrct.struct_illum.MaskGeneratorHalfGaussian": [[29, 4, 1, "", "__mask_name__"], [29, 3, 1, "", "generate_shifted_mask"]], "corrct.struct_illum.MaskGeneratorMURA": [[29, 4, 1, "", "__mask_name__"], [29, 3, 1, "", "compute_possible_mask_sizes"], [29, 3, 1, "", "generate_shifted_mask"]], "corrct.struct_illum.MaskGeneratorPoint": [[29, 4, 1, "", "__mask_name__"], [29, 3, 1, "", "generate_shifted_mask"]], "corrct.struct_illum.ProjectorGhostImaging": [[29, 3, 1, "", "_init_backend"], [29, 3, 1, "", "absolute"], [29, 3, 1, "", "adjust_sampling_scaling"], [29, 3, 1, "", "bp"], [29, 3, 1, "", "fbp"], [29, 3, 1, "", "fp"], [29, 4, 1, "", "mc"]], "corrct.testing": [[30, 1, 1, "", "NDArrayFloat"], [30, 5, 1, "", "add_noise"], [30, 5, 1, "", "compute_error_power"], [30, 5, 1, "", "create_phantom_nuclei3d"], [30, 5, 1, "", "create_sino"], [30, 5, 1, "", "create_sino_transmission"], [30, 5, 1, "", "download_phantom"], [30, 5, 1, "", "phantom_assign_concentration"], [30, 5, 1, "", "phantom_assign_concentration_multi"], [30, 5, 1, "", "roundup_to_pow2"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "data", "Python data"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "objtypes": {"0": "py:module", "1": "py:data", "2": "py:class", "3": "py:method", "4": "py:attribute", "5": "py:function", "6": "py:property"}, "terms": {"": [11, 12, 15, 26, 28, 30, 32, 33, 36, 38], "0": [3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 22, 23, 24, 25, 27, 28, 29, 30, 32, 34, 35, 38], "0001": 15, "001": 23, "005": 25, "01": [9, 16, 35], "011": 16, "02": [29, 35], "03": 35, "04": 35, "05": [13, 24, 35], "06": 35, "08": 35, "09": [16, 35], "1": [3, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38], "10": [15, 16, 32, 34, 35, 37, 38], "100": [1, 30, 38], "1000000000": 30, "101": 15, "1016": 16, "1088": 37, "11": [6, 10, 16, 35, 38], "12": [6, 16, 30, 32, 35], "120": 32, "13": [32, 34], "1361": 37, "14": [24, 34, 35], "15": [24, 32, 35], "151": 24, "16": [6, 34, 35, 38], "17": [6, 29, 35], "180": [7, 30, 34, 38], "1d": [1, 27, 28, 33], "1e": 9, "1e9": 30, "2": [5, 6, 7, 9, 10, 12, 15, 22, 24, 25, 26, 27, 29, 30, 32, 34, 35, 38], "20": [30, 32, 35], "2005": 24, "201": 15, "2011": 16, "2014": [10, 38], "2017": [30, 32, 37, 38], "2019": [0, 35], "2020": [24, 30, 35], "2021": 35, "2022": [6, 29, 35], "2023": 35, "2024": 35, "2025": 35, "2071": 24, "21": 30, "22": 33, "23": [10, 35, 38], "24": [24, 35], "25": [24, 35], "250": [9, 24, 32], "256": [32, 34], "26": [30, 32, 37, 38], "262": 24, "27": 35, "28": 30, "29": 35, "2d": [1, 3, 7, 26, 27, 33, 34], "3": [0, 24, 27, 32, 34, 35, 37], "30": 35, "31": 35, "360": 7, "39": 29, "3d": [7, 11, 15, 26, 27, 30, 33, 34, 38], "4": [10, 13, 25, 29, 30, 34, 35], "4142": 24, "45": 34, "4750": [10, 38], "4762": [10, 38], "5": [10, 22, 24, 28, 30, 32, 34, 35], "500": 17, "58": 6, "6": [32, 35], "60": 32, "625": 34, "6501": 37, "66": 16, "69": 32, "7": [13, 35], "776": 16, "784": 16, "8": [32, 35], "80": 34, "800": 17, "83": 32, "9": [29, 34, 35], "90": [32, 34], "95": 28, "A": [0, 1, 2, 6, 8, 12, 15, 24, 26, 28, 29, 30, 32, 33, 34, 37, 38], "AND": 0, "AS": 0, "At": [12, 16, 28], "BE": 0, "BUT": 0, "BY": 0, "By": [17, 38], "FOR": 0, "For": [34, 36, 38], "IF": 0, "IN": [0, 34], "If": [7, 9, 12, 19, 22, 23, 24, 27, 28, 29, 30, 32, 36, 37], "In": [3, 5, 6, 7, 11, 12, 13, 15, 16, 22, 25, 28, 29, 32, 34, 36, 38], "It": [1, 3, 9, 11, 12, 13, 20, 22, 23, 26, 27, 29, 32, 36, 37, 38], "NO": 0, "NOT": [0, 3, 28], "Not": 12, "OF": 0, "ON": 0, "OR": 0, "On": 33, "SUCH": 0, "THE": 0, "TO": 0, "The": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36], "These": [1, 32], "To": [34, 37, 38], "With": 34, "_": [1, 32, 38], "__author__": [2, 4, 14, 21], "__call__": [10, 12, 28], "__data_fidelity_name__": 8, "__del__": 3, "__email__": [2, 4, 14, 21], "__enter__": 26, "__exit__": 26, "__getitem__": [8, 10, 11], "__iter__": 10, "__len__": 10, "__mask_name__": 29, "__post_init__": 11, "__reg_name__": 27, "__repr__": [3, 29], "__str__": 11, "__version__": 2, "_adjoint": 12, "_apply_displacement_vu": 5, "_apply_threshold": 8, "_apply_transmiss": 29, "_ax": [15, 24], "_check_data": 3, "_check_parallax_detector": 16, "_check_prim": 27, "_check_prj_shap": 3, "_compute_attenuation_angle_in": 15, "_compute_attenuation_angle_out": 15, "_compute_sigma_data": 8, "_create_random_test_mask": 13, "_crop_valid": 12, "_ctf_freq_respons": 17, "_default_regularizer_l1dwl": 9, "_enc_dec_mismatch": 29, "_filter_shift": 7, "_generate_mask_shift": 29, "_get_data_dim": 11, "_get_data_sigma_tau_unprecondit": 28, "_get_inner_norm": 8, "_get_lines_list": 20, "_init_backend": 29, "_init_fov_mm": 29, "_initialize_b_mask": 28, "_initialize_data_fidelity_funct": 28, "_initialize_filter_bank": 12, "_initialize_regular": 28, "_matvec": 12, "_op_adjoint": 12, "_op_direct": 12, "_pad_valid": 12, "_projector_backend": [2, 26, 31, 38], "_raise_pwise_norm_error": 27, "_set_bpj_siz": 3, "_set_filter_nam": 3, "_set_psf": 26, "_slice_attr": 8, "_soft_threshold": 8, "_solver_calling_funct": 13, "_solver_spawning_functionl": 13, "_tie_freq_respons": 17, "_transpos": [12, 26], "_vol_shape_xyz": 11, "a_num_row": 28, "aa9d54": 37, "abbrevi": 37, "abc": [3, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30], "aberr": 32, "about": [37, 38], "abov": [0, 34], "abs_fract": 29, "absolut": [6, 12, 26, 29], "absorpt": [17, 29, 33], "abstract": [3, 8, 10, 12, 13, 27, 28, 29], "abus": 34, "access": [11, 26], "accord": 6, "accordingli": 29, "account": 29, "achiev": 38, "acquisit": [30, 34, 38], "across": [1, 27, 33], "acta": 16, "activ": [3, 26], "actual": 32, "add": 30, "add_nois": 30, "add_poisson": 30, "adequ": 12, "adher": 33, "adj_shap": 12, "adjoint": [12, 28], "adjust": 29, "adjust_sampling_sc": 29, "adjust_sc": 29, "advanc": [9, 30, 32, 37, 38], "advis": 0, "after": 28, "against": [6, 7, 13, 23, 24, 32, 33, 37], "aid": 13, "aim": 36, "al": 16, "algebra": [28, 37, 38], "algorithm": [27, 28, 29, 33, 37, 38], "alias": 6, "align": [2, 13, 31, 33, 35, 37], "align_pr": 1, "aligned_ord": 13, "all": [0, 1, 3, 7, 8, 9, 11, 12, 13, 16, 24, 29, 33, 36, 38], "alloc": 3, "allow": [7, 22, 34, 36], "along": [1, 3, 6, 11, 12, 22, 24, 30, 33, 34], "alpha": [30, 32], "also": [1, 11, 23, 29, 32, 33, 34, 36, 37, 38], "alwai": [12, 37, 38], "among": 33, "amplitud": 6, "an": [1, 3, 6, 9, 11, 12, 13, 15, 17, 24, 25, 26, 28, 29, 30, 32, 33, 34, 36, 37, 38], "anaconda": 37, "analyt": 38, "angl": [1, 3, 5, 6, 7, 11, 15, 16, 20, 25, 26, 30, 32, 33, 34, 38], "angle_axi": 25, "angle_ind": [3, 26], "angle_prj_shap": 3, "angle_rad": [3, 15, 16, 20], "angles_det_rad": [15, 34], "angles_detectors_rad": [26, 38], "angles_rad": [1, 5, 7, 32, 38], "angles_rot_rad": [3, 15, 26, 32, 34], "angles_t_rad": 11, "angles_w_rad": [3, 11], "angular": [11, 30], "ani": [0, 8, 10, 11, 13, 28, 37, 38], "anoth": 38, "anti": 12, "anyth": 3, "api": [33, 35], "appli": [3, 8, 10, 11, 12, 17, 25, 26, 27, 28, 33, 36], "applic": [11, 33], "apply_filt": 10, "apply_flat_field": 25, "apply_minus_log": 25, "apply_propagation_filt": [17, 36], "apply_proxim": [8, 27], "approxim": [19, 33], "ar": [0, 1, 6, 7, 12, 13, 15, 22, 25, 26, 29, 32, 37, 38], "arbitrari": 33, "area": 6, "arg": [13, 26, 28], "argument": [9, 13, 15, 25, 30], "aris": 0, "around": 6, "arrai": [1, 8, 9, 12, 22, 28, 29], "array_lik": 12, "arraylik": [3, 5, 6, 7, 9, 10, 11, 12, 13, 15, 22, 24, 26], "arrow": [32, 34], "articl": 24, "artifact": 24, "as_refer": 5, "assess": 34, "assign_data": 8, "associ": [12, 23, 24, 27], "assum": [12, 23, 29, 38], "astra": [3, 11, 26, 33, 34, 37, 38], "astra_angle_prj_shap": 3, "astra_avail": 26, "astra_prj_shap": 3, "astra_vol_geom": 3, "astra_vol_shap": 3, "astyp": [32, 34], "att": 32, "att_in": [26, 32, 38], "att_map": 26, "att_out": [26, 32, 38], "att_vol": 34, "att_vol_angl": 26, "attenu": [2, 3, 14, 16, 23, 26, 29, 30, 31, 33, 35, 37], "attenuationprojector": 33, "attenuationvolum": [15, 32, 34, 38], "attr": 8, "attribut": [8, 12], "attributeerror": 12, "author": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 35], "auto": [22, 29, 31], "auto_crop": 25, "autodoc2": 31, "autom": 33, "automat": [25, 33], "avail": [3, 10, 12, 26, 29, 33, 36, 38], "averag": [7, 13, 15, 19, 20, 24, 30, 36, 38], "avoid": 24, "awai": 32, "ax": [1, 11, 12, 15, 17, 22, 24, 25, 27, 29, 32, 33, 34], "axes_col": 12, "axes_ord": 29, "axes_row": 12, "axi": [1, 3, 6, 11, 25, 26, 30, 33, 34, 38], "axis_channel": 27, "azimuth": [22, 33], "azimuthal_integr": 22, "b": [6, 16, 17, 28], "b_mask": 28, "b_test_mask": 28, "back": [3, 10, 12, 26, 28, 29, 33, 36, 37, 38], "backend": [3, 26, 29, 33, 34, 37, 38], "background": [1, 7, 8, 25, 30, 33], "background_avg": 30, "background_from_margin": 25, "background_std": 30, "backproject": [10, 33, 38], "ball": [8, 22], "ball_norm": 22, "bandwidth": 24, "bar": 28, "barbei": 30, "base": [3, 6, 7, 8, 9, 10, 11, 12, 13, 26, 27, 28, 29, 33, 37, 38], "baseparametertun": 13, "baseregular": [9, 27, 28], "baseregularizer_m": 27, "basetransform": [10, 12, 24, 27, 28], "basewavelettransform": 12, "basi": [10, 38], "basic": [33, 35], "basisopt": 10, "basisoptionsblock": 10, "basisoptionswavelet": 10, "batenburg": [10, 38], "beam": [11, 12, 14, 15, 16, 26, 29, 30, 32, 33, 35, 38], "beam_fwhm_um": 14, "beam_shap": 14, "becaus": [10, 12], "been": [3, 12, 16, 30, 32], "behavior": [12, 33], "behind": 35, "below": 32, "benefici": 23, "bernoulli": [29, 33], "bernulli": 29, "best": 6, "beta": [17, 33, 36], "better": 33, "between": [6, 7, 8, 11, 17, 18, 22, 24, 33, 36], "bia": [6, 7, 8, 24, 29, 33], "bin": [10, 25, 29, 33], "bin_img": 25, "bin_mask": 29, "binari": 0, "binning_start": 10, "binning_typ": 10, "biol": 24, "bior2": [10, 25], "bior4": 10, "bit": [24, 38], "black": [32, 34], "block": 26, "bool": [1, 3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36], "boolean": 6, "border": [7, 33], "borders_dvwu": 7, "both": [1, 19, 26, 36, 38], "bottom": 34, "box": 38, "bp": [3, 12, 26, 29, 33, 34], "bp_angl": 26, "bp_angles_": 34, "bp_angles_3": 34, "bp_angles_a": 34, "branch": 37, "briefli": 38, "bsd": [0, 37], "bucket": 29, "bucket_v": 29, "buckets_fract": 29, "bug": 33, "build": [3, 19, 30, 33], "busi": 0, "c": 37, "ca": [30, 32], "calcul": [1, 33], "call": [13, 32, 33, 34, 36, 38], "callabl": [9, 12, 13, 22, 28], "camera": 6, "can": [1, 9, 11, 12, 16, 20, 22, 23, 27, 32, 34, 36, 37, 38], "cannot": 38, "cap": 25, "cap_intens": 25, "care": [26, 38], "case": [1, 3, 5, 6, 8, 11, 12, 13, 15, 16, 20, 22, 25, 27, 28, 29, 32, 33], "caus": 0, "cbar": 32, "cc": 6, "cc_coord": 6, "cct": [1, 32, 34, 38], "cd": 37, "cdot": 32, "cea": [5, 16, 17, 19, 20], "cell": 30, "center": [1, 2, 3, 4, 6, 7, 11, 24, 31, 33, 38], "centimet": 36, "certain": [5, 27], "cfg": 33, "chambol": [28, 33, 37, 38], "chang": 33, "changelog": 35, "channel": [12, 27, 33, 37], "check": 37, "choos": [17, 38], "chosen": [1, 9, 15, 18], "cicwi": 37, "circular": [11, 22, 33, 38], "circular_mask": [21, 22, 34], "class": [1, 32, 33, 36, 38], "claus": [0, 37], "clean": 30, "cleanup": 33, "clip": [9, 28], "clockwis": [11, 34], "clone": 37, "cm": 16, "cmp": 19, "cmp_name": [17, 19], "cmptn_prod": 16, "co": 22, "code": [0, 10, 11, 32, 33, 34, 37, 38], "coeff": 32, "coeffici": [12, 15, 17, 25, 26, 29, 32, 33, 36], "coincid": 34, "col": 12, "collabor": [33, 37], "collapse_detector": 26, "collect": [6, 7, 9, 10, 12, 15, 16, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 36], "colorbar": 32, "column": 12, "com": [1, 5, 7, 10, 24, 37], "com_ref_zyx": 5, "combin": 11, "combine_shifts_vu": 11, "come": 34, "compar": 6, "comparison": 32, "compat": [28, 33], "complex": [6, 10, 38], "compli": 33, "compon": 29, "compos": 19, "composit": [17, 19, 32, 36, 38], "compound": [15, 16, 17, 19, 32, 36], "compress": 27, "compton": [16, 30, 36], "compund": 19, "comput": [1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 38], "compute_attenu": 3, "compute_averag": [20, 32, 36], "compute_data_dual_dot": 8, "compute_eigen_flat": 25, "compute_error_pow": 30, "compute_filt": 10, "compute_frc": 24, "compute_loss_valu": 13, "compute_map": [15, 32, 34], "compute_possible_mask_s": 29, "compute_primal_dual_gap": 8, "compute_profil": 22, "compute_reconstruction_and_loss": 13, "compute_reconstruction_error": 13, "compute_residu": [8, 28], "compute_residual_norm": 8, "compute_update_prim": 27, "compute_variance_poisson": [21, 23], "compute_variance_transmiss": [21, 23], "compute_variance_weight": [21, 23], "computed_vol": 30, "concentr": [16, 32], "concept": 37, "conclud": 34, "concurr": 26, "conda": 33, "condit": [0, 33, 38], "cone": [11, 12, 26, 33], "configur": 26, "conjunct": 38, "consequenti": 0, "consid": [5, 12, 15, 16, 22, 29], "consist": [33, 34], "const": 22, "constant": [10, 12, 27, 28, 33], "constraint": [27, 33, 38], "constraint_lowerlimit": 27, "constraint_upperlimit": 27, "constructor": 9, "contain": [1, 6, 15, 29, 31, 32, 36, 37, 38], "content": [33, 35], "context": 23, "contract": 0, "contrast": [17, 33, 35], "contribut": 35, "contributor": [0, 35], "convers": [18, 33, 35], "conversionenergi": [18, 36], "conversionmetr": [18, 36], "convert": [18, 19, 26, 36, 38], "convert_energy_to_wlength": 14, "convert_um_to_cm": 15, "convert_wlength_to_energi": 14, "convolut": [10, 12, 22, 27, 28, 33], "coord": 15, "coordin": [3, 6, 7, 11, 22, 34, 38], "coords_bal": 22, "copi": [11, 33], "copyright": 0, "cor": [1, 7], "cor_pos_u": 11, "corr": 37, "corrct": [1, 31, 32, 34, 35, 36, 38], "correct": [1, 3, 5, 15, 25, 26, 30, 33, 34, 35, 36, 37], "correctli": 33, "correl": [1, 5, 6, 7, 22, 24, 29, 33], "correspond": [7, 11, 19, 20, 24, 29, 30, 32, 38], "cosin": 10, "cost": 13, "count": 38, "counter": [11, 34], "coupl": 33, "cover": [20, 38], "coverag": 33, "cp": 33, "cpu": 33, "crash": 33, "creat": [1, 3, 6, 12, 13, 24, 26, 29, 30, 31, 32, 38], "create_basi": 10, "create_basis_wavelet": 10, "create_phantom_nuclei3d": 30, "create_random_test_mask": 13, "create_single_proj": [3, 26], "create_sino": [30, 32], "create_sino_transmiss": 30, "creation": [33, 35, 38], "criteria": 24, "crop": [25, 33], "cross": [1, 5, 6, 7, 9, 13, 19, 22, 24, 29, 33, 36, 37, 38], "crossvalid": 13, "ct": 37, "ctf": [17, 33, 36], "cud": 6, "cuda": [3, 26, 33], "current": [5, 8, 27, 28, 38], "curv": [7, 13, 15, 17, 22, 23, 24, 33, 36], "custom": [10, 33, 38], "cv_fraction": 13, "cwi": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "d": [7, 10, 17, 32, 33, 38], "damag": 0, "dark": 25, "darks_wvu": 25, "data": [0, 1, 3, 10, 16, 17, 33, 35, 37], "data_dtyp": 13, "data_dvwu": 7, "data_format": [7, 11], "data_mask_dvwu": 7, "data_shap": [11, 13], "data_shape_vu": 22, "data_term": [2, 27, 28, 31, 38], "data_term_test": 28, "data_test": 1, "data_test_mask": 13, "data_typ": 26, "data_vwu": [1, 6, 7, 25], "data_wu": [6, 10], "data_wu_shap": 10, "data_wvu": 17, "datafidel": 8, "datafidelity_hub": 8, "datafidelity_kl": [8, 38], "datafidelity_l1": [8, 27, 38], "datafidelity_l12": [8, 27], "datafidelity_l1b": 8, "datafidelity_l2": [8, 27, 38], "datafidelity_l2b": 8, "datafidelity_ln": 8, "datafidelity_wl2": [8, 38], "datafidelitybas": [8, 27, 28], "dataset": [1, 7, 24], "datatyp": 30, "de": [3, 25, 26, 38], "deadzon": 33, "deal": [36, 38], "deault": 11, "decai": 15, "decim": [5, 6, 12, 27, 33], "decod": 29, "decompos": 29, "decompose_qr_mask": 29, "decomposit": [10, 12, 25, 27, 29, 33], "deconvolut": 33, "decrement": 17, "dedic": [26, 33, 36, 38], "deepcopi": 11, "def": [1, 36], "default": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 38], "defin": [8, 11, 12, 26, 27, 29, 33, 36], "definit": [20, 24], "deg": 32, "deg2rad": [34, 38], "degre": [6, 7, 25, 30], "deleg": 38, "delet": 3, "delta": [17, 33, 36], "delta_beta": 17, "demand": 33, "denois": [2, 31, 33], "denoise_imag": 9, "densiti": [15, 17, 19, 36], "depend": [10, 25, 33, 37, 38], "deprec": 33, "depth": 38, "deriv": [0, 1, 3, 7, 12, 38], "describ": [36, 38], "descript": [15, 16, 20, 33, 37, 38], "desir": 15, "destin": [5, 18, 36], "destrip": 33, "destripe_wlf_vwu": 25, "det_angle_rad": 34, "det_dist_i": 11, "det_ind": 15, "det_pos_vu": 11, "det_pos_xyz": 11, "det_shape_vu": 11, "det_u_xyz": 11, "det_v_xyz": 11, "detail": 37, "detect": 30, "detection_effici": 30, "detector": [1, 5, 7, 11, 12, 13, 15, 16, 17, 20, 26, 28, 30, 32, 33, 35, 36, 38], "detectors_pos_rad": 30, "detectorshiftsbas": [1, 7], "detectorshiftspr": [1, 4, 7], "detectorshiftsxc": [1, 4, 7], "detectorxrf": [16, 20, 36], "determin": 34, "develop": [16, 33, 37], "deviat": [7, 13, 23, 30], "diagon": [12, 22], "dict": [7, 11, 15, 19], "dictionari": 15, "differ": [6, 9, 10, 13, 15, 20, 24, 25, 27, 33, 36, 38], "diffs_u_pr": 1, "dimens": [7, 8, 10, 11, 12, 25, 27, 29, 33], "dimension": [3, 22, 24, 33], "dir_shap": 12, "direct": [0, 1, 3, 6, 7, 11, 12, 16, 17, 22, 29, 32, 33, 35, 36, 38], "direct_dwt": 12, "direct_svd": 12, "direct_swt": 12, "directli": 32, "directori": [33, 37], "discard": 23, "disclaim": 0, "discret": 15, "disp_zyx": 11, "displac": [10, 11], "displacemenet_zyx": 5, "displai": [22, 24], "dispos": [3, 26], "dist": 2, "dist_um": 17, "distanc": [10, 11, 17], "distance_mm": 20, "distribut": [0, 2], "diverg": 12, "dmpelt": 10, "do": [6, 12, 38], "docstr": 33, "document": [0, 31, 33, 37], "doe": [13, 28, 32, 38], "doi": [16, 37], "domain": [8, 17, 22, 27], "don": [11, 37], "done": [12, 38], "dot": 8, "doubl": 33, "down": 34, "download": 30, "download_phantom": [30, 32], "draft": 33, "drawback": 38, "drift": [7, 33], "driven": [10, 38], "dt": 27, "dtype": [10, 13, 15, 16, 17, 22, 25, 27, 29, 30], "dtypelik": [10, 13, 15, 16, 17, 22, 25, 26, 27, 28, 29, 30], "dual": [8, 27, 28, 37, 38], "due": 29, "dummi": 10, "dure": 12, "dvwu": [7, 11], "dwell_time_": 30, "dwl": [9, 27], "dwt": 33, "dynam": 23, "e": [13, 26, 30, 36, 37, 38], "each": [1, 6, 7, 13, 15, 16, 24, 25, 26, 29, 30, 32], "eas": 33, "edg": [12, 22, 24, 25, 27, 29, 30, 33], "effect": [15, 32, 36, 38], "effici": [26, 30], "eigen": 25, "either": [7, 11, 12, 16, 19, 20, 22, 25, 28, 36, 37, 38], "el_prod": 16, "elbow": [37, 38], "electromagnet": 36, "element": [16, 19, 20, 26, 29, 30, 36, 38], "els": [3, 26], "em_lin": 30, "emid": 15, "emiss": [30, 32, 36, 37, 38], "emit": [16, 29, 30, 32, 34, 38], "emitted_loc": [15, 32, 34], "enabl": 6, "encod": 29, "encount": 36, "end": [13, 15, 36], "end_angle_deg": 30, "endors": 0, "endpoint": 38, "energi": [15, 16, 17, 18, 19, 20, 30, 32, 33, 36, 38], "energy_in_kev": 16, "energy_kev": [15, 16, 17, 20], "energy_kev_rang": 17, "energy_out_kev": 16, "energy_to_wlength": [18, 36], "enough": 7, "ensur": 1, "entir": 38, "enumer": 34, "ep": [6, 7, 8, 9, 22, 23, 24, 25, 28], "eq": 16, "equal": [23, 29], "equat": 17, "err_l1": 13, "err_l2": 13, "error": [3, 6, 9, 12, 13, 20, 22, 24, 30, 33], "error_norm": 6, "especi": 33, "esrf": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 37], "estim": [6, 13, 24, 29, 33, 37, 38], "estimate_resolut": [24, 29], "et": 16, "etc": [16, 26, 30, 33, 36, 38], "european": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30], "ev": 36, "evalu": [6, 13], "even": 0, "event": 0, "exampl": [1, 33], "except": 32, "excit": [34, 38], "execut": 28, "executor": 26, "exemplari": 0, "exist": 11, "exp": 27, "expand": [12, 33], "expect": [3, 12, 13, 28, 30], "expected_ph": 32, "expected_shap": 3, "expected_vol": 30, "experiment": [3, 33, 38], "explicit": [12, 26], "expon": 24, "exponent": 10, "exponenti": 10, "expos": [1, 12, 13, 28, 36, 38], "express": [0, 36], "extent": [11, 15, 29], "extern": 33, "extract": 6, "extract_peak_region_nd": 6, "extract_peak_regions_1d": 6, "f": [32, 34], "f_avg": 13, "f_coord": 6, "f_std": 13, "f_val": [6, 13], "f_x": 6, "factor": [3, 18, 24, 25, 26, 36], "fall": 26, "fals": [1, 3, 6, 7, 10, 11, 12, 13, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 38], "famili": [20, 36], "famou": [36, 38], "far": 32, "fast": 37, "fbp": [10, 28, 29, 33, 37], "fbp_filter": [10, 28, 38], "fc_ax": 6, "fdk": 33, "fe": 30, "feedback": 33, "few": 37, "fft": [6, 10, 12, 25, 27, 33], "fft_filter": 27, "fidel": [8, 28, 33], "fiduci": 7, "field": [11, 12, 25, 29, 30, 33], "field_nam": 11, "fig": [32, 34], "figsiz": [32, 34], "figur": [17, 24, 34], "file": [33, 37], "filt": 3, "filt_siz": 27, "filter": [2, 7, 17, 25, 27, 28, 31, 33, 36, 37, 38], "filter_fouri": 10, "filter_length": 17, "filter_nam": 10, "filter_r": 10, "filter_typ": 17, "filtercustom": 10, "filterfbp": 10, "filtermr": 10, "final": [30, 38], "find": [1, 6, 7, 36, 38], "find_shifts_vu": 7, "finish": 28, "first": [6, 7, 10, 13, 22, 24, 29, 30, 32, 38], "fit": [0, 2, 4, 7, 12, 13, 24, 31, 33, 37], "fit_camera_tilt_angl": 6, "fit_func_min": 13, "fit_image_rotation_and_scal": 6, "fit_l1": [1, 6, 7], "fit_loss_min": 13, "fit_scale_bia": 24, "fit_shifts_u_sad": 6, "fit_shifts_vu_xc": 6, "fit_shifts_zyx_xc": 6, "fit_sinusoid": 6, "fit_u": [1, 7], "fit_u_180": 7, "fit_u_360": 7, "fit_v": [1, 7], "fit_vu": 7, "fit_vu_accum_drift": [1, 7], "fix": 12, "fixel": 10, "flag": 12, "flat": [9, 12, 25, 30, 33], "flats_wvu": 25, "flatten": 12, "flexibl": 33, "flip": [12, 35], "flip_adjoint": 12, "float": [1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36], "float32": [10, 13, 15, 17, 22, 25, 26, 27, 29, 30, 32, 34], "fluo_lin": 16, "fluolin": [16, 20, 36], "fluolinessiegbahn": 14, "fluoresc": [16, 20, 30, 33, 35, 38], "flux": 30, "folder": 37, "follow": [0, 1, 10, 24, 32, 34, 36, 37, 38], "fontsiz": [32, 34], "form": [0, 29, 33], "format": [25, 33], "former": [36, 38], "forward": [3, 6, 12, 26, 28, 29, 30, 32, 33, 37, 38], "found": [22, 24, 38], "fourier": [6, 7, 10, 12, 17, 22, 24, 25, 27, 33, 36], "fourier_ab": 10, "fov": 29, "fov_siz": [29, 30], "fov_size_mm": 29, "foward": 3, "fp": [3, 12, 26, 29, 33], "fp_angl": 26, "fraction": [13, 16, 29, 32], "franc": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30], "frc": [24, 33], "free": 37, "frequenc": [6, 17, 22, 24, 36], "from": [0, 1, 3, 6, 7, 10, 11, 12, 15, 16, 17, 18, 19, 25, 27, 28, 30, 33, 34, 36, 38], "from_unit": 18, "fsc": [24, 33], "full": [15, 22, 24, 33], "fulli": [3, 26], "func": 22, "function": [1, 12, 16, 26, 32, 33, 36, 37, 38], "futur": 26, "fwhm": 14, "fwhm_kev": 15, "fx": 6, "fy": 6, "g": [13, 26, 30, 36, 37, 38], "gap": 8, "gaussian": [14, 15, 23, 29, 33, 37], "gener": [11, 24, 29, 30, 31, 33, 36], "generate_collect": 29, "generate_shifted_mask": 29, "geom": 3, "geom_typ": [1, 11], "geometri": [3, 5, 11, 12, 16, 20, 26, 33, 35, 36], "get": [2, 35], "get_3d": 11, "get_attenu": [16, 32], "get_available_filt": 10, "get_compound": [14, 19], "get_compound_cross_sect": 19, "get_compton_scatt": 16, "get_default_from_data": 11, "get_default_from_volum": 11, "get_default_parallel": 11, "get_delta_beta": [17, 36], "get_delta_beta_curv": [17, 36], "get_element_mass_fract": 16, "get_element_numb": [14, 19], "get_element_number_and_symbol": 19, "get_energi": [20, 32, 36], "get_field_sc": 11, "get_fluo_product": 16, "get_interval_shift": 29, "get_lambda_rang": 13, "get_lin": [20, 36], "get_linear_attenuation_coeffici": 15, "get_map": 15, "get_mask": 29, "get_padding_s": 10, "get_pre_weight": [11, 12, 26], "get_prj_geom_con": 11, "get_prj_geom_parallel": [1, 11], "get_prj_shap": 3, "get_projector_arg": [15, 32], "get_propagation_filt": [17, 36], "get_qr_decomposit": 29, "get_radiation_r": 20, "get_random_shift": 29, "get_rot_axis_dir": 11, "get_sequential_shift": 29, "get_vers": 2, "get_vol_geom_from_data": [1, 11, 32], "get_vol_geom_from_volum": 11, "get_vol_shap": 3, "gev": 36, "ghost": [29, 33], "gi": 33, "git": 37, "github": [10, 30, 33, 37], "give": 6, "given": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 17, 19, 20, 23, 24, 25, 26, 29, 30, 32, 33, 36, 38], "gnd_truth": 13, "go": [11, 37], "goe": [34, 38], "good": 0, "gpu": [33, 38], "grad": 27, "gradient": [12, 27, 28, 33, 37, 38], "grenobl": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30], "ground": 13, "group": [3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30, 38], "guid": [33, 35, 37], "ha": 30, "hald": 24, "half": [15, 24, 29, 33], "halv": 24, "ham": 10, "handl": [10, 19, 23, 33, 36, 38], "hann": [6, 10, 24, 38], "happen": 35, "hard": 33, "harrison": 37, "have": [3, 6, 12, 16, 22, 28, 29, 32, 33, 37, 38], "heel": 24, "helper": 13, "here": [1, 32, 34, 36, 37], "heterogen": 36, "high": [6, 7, 23, 24], "highest": 1, "hint": 33, "holder": 0, "horizont": [1, 6, 7, 11, 22, 25, 29, 34, 38], "how": [1, 32, 35, 38], "howev": 0, "hp_val": 13, "http": [10, 37], "hub": 8, "hubdwl": 27, "huber": [8, 33], "huber_s": 27, "hubswl": 27, "hubtv2d": 27, "hubtv3d": 27, "human": 11, "hwhm": 29, "hybrid": [28, 37, 38], "hyper": [13, 38], "i": [0, 1, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38], "i0": 23, "ident": [12, 24, 29], "identif": 7, "ieee": [10, 38], "ifft": 12, "ignor": [3, 26], "ii_a": 34, "illumin": [29, 33], "im": 32, "imag": [3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38], "img": [9, 22, 24, 25], "img1": [22, 24], "img2": [22, 24], "img_1": 6, "img_1_vu": 6, "img_2": 6, "img_2_vu": 6, "img_clean": 30, "img_data": 24, "img_shap": 17, "imperfect": 32, "imping": 30, "implement": [3, 10, 12, 26, 28, 29, 33, 38], "impli": 0, "import": [1, 32, 34, 36, 38], "importerror": 32, "impos": [11, 38], "improv": [10, 33, 38], "imshow": [32, 34], "in_energy_kev": [30, 32], "incid": [15, 26], "incident": 0, "incident_loc": [15, 32, 34], "incl": 33, "inclin": 30, "includ": [0, 1, 26, 33, 36, 37, 38], "incoher": 7, "incom": [16, 19, 26, 30, 32, 35, 38], "inconsist": [26, 33], "incorrect": [16, 17], "increas": 24, "ind": 8, "independ": [6, 11], "index": [3, 15, 17, 26, 29, 35], "indexerror": 12, "indic": [8, 11, 12, 30, 32, 34], "indirect": 0, "induc": [30, 32, 37, 38], "indx": [11, 20], "inf": [25, 27, 28], "info": [8, 27, 28, 29], "inform": [14, 24, 28, 33, 37], "inherit": 3, "initi": [3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 26, 27, 28, 29, 30, 33, 38], "initialize_du": [8, 27], "initialize_geometri": 3, "initialize_sigma_tau": 27, "input": [11, 12, 13, 18, 22, 24, 26, 30, 33], "inspect": 29, "inspect_fourier_img": 22, "inspect_mask": 29, "inspir": 10, "instal": 33, "instanc": 11, "instead": [6, 23, 32, 33, 36, 38], "instruct": 33, "int": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 36], "integ": [3, 25, 26, 29], "integr": [1, 7, 14, 22, 33], "intend": 38, "intens": [1, 7, 17, 23, 25, 29, 33, 34], "interact": 16, "interest": [1, 15], "interfac": [3, 8, 12, 26, 27, 29, 33, 36, 38], "intern": [27, 38], "interpol": [1, 25], "interpret": 33, "interrupt": 0, "intersect": [22, 33], "interv": [13, 29], "intial": 38, "introduc": [33, 38], "invers": [12, 33], "inverse_dwt": 12, "inverse_svd": 12, "inverse_swt": 12, "invert": 3, "involv": 38, "io": 37, "iradon": 28, "irig": [5, 16, 17, 19, 20], "is_3d": 11, "is_conv_symm": 26, "is_dir_oper": 12, "is_initi": [3, 10], "is_readi": 3, "is_squar": 11, "is_symm": 12, "is_symmetr": 26, "isotrop": 33, "issu": 37, "iter": [1, 9, 10, 28, 32, 37, 38], "its": [0, 8, 12, 24, 36, 37], "j": [10, 16, 24, 33, 38], "jan": 29, "jerom": 37, "jun": 30, "jupyt": 37, "k": [10, 30, 36, 38], "k2": 17, "k_": 32, "ka": [30, 32], "keep": 33, "kei": 10, "kernel": [12, 24], "kev": [17, 18, 30, 32, 33, 36], "keyword": 13, "kilomet": 36, "kl": [8, 28], "knowledg": 38, "known": [32, 38], "kullback": 38, "kullbackleibl": 8, "kwd": [13, 25, 28], "l": [13, 29, 33], "l1": [6, 7, 8, 13, 27, 33, 37, 38], "l12": [8, 33], "l12dwl": 27, "l12swl": 27, "l1b": [8, 33], "l1dwl": 27, "l1med": 27, "l1swl": 27, "l2": [6, 8, 13, 27, 28, 33, 38], "l2_axi": 8, "l2b": [8, 33], "l2med": 27, "l_inf": 6, "label": [12, 24], "labels": [32, 34], "lambda_smooth": 10, "lap": 27, "lap1d": 27, "lap2d": 27, "lap3d": 27, "laplacian": [12, 27, 33, 37], "larger": [3, 6, 24, 25, 33], "largest": 23, "last": [10, 12, 13, 22, 27, 32], "latest": 33, "latter": [36, 38], "lcurv": 13, "leak": 33, "learn": [37, 38], "least": [9, 13, 23, 29, 33, 38], "leav": [13, 28], "leave_progress": 28, "left": [12, 32, 34], "leftward": 34, "legaci": 33, "leibler": 38, "length": [14, 17, 28, 29, 38], "lesaint": [33, 37], "let": 32, "level": [2, 10, 12, 25, 27], "liabil": 0, "liabl": 0, "librari": 16, "licens": [0, 35], "like": [36, 37, 38], "likelihood": [28, 37, 38], "limit": [0, 9, 27, 33, 38], "linalg": [12, 33], "line": [3, 6, 7, 15, 16, 20, 22, 25, 26, 30, 32, 33, 36], "line_1": 22, "line_2": 22, "line_shap": 15, "linear": [10, 12, 13, 15, 23, 25, 27, 28, 32, 33, 36, 38], "linearoper": [12, 33], "lines_intersect": 22, "linessiegbahn": [20, 36], "link": 33, "linspac": 38, "lint": 33, "list": [0, 3, 6, 10, 12, 13, 17, 20, 24, 28, 29, 30, 32, 36, 37], "liter": 13, "ln": 8, "ln_ax": 8, "lnswl": 27, "local": [3, 9, 13, 16, 22, 24, 35, 36, 38], "local_att": 15, "local_error": 8, "log": [13, 25, 33], "logan": [10, 38], "logarithm": 23, "look": [16, 34, 38], "lorentzian": [15, 33], "loss": [0, 13, 29], "loss_funct": 13, "lot": 33, "low": 33, "lower": [8, 9, 27, 28, 29, 33], "lower_limit": [9, 25, 28, 32, 38], "lowlim": 27, "m": [10, 18, 24, 33, 36, 38], "machin": 37, "macro": 20, "magnitud": [13, 18, 36], "mai": [0, 6], "main": [36, 37], "mainli": 36, "make": 3, "make_readi": 3, "malform": 11, "manag": 37, "mani": 7, "manipul": 33, "manner": 38, "map": [3, 7, 10, 15, 26, 30, 33, 34, 35, 36, 38], "mar": 24, "margin": [6, 25], "marker": 7, "mask": [7, 8, 11, 13, 22, 23, 28, 29, 33], "mask_collect": 29, "mask_dim": 29, "mask_encod": 29, "mask_inds_vu": 29, "mask_shap": 11, "mask_support": 29, "mask_typ": 29, "maskcollect": 29, "maskgener": 29, "maskgeneratorbernoulli": 29, "maskgeneratorhalfgaussian": 29, "maskgeneratormura": 29, "maskgeneratorpoint": 29, "masks_dec": 29, "masks_enc": 29, "mass": [1, 5, 7, 16, 24, 33], "mass_fract": 16, "match": [1, 11, 22, 25, 34, 36], "materi": [0, 2, 14, 17, 31, 32, 33, 35, 38], "material_compound": 16, "material_fract": 16, "materials_composit": 16, "materials_compound_nam": 32, "materials_fract": [16, 32], "mathemat": 37, "matplotlib": [15, 24, 34], "matric": 33, "matrix": [10, 12, 26, 29, 33], "matter": 16, "max": [6, 7, 15], "max_bucket": 29, "max_iter": 28, "max_masks_ratio": 29, "max_shift": 7, "maxim": 28, "maximis": 37, "maximul": 28, "maximum": [6, 7, 15, 29, 37, 38], "mc": 29, "md": 37, "mea": [30, 32, 37, 38], "mean": [1, 6, 11, 12, 15, 23, 29, 32], "mean_energy_kev": [15, 19], "meaning": 11, "meant": 38, "measur": 29, "med": 27, "median": [27, 33], "meet": 5, "memori": 33, "merchant": 0, "merg": 33, "met": 0, "meter": 36, "method": [1, 3, 5, 7, 9, 25, 28, 32, 33, 36, 37, 38], "metric": [18, 36], "mev": 36, "micron": [15, 17], "millimit": 29, "min": [7, 15, 33, 37, 38], "min_approx": 27, "min_f_val": 13, "min_hp_val": 13, "minim": [9, 27, 33], "minimum": [13, 23, 29], "misc": [2, 21, 31], "miscellan": 22, "mismatch": [6, 22, 33], "mlem": [28, 33, 37], "mm": 29, "mode": [6, 10, 12, 25, 27, 28, 33], "mode_ful": 22, "model": [1, 2, 3, 5, 20, 26, 31, 32, 33, 35, 37], "modern": 33, "modif": 0, "modifi": 29, "modified_shepp_logan": 32, "modul": [1, 14, 33, 35, 36, 37, 38], "molar": [17, 36], "moment": 25, "more": [24, 33, 36, 37, 38], "morphologi": 38, "most": 32, "mostli": 38, "move": 33, "mr": 38, "mu": 32, "multi": [15, 26, 27, 33, 37, 38], "multilin": [8, 27], "multipl": [11, 26, 33], "mura": [29, 33], "must": 0, "n": [2, 4, 14, 21, 22, 24, 29, 30, 32, 37, 38], "name": [0, 2, 8, 10, 11, 19, 20, 27, 28, 29, 32, 33, 37, 38], "ndarrai": [1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36], "ndarrayfloat": [1, 6, 7, 8, 13, 15, 28, 30], "ndarrayint": [12, 15, 22, 27, 29], "ndim": [11, 25, 27, 33], "necessari": [24, 33], "need": [3, 16, 22, 24, 28, 34, 38], "neglig": 0, "neither": [0, 16, 22], "netherland": [3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 22, 23, 24, 25, 26, 27, 28, 29, 30], "new": [11, 29, 33], "nicola": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 37], "nl": [2, 4, 14, 21], "nm": 36, "nois": [2, 21, 25, 30, 31, 37, 38], "nomenclatur": 36, "non": [22, 32, 33, 38], "none": [1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34], "nor": [0, 16, 22], "norm": [6, 8, 10, 13, 22, 27, 28, 33, 38], "norm_cross_corr": 22, "normal": [6, 7, 10, 12, 22, 23, 25, 27, 33], "normalize_fouri": [1, 6, 7], "notabl": [11, 12, 26, 33], "note": [11, 12, 32], "notic": 0, "notimplementederror": 25, "nov": [16, 30, 32, 37, 38], "now": 33, "np": [10, 13, 15, 17, 22, 25, 26, 27, 28, 29, 30, 32, 34, 38], "nuclear": [8, 27, 33, 37], "nuclei": 30, "num_angl": 30, "num_averag": 13, "num_bucket": 29, "num_filt": 10, "num_per_ord": 13, "num_photon": 30, "num_pixel": [10, 29], "num_point": 15, "num_shift": 29, "num_thread": [13, 15, 26], "number": [1, 2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 19, 25, 26, 27, 28, 29, 30, 36], "numpi": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 38], "nyquist": 24, "o": 32, "object": [1, 11, 13, 16, 27, 29, 32], "obtain": 32, "off": 24, "offer": [1, 36], "offset": [6, 22], "ofview": 29, "omega": [25, 38], "one": [6, 7, 9, 12, 13, 15, 22, 32, 33, 36, 38], "ones": 38, "onli": [10, 12, 13, 15, 26, 28, 33, 38], "op": 27, "op_a": 29, "open": 37, "oper": [1, 2, 10, 24, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38], "optic": 26, "optim": 37, "option": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 36, 37, 38], "order": [1, 5, 10, 11, 13, 18, 25, 29, 33, 36], "order_to_str": 18, "org": 37, "organ": [7, 38], "orient": 33, "origin": [11, 22, 29, 38], "other": [0, 6, 7, 33, 37, 38], "other_ax": 25, "otherwis": [0, 24, 26], "our": 37, "out": [0, 5, 11, 13, 16, 30, 34, 37], "out_energi": 32, "out_energy_kev": 32, "outgo": [26, 30, 32], "outlier": 33, "output": [6, 13, 15, 18, 20, 22, 24, 26, 28, 29, 30, 33], "output_s": 3, "outsid": [6, 12, 33], "over": [7, 9, 11, 12, 17, 23, 24, 27, 33, 36], "overal": 33, "overhaul": 33, "p": [6, 30, 32, 38], "packag": [12, 33, 36, 37, 38], "pad": [6, 10, 12, 25, 27, 28, 33], "pad_axi": 25, "pad_mod": [6, 10, 12, 27, 28], "pad_on_demand": [12, 27], "pad_sinogram": 25, "pad_u": 6, "pad_width": 12, "pad_zyx": 6, "padding_u": 11, "page": [31, 35, 38], "pair": [7, 24], "paper": 37, "parabol": [13, 33], "parallel": [11, 13, 33, 38], "parallel3d": 11, "parallel_ev": 13, "param": 13, "param_tun": [2, 31], "paramet": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37], "parker": 33, "part": 16, "partial": 27, "particip": 37, "particular": [0, 34, 36], "particularli": 38, "pass": [1, 3, 7, 9, 15, 16, 22, 23, 24, 32, 33, 38], "past": 33, "patch_astra_2d": 11, "patrick": 37, "pattern": 29, "pdhg": [27, 28, 33, 37], "peak": [1, 6], "peak_radiu": 6, "pelt": [10, 33, 38], "pencil": [14, 29, 33], "pencil_beam_profil": 14, "per": [1, 13, 24, 25, 29, 30, 38], "percentil": 23, "perform": [6, 9, 12, 22, 33, 38], "permiss": 0, "permit": 0, "perspect": 34, "ph": [30, 32], "ph_or": [30, 32], "phantom": [30, 32, 33], "phantom_assign_concentr": [30, 32], "phantom_assign_concentration_multi": 30, "phase": [2, 6, 14, 30, 31, 33, 35], "photon": [15, 19, 30, 32, 34, 38], "photon_flux": 30, "phton": 30, "physic": [2, 30, 31, 32, 33, 34, 35, 37, 38], "pi": [15, 26, 30, 34], "piec": 27, "pip": [33, 37], "pix2vox": 11, "pix2vox_ratio": 11, "pix_size_um": 17, "pix_weight": 9, "pixel": [3, 6, 9, 10, 11, 13, 14, 15, 17, 22, 24, 26, 29, 30, 32, 33, 38], "pixel_size_um": 15, "place": [6, 27], "platform": 33, "pleas": [24, 37], "plot": [13, 15, 17, 22, 24, 25, 29, 33, 36], "plot_emission_line_attenu": 15, "plot_filt": 10, "plot_filter_respons": [17, 36], "plot_frc": 24, "plot_lines_mean": 15, "plot_map": [15, 32, 34], "plot_result": [13, 17, 29], "plot_transmittance_decai": 15, "plt": [32, 34], "pock": [28, 33, 37, 38], "point": [6, 13, 14, 15, 22, 24, 26, 30, 38], "poisson": [23, 30, 37, 38], "poly_ord": 25, "polynomi": 25, "portion": 33, "posit": [1, 3, 5, 6, 7, 11, 13, 22, 24, 29, 30, 32, 35, 36, 38], "possibl": [0, 29, 38], "possibli": [1, 33], "post": [2, 21, 31], "potenti": 33, "power": [24, 28, 30, 33], "power_method": 28, "power_spectrum": 24, "pp": [16, 24, 30, 32, 37, 38], "pre": [2, 7, 11, 12, 21, 26, 31, 33, 35], "precis": [5, 6, 7], "precision_decim": 7, "precomput": 26, "precondion": 33, "precondit": [28, 33], "predict": [16, 29], "prefer": 33, "present": [1, 32, 38], "prevent": 33, "previou": 34, "primal": [8, 27, 28, 37, 38], "prime": 29, "print": [13, 14, 25], "prior": [0, 38], "prj": [3, 24, 38], "prj_backend": 26, "prj_data": 24, "prj_geom": [1, 3, 26], "prj_intens": 26, "prj_shape": [12, 26], "prj_shape_vu": 3, "prj_shape_vwu": 3, "prj_vu": 26, "prj_vwu": 26, "probe": 30, "problem": [28, 36], "proceed": 32, "process": [2, 10, 11, 12, 31, 33, 34, 38], "procur": 0, "produc": [3, 13, 16, 20, 26, 29, 30, 34], "product": [0, 8, 16, 30, 32], "profil": [1, 7, 22, 30], "profile_s": 14, "profit": 0, "progress": [28, 33], "proj": 25, "proj_dvwu": 7, "proj_geom": 5, "proj_geom_al": 3, "proj_geom_ind": 3, "proj_id": 3, "proj_prim": 8, "proj_vwu": 6, "proj_wu": 6, "project": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 24, 25, 26, 28, 29, 32, 33, 35, 37], "project_displacement_to_detector": 11, "projectiongeometri": [1, 3, 5, 11, 26, 33], "projector": [1, 2, 3, 10, 11, 12, 15, 28, 29, 31, 32, 33, 34, 37], "projector_backend": 26, "projectorattenuationxrf": [26, 32, 33, 38], "projectorbackend": [3, 26, 38], "projectorbackendastra": 3, "projectorbackenddirectastra": 3, "projectorbackendskimag": 3, "projectorghostimag": 29, "projectormatrix": [26, 33], "projectoroper": [10, 12, 26, 29], "projectoruncorrect": [1, 26, 28, 32, 34, 38], "projs_wvu": 25, "promot": [0, 27], "pronounc": 37, "propag": [3, 17, 33, 36], "properti": [10, 11, 12, 13, 20, 26, 28, 29], "provid": [0, 1, 10, 19, 29, 30, 34, 36, 37, 38], "proxim": [8, 27], "psf": [9, 14, 26, 30, 32, 33], "pull": 37, "purpos": [0, 13, 34], "pwise_chan_norm": 27, "pwise_der_norm": 27, "pwise_lvl_norm": 27, "pycorrectedemissionct": 2, "pymr": 37, "pymrfbp": 10, "pypi": 33, "pyplot": 34, "pyproject": 33, "python": [33, 37], "pytorch": 33, "pywavelet": [12, 33], "q": 29, "qr": [29, 33], "question": 37, "r": [2, 4, 14, 21, 29], "r_w": 9, "rad2deg": 34, "radian": [7, 11, 26, 30, 38], "radiat": [15, 16, 17, 20, 36], "radio": 17, "radiu": [6, 22], "radius_offset": [22, 34], "rai": [16, 30, 32, 35, 37, 38], "rais": [3, 5, 6, 7, 11, 12, 13, 15, 16, 17, 22, 24, 25, 26, 28, 29], "ramp": [10, 28, 38], "random": [13, 29], "rang": [6, 12, 15, 17, 23, 24, 29, 36], "rate": 20, "ratio": [11, 24, 29], "re": [5, 29, 38], "reach": 10, "read": 30, "readabl": [11, 33], "reader": 38, "readout": 30, "readout_noise_std": 30, "real": [10, 17, 36], "reason": 28, "rec": 13, "rec_pr": 1, "rec_sirt_corr": 32, "rec_sirt_uncorr": 32, "rec_vol_zyx": 6, "receiv": 16, "recent": [5, 16, 33], "recentervolum": [4, 5], "recommend": 37, "reconstruct": [6, 10, 13, 22, 27, 28, 29, 33, 35, 36, 37], "red": [32, 34], "redistribut": 0, "ref_data_dvwu": 7, "ref_vol_zyx": 6, "refactor": 33, "refer": [1, 5, 6, 7, 10, 23, 24, 35, 36], "refine_max_position_1d": 6, "refine_max_position_2d": 6, "refract": 17, "reg_weight": 9, "regard": 38, "region": [6, 15, 22, 25, 27], "regist": 6, "regular": [2, 9, 13, 28, 31, 33, 35, 37], "regularizer_dwl": 27, "regularizer_fft": 27, "regularizer_grad": 27, "regularizer_hub_dwl": 27, "regularizer_hub_swl": 27, "regularizer_hubtv2d": 27, "regularizer_hubtv3d": 27, "regularizer_l1": 27, "regularizer_l12dwl": 27, "regularizer_l12swl": 27, "regularizer_l1dwl": 27, "regularizer_l1m": 27, "regularizer_l1swl": 27, "regularizer_l2m": 27, "regularizer_lap": 27, "regularizer_lap1d": 27, "regularizer_lap2d": 27, "regularizer_lap3d": 27, "regularizer_lnswl": 27, "regularizer_smooth1d": 27, "regularizer_smooth2d": 27, "regularizer_smooth3d": 27, "regularizer_swl": 27, "regularizer_tnv": 27, "regularizer_tv1d": 27, "regularizer_tv2d": 27, "regularizer_tv3d": 27, "regularizer_vl1wl": 27, "regularizer_vsvd": 27, "regularizer_vtv": 27, "rel": [1, 3], "relat": [28, 36], "relax": [27, 28, 33], "releas": 33, "relev": 34, "remark": 37, "remov": [7, 22, 25], "remove_zero": 22, "renam": 33, "renorm": 23, "reorder": 29, "reorder_mask": 29, "report": 33, "repositori": 30, "repres": 22, "represent": [3, 6, 10, 11, 22, 29], "reproduc": 0, "req_res_mm": 29, "request": [11, 13, 15, 17, 20, 22, 29, 36, 37, 38], "requir": [9, 10, 12, 29, 38], "rescal": [12, 33], "reserv": 0, "residu": [8, 28, 33], "residual0": 28, "residual0_cv": 28, "residuals_cv": 28, "residuals_cv_rel": 28, "residuals_rel": 28, "resolut": [24, 29, 33, 38], "resourc": [3, 38], "respect": [3, 5, 6, 16, 17, 22, 26, 30, 32, 33, 34, 36, 38], "respons": [17, 36], "rest": 28, "restructur": 33, "result": [1, 6, 7, 12, 13, 17, 25, 29, 32], "retain": 0, "return": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 36], "return_vertex_v": 6, "rfft": [6, 7, 10, 17, 33], "right": [0, 12, 32, 34, 37], "rightward": 34, "ring": 24, "rmatvec": 12, "roi": 15, "rot": 29, "rot_angle_deg": 25, "rot_angle_rad": 7, "rot_axis_dir": 11, "rot_axis_shift_pix": [3, 11, 26], "rot_dir_xyz": 11, "rot_dirs_valid": 11, "rot_ind": [15, 32], "rotat": [1, 3, 5, 6, 7, 11, 15, 25, 26, 33, 35, 38], "rotate_proj_stack": 25, "round": [13, 15, 26, 30], "roundup_to_pow2": 30, "routin": [1, 6, 22, 23, 24, 25, 33, 37], "row": [6, 12], "rule": 29, "sab": 16, "sad": 6, "same": [6, 22, 24, 28, 34, 38], "sampl": [3, 6, 11, 17, 22, 25, 32, 33, 34, 38], "sanit": 33, "sart": [3, 26, 28, 33, 37, 38], "satisfi": 29, "scalar": 22, "scale": [6, 11, 12, 13, 23, 24, 26, 29, 30, 33, 36, 38], "scan": [7, 30, 33], "scatter": 16, "scene": 35, "schatz": 24, "schoonjan": 16, "sci": [30, 32, 37, 38], "scikit": [3, 26, 28, 33, 34, 37, 38], "scipi": [12, 26, 33, 38], "search": [6, 35], "search_rag": 6, "search_rang": 6, "sech": [15, 33], "second": [6, 22, 24, 30, 32], "section": [19, 34, 36, 38], "see": [34, 37], "seen": [32, 34], "select": [6, 10, 15, 22, 33, 35, 37], "self": [1, 35], "semant": 33, "semilog": 23, "sensit": 33, "sep": 24, "sequenc": [3, 6, 8, 9, 10, 11, 12, 13, 15, 16, 17, 20, 22, 24, 25, 26, 27, 28, 29, 30, 36], "sequenti": 29, "serv": 38, "servic": 0, "set": [6, 7, 9, 11, 12, 13, 28, 33, 38], "set_detector_shape_vu": 11, "set_detector_shifts_vu": [1, 11], "set_detector_tilt": 11, "set_source_shifts_vu": 11, "set_titl": [32, 34], "setup": [33, 37], "shall": 0, "shape": [3, 6, 10, 11, 12, 13, 15, 17, 22, 24, 25, 26, 28, 29, 32, 33], "shape_fov": 29, "shape_mask": 29, "shape_shift": 29, "shape_xyz": 11, "shape_zxi": 11, "sharei": [32, 34], "sharex": [32, 34], "shell": [20, 24], "shepp": [10, 38], "shift": [1, 2, 3, 4, 5, 6, 11, 25, 26, 29, 31, 33, 38], "shift_proj_stack": 25, "shift_typ": 29, "shifts_u": [11, 29], "shifts_v": [11, 29], "shifts_vu": [5, 7], "shortcut": 33, "should": [3, 12, 17, 25, 32, 38], "show": [15, 32], "shown": 32, "shrink": 32, "side": 32, "siegbahn": [20, 33, 36], "sigma": [8, 25, 27], "sigma_data": 8, "sign": 33, "signal": [23, 24, 30, 36, 38], "similar": [27, 34, 36, 38], "simpl": [20, 29, 33, 38], "simplest": 38, "simpli": 37, "simplifi": [10, 26, 33, 36], "simul": [30, 32, 37, 38], "simultan": [28, 37, 38], "sinc": 32, "sine": 6, "singl": [3, 26, 29], "single_lin": 26, "singular": [12, 27], "sino": [26, 32, 38], "sino_lin": 26, "sino_noatt": 32, "sino_wu": 34, "sinogram": [3, 7, 9, 10, 25, 26, 30, 32, 33, 35, 38], "sinusoid": [1, 6, 7], "sirt": [1, 27, 28, 32, 33, 37], "sit": 34, "size": [6, 10, 11, 15, 16, 17, 22, 24, 25, 29, 30, 32, 33, 38], "skimag": [26, 34, 38], "slice": [8, 11, 15], "slice_ind": 15, "slowest": 1, "slurm": 37, "small": [33, 36], "smooth": [10, 24, 27, 33], "smooth1d": 27, "smooth2d": 27, "smooth3d": 27, "smoother": 22, "snr": 24, "snrt": 24, "softwar": [0, 37], "solid": [20, 26, 30], "solid_angle_sr": 20, "solut": [8, 27, 28, 38], "solutioninfo": [13, 28], "solver": [1, 2, 12, 13, 31, 32, 33, 37], "solver_calling_funct": 13, "solver_fbp": 38, "solver_sirt": [32, 38], "solver_spawning_funct": 13, "sol\u00e9": [30, 32, 37, 38], "some": [7, 24, 32, 33, 36], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36], "space": [7, 10, 12, 17, 24, 25, 27, 33, 36], "spars": [12, 26, 27, 33, 38], "spawn": 13, "special": 0, "specif": [0, 15, 17, 29, 34, 36, 38], "specifi": [3, 6, 22, 26, 36, 38], "spectral": 15, "spectral_norm": [8, 27], "spectrochim": 16, "spectrosc": 16, "spectrum": [24, 33], "sphinx": 31, "split": 24, "spmatrix": 26, "spread": [14, 26, 30], "squar": [9, 11, 23, 29, 33, 38], "squeez": [22, 32], "src": 33, "src_pos_vu": 11, "src_pos_xyz": 11, "src_to_sam_dist": 11, "stack": [6, 7, 17, 22, 25, 33, 35, 36], "stack_axi": 6, "stand": [28, 38], "standard": [9, 13, 23, 30, 33], "start": [10, 13, 15, 35], "start_angle_deg": 30, "start_exp_bin": 10, "stat": 27, "state": 27, "statement": [26, 38], "static": [3, 7, 11, 13, 18, 20, 28, 29, 36], "staticmethod": 36, "stationari": [12, 27, 33], "step": [13, 37], "still": 32, "stop": 28, "store": [11, 13, 29], "str": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 36], "str_to_ord": 18, "strict": 0, "string": [3, 8, 11, 19, 22, 27, 28, 29, 38], "stripe": 25, "strong": 32, "struct": 24, "struct_illum": [2, 31, 33], "structur": [19, 29, 33, 34], "studi": [30, 32, 37, 38], "sub": [6, 20, 24, 33, 36, 38], "subject": [23, 38], "submit": 37, "submodul": 33, "subplot": [32, 34], "substitut": 0, "subtract": 29, "subtract_mean": 29, "suggest": [7, 38], "sum": 6, "sun": 29, "super": [3, 11, 22, 33], "super_sampl": [3, 11, 22], "supersampl": 24, "suppli": 16, "support": [1, 3, 10, 12, 15, 16, 17, 20, 25, 26, 29, 33, 36, 37, 38], "suppos": [32, 38], "suptitl": 34, "sure": 3, "surface_mm2": 20, "svd": 12, "swap": 11, "switch": 30, "swl": 27, "symbol": [19, 30], "symmetr": [12, 26, 33], "synchrotron": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30], "synthet": 35, "system": [26, 37, 38], "t": [16, 19, 24, 37, 38], "t_hb": 24, "t_match": 22, "take": [7, 26, 37, 38], "taper": [24, 33], "taper_func": 22, "taper_ratio": 24, "taper_target": 22, "target": [17, 22, 33], "tau": 27, "techniqu": [28, 34, 37, 38], "technol": [30, 32, 37, 38], "tell": 11, "templat": 22, "term": [8, 9, 27, 28, 33, 35, 37], "terminologi": 34, "test": [2, 9, 28, 31, 32, 33], "test_angl": 34, "test_fract": 13, "than": [3, 25, 33, 36], "thank": 33, "thei": [1, 11, 15, 38], "them": [22, 29], "theo_threshold": 24, "theoret": 33, "theori": 0, "thi": [0, 3, 6, 10, 11, 12, 24, 27, 28, 31, 32, 33, 34, 36, 37, 38], "thick": 15, "thickness_range_um": 15, "thickness_um": 15, "thouroughli": 33, "thread": [15, 26, 33], "threadpoolexecutor": 26, "threashold": 24, "three": 12, "threshod": 24, "threshold": [8, 24], "through": [1, 6, 11, 16, 29, 36, 37, 38], "throw": 3, "thu": [30, 38], "tick_param": [32, 34], "tie": [17, 33, 36], "tight_layout": [32, 34], "tilt": [6, 11, 33], "tilt_axi": 11, "tilt_sourc": 11, "time": 30, "titl": 24, "tnv": [27, 33, 37], "to_com": 5, "to_fouri": 10, "to_real": 10, "to_unit": 18, "toler": [16, 28], "toml": 33, "tomograph": [1, 3, 7, 26, 28, 36, 37, 38], "tomographi": [24, 30, 32, 37, 38], "too": 7, "tool": [1, 36], "toolbox": [3, 11, 33, 37, 38], "top": [2, 34], "topic": 38, "torch": 29, "tort": 0, "total": [27, 29, 33, 37], "toward": 33, "track": 33, "tradit": 10, "tran": 25, "trans_wvu": 25, "transact": [10, 38], "transfer": [17, 36], "transform": [6, 7, 12, 25, 33], "transformconvolut": 12, "transformdecimatedwavelet": 12, "transformdiagonalsc": 12, "transformfouri": 12, "transformfunct": 12, "transformgradi": 12, "transformident": [12, 24], "transformlaplacian": 12, "transformstationarywavelet": 12, "transformsvd": 12, "transit": 20, "transmiss": [23, 25, 33], "transmit": 23, "transmitt": [15, 29], "transport": 17, "transpos": [12, 26], "treat": 36, "true": [1, 6, 7, 9, 10, 11, 12, 13, 15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 32, 34], "truncat": [6, 24, 33], "truth": 13, "try": 32, "tue": [6, 24], "tune": [13, 33], "tupl": [1, 6, 7, 9, 12, 13, 15, 16, 17, 19, 22, 24, 25, 28, 29, 30], "turn": [9, 28, 30], "tutori": [32, 33, 35, 36], "tv": [27, 33, 37, 38], "tv1d": 27, "tv2d": 27, "tv3d": 27, "two": [6, 7, 12, 22, 24, 32, 36, 37, 38], "type": [3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34], "typo": 33, "u": [1, 6, 7, 11, 12, 25, 32, 34, 38], "uncertainti": 33, "uncorrect": [32, 33], "undeci": 33, "under": 37, "underli": 38, "undersampl": 29, "uneven": 33, "unfilt": 10, "unifi": 33, "union": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 36], "unit": [2, 14, 30, 31, 33, 35], "unit_en": 18, "unit_wl": 18, "unknown": 22, "unmatch": 33, "unprecondit": 33, "unscal": 29, "unsupport": 15, "unus": 24, "up": [30, 34], "upd": 27, "upd_mask": 27, "updat": [8, 27, 33], "update_du": [8, 27], "uplim": 27, "upper": [8, 27, 28, 29, 33], "upper_limit": [28, 38], "us": [0, 1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38], "usag": [33, 38], "use_deriv": [1, 7], "use_fft": 25, "use_lstsq": 29, "use_multithread": [15, 26], "use_rfft": [1, 6, 7, 10, 17], "use_std": 23, "user": [33, 37, 38], "usual": [12, 37, 38], "util": [30, 33], "v": [1, 7, 11, 12, 25, 30, 32, 33, 34, 37, 38], "vale": 29, "valid": [9, 13, 23, 33, 37, 38], "valu": [1, 6, 7, 8, 9, 11, 12, 13, 15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 38], "valuea": 17, "valueerror": [3, 5, 6, 7, 11, 12, 13, 15, 16, 17, 22, 24, 25, 26, 28, 29], "van": 24, "var_i0": 23, "vari": 1, "variabl": [6, 38], "varianc": [23, 38], "variant": 37, "variat": [27, 33, 37], "variou": [33, 36, 37, 38], "vector": [11, 12, 27, 28], "vectori": 27, "verbos": [6, 7, 9, 13, 14, 15, 16, 20, 24, 25, 26, 28, 29, 32, 33, 36], "veri": 38, "versa": [33, 36], "version": [2, 11, 12, 28, 33], "vertex": 6, "vertic": [1, 6, 7, 11, 25, 29, 38], "vice": [33, 36], "view": [29, 30], "vigano": [2, 4, 14, 21, 37], "vigan\u00f2": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 37, 38], "visual": [33, 34], "vl1wl": 27, "vmax": 34, "vmin": 34, "vol": [3, 16, 24, 26, 38], "vol_att_in": [30, 32], "vol_att_out": [30, 32], "vol_att_test": 34, "vol_fluo_yield": 30, "vol_geom": [1, 3, 26, 32], "vol_lin_att_in": 32, "vol_lin_att_out": 32, "vol_origin_zxi": 22, "vol_shap": [12, 26, 32, 34], "vol_shape_xi": 38, "vol_shape_zxi": [3, 22], "vol_shape_zyx": 15, "vol_yield": 30, "volum": [3, 5, 6, 11, 12, 15, 16, 22, 24, 26, 27, 30, 32, 33, 34, 36, 38], "volume_obj": 32, "volume_pair": 24, "volumegeometri": [3, 11, 26, 33], "volumemateri": [14, 16, 32, 36, 38], "vox_siz": 11, "voxel": [3, 11, 16, 22, 30, 32, 33], "voxel_size_cm": [16, 32], "voxel_size_um": [14, 30], "vsvd": 27, "vt": 12, "vtv": 27, "vu": [5, 6, 7, 11, 33], "vwu": 3, "w": [1, 7, 25, 32, 38], "w_length": 18, "wa": [22, 24], "wai": [0, 33, 34, 38], "walk": [36, 38], "want": [24, 29, 37], "warn": 33, "warranti": 0, "wave": [17, 36], "wavelength": [17, 18, 36], "wavelet": [9, 10, 12, 25, 27, 33, 37, 38], "we": [1, 15, 24, 29, 32, 34, 36, 37, 38], "weight": [8, 9, 11, 12, 13, 20, 23, 26, 27, 33, 38], "weights_angl": 26, "weights_detector": 26, "weigth": 33, "welcom": 37, "well": 36, "were": 15, "what": [34, 35], "when": [1, 3, 7, 11, 12, 15, 17, 22, 24, 26, 27, 28, 32, 33, 38], "where": [1, 6, 15, 29, 32, 38], "whether": [0, 3, 6, 7, 10, 11, 12, 13, 14, 15, 17, 20, 22, 23, 24, 25, 26, 28, 29, 30], "whethert": 10, "which": [1, 3, 6, 10, 12, 15, 17, 19, 22, 24, 27, 29, 32, 34, 36, 37, 38], "while": [7, 12, 32, 38], "who": 37, "whole": 20, "whose": 28, "wide": [33, 37], "width": [15, 25], "window": [6, 10, 24, 33], "window_typ": 6, "wise": [9, 17, 22, 27, 30], "within": 13, "without": [0, 25], "wl2": 8, "wlength_to_energi": [18, 36], "wlength_um": 17, "wlet_dec_filter_mult": 12, "wlet_rec_filter_mult": 12, "won": 19, "work": [6, 24, 33, 36], "workflow": 33, "written": 0, "wrong": [5, 22, 29], "wu": [25, 38], "x": [3, 6, 8, 11, 12, 16, 26, 28, 29, 30, 32, 35, 37, 38], "x0": [28, 33, 38], "x_lim": 22, "x_mask": 28, "x_ref": 27, "x_shape": 12, "xc": 5, "xc_opt": 7, "xraylib": [14, 16, 19, 20, 36], "xraylib_help": [2, 14, 31], "xrf": [2, 14, 16, 26, 30, 31, 32, 33, 34, 36, 38], "xy": 11, "xyz": [11, 33], "xz": 11, "y": [11, 12, 26], "yet": 33, "yield": 30, "you": 37, "your": 37, "yx": 38, "z": [11, 26, 38], "zero": [6, 8, 22, 27, 34], "zxy": [3, 11, 33], "zyx": 6, "\u03b1": 36, "\u03b2": 36}, "titles": ["&lt;no title&gt;", "Alignment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct._projector_backends</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.alignment</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.alignment.centering</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.alignment.fitting</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.alignment.shifts</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.data_terms</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.denoisers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.filters</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.models</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.operators</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.param_tuning</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.physics</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.physics.attenuation</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.physics.materials</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.physics.phase</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.physics.units</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.physics.xraylib_helper</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.physics.xrf</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.processing</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.processing.misc</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.processing.noise</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.processing.post</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.processing.pre</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.projectors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.regularizers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.solvers</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.struct_illum</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">corrct.testing</span></code>", "API Reference", "Attenuation correction", "Changelog", "Reconstruction geometry", "Welcome to the documentation of PyCorrectedEmissionCT!", "Physics", "PyCorrectedEmissionCT (corrct)", "Tutorial (basics)"], "titleterms": {"0": 33, "01": 33, "02": 33, "03": 33, "04": 33, "05": 33, "06": 33, "08": 33, "09": 33, "1": 33, "10": 33, "11": 33, "12": 33, "14": 33, "15": 33, "16": 33, "17": 33, "2": 33, "20": 33, "2019": 33, "2020": 33, "2021": 33, "2022": 33, "2023": 33, "2024": 33, "2025": 33, "23": 33, "24": 33, "25": 33, "27": 33, "29": 33, "3": 33, "30": 33, "31": 33, "4": 33, "5": 33, "6": 33, "7": 33, "8": 33, "9": 33, "The": 38, "_projector_backend": 3, "ad": 33, "align": [1, 4, 5, 6, 7], "api": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "attenu": [15, 32, 34, 36, 38], "author": 37, "basic": 38, "beam": 34, "behind": 32, "center": 5, "changelog": 33, "class": [3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 18, 20, 26, 27, 28, 29], "comput": 32, "conda": 37, "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30], "contrast": 36, "contribut": 37, "contributor": 37, "convers": 36, "corrct": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 37], "correct": [32, 38], "creation": 32, "data": [2, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 38], "data_term": 8, "denois": 9, "detector": 34, "direct": 34, "document": 35, "exampl": 37, "fbp": 38, "fidel": 38, "filter": 10, "fit": 6, "fix": 33, "flip": 34, "fluoresc": 36, "from": 37, "function": [2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 29, 30], "geometri": [34, 38], "get": 37, "guid": 38, "happen": 32, "how": 37, "imag": 1, "incom": 34, "indic": 35, "instal": 37, "licens": 37, "local": 32, "map": 32, "materi": [16, 36], "misc": 22, "mlem": 38, "model": [11, 36, 38], "modul": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30], "nois": 23, "oper": 12, "packag": [2, 4, 14, 21], "param_tun": 13, "paramet": 38, "pdhg": 38, "phase": [17, 36], "physic": [14, 15, 16, 17, 18, 19, 20, 36], "posit": 34, "post": 24, "pre": [1, 25], "process": [21, 22, 23, 24, 25], "project": 38, "projector": [26, 38], "pycorrectedemissionct": [35, 37], "pypi": 37, "rai": 36, "reconstruct": [32, 34, 38], "refer": [31, 38], "regular": [27, 38], "rotat": 34, "run": 37, "scene": 32, "select": 38, "self": 34, "shift": 7, "sinogram": 34, "sirt": 38, "solver": [28, 38], "sourc": 37, "stack": 1, "start": 37, "struct_illum": 29, "submodul": [2, 4, 14, 21], "subpackag": 2, "synthet": 32, "tabl": 35, "term": 38, "test": 30, "tutori": 38, "unit": [18, 36], "welcom": 35, "what": 32, "x": 36, "xraylib_help": 19, "xrf": 20}})